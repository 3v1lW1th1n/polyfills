{"version":3,"sources":["/src/html-imports.js"],"names":["scope","constructor","Importer","documents","observe","MutationObserver","_onMutation","bind","document","head","childList","useNative","imports","querySelectorAll","IMPORT_SELECTOR","i","l","length","whenElementLoaded","_loader","Loader","_onLoaded","_onLoadedAll","whenDocumentReady","_loadSubtree","onLoad","onComplete","cache","onload","oncomplete","inflight","pending","isImportLink","node","nodeType","Node","ELEMENT_NODE","MATCHES","call","element","then","Promise","resolve","isElementLoaded","isIE","localName","isLoaded","textContent","indexOf","sheet","cssRules","csr","len","r","type","CSSRule","IMPORT_RULE","styleSheet","setTimeout","addEventListener","import","readyState","whenReady","callback","whenImportsReady","stateChanged","removeEventListener","rootImportsSelector","promises","imp","push","all","importForElement","target","parentNode","host","createElement","currentScript","Object","defineProperty","get","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","Path","fixUrls","base","href","setAttribute","replaceAttrUrl","getAttribute","src","resolveUrlsInStyle","fixUrlAttributes","attrs","a","at","attributes","v","value","search","resolveUrlsInCssText","fixUrlsInTemplates","t$","fixUrlsInTemplate","template","content","n$","n","style","linkUrl","cssText","replaceUrls","text","regexp","replace","m","pre","url","post","urlPath","_resolveUrl","test","undefined","__workingURL","u","URL","pathname","e","doc","__tempDoc","implementation","createHTMLDocument","__base","appendChild","__anchor","Xhr","async","load","request","XMLHttpRequest","open","redirectedUrl","locationHeader","getResponseHeader","substr","location","origin","console","error","message","status","response","responseText","send","addNodes","nodes","count","require","checkDone","addNode","elt","dedupe","fetch","tail","match","pieces","split","body","header","atob","decodeURIComponent","receive","resource","err","$p","p","navigator","userAgent","Element","prototype","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","_makeDocument","display","innerHTML","baseEl","querySelector","removeChild","s$","s","importsSelector","importDependencyAttr","importDisableType","_flatten","_waitForStyles","_runScripts","_fireEvents","_observe","pendingScriptsSelector","promise","clone","loadedPromise","j","ll","attr","name","replaceChild","pendingStylesSelector","rootImport","insertBefore","removeAttribute","hasAttribute","dispatchEvent","CustomEvent","eventType","bubbles","cancelable","detail","subtree","mutations","addedNodes","window","HTMLImports"],"mappings":"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","file":"html-imports.min.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(function(scope) {\n\n  /********************* base setup *********************/\n  const IMPORT_SELECTOR = 'link[rel=import]';\n  const useNative = Boolean('import' in document.createElement('link'));\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get: function() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat. This is not needed by\n          // html-imports polyfill but helps generally polyfill `currentScript`.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n\n    fixUrls: function(element, base) {\n      if (element.href) {\n        element.setAttribute('href',\n          Path.replaceAttrUrl(element.getAttribute('href'), base));\n      }\n      if (element.src) {\n        element.setAttribute('src',\n          Path.replaceAttrUrl(element.getAttribute('src'), base));\n      }\n      if (element.localName === 'style') {\n        Path.resolveUrlsInStyle(element, base);\n      } else if (element.localName === 'script' && element.textContent) {\n        element.textContent += `\\n//# sourceURL=${base}`;\n      }\n    },\n\n    fixUrlAttributes: function(element, base) {\n      const attrs = ['action', 'src', 'href', 'url', 'style'];\n      for (let i = 0, a; i < attrs.length && (a = attrs[i]); i++) {\n        const at = element.attributes[a];\n        const v = at && at.value;\n        if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n          at.value = (a === 'style') ?\n            Path.resolveUrlsInCssText(v, base) :\n            Path.replaceAttrUrl(v, base);\n        }\n      }\n    },\n\n    fixUrlsInTemplates: function(element, base) {\n      const t$ = element.querySelectorAll('template');\n      for (let i = 0; i < t$.length; i++) {\n        Path.fixUrlsInTemplate(t$[i], base);\n      }\n    },\n\n    fixUrlsInTemplate: function(template, base) {\n      const content = template.content;\n      if (!content) { // Template not supported.\n        return;\n      }\n      const n$ = content.querySelectorAll(\n        'style, form[action], [src], [href], [url], [style]');\n      for (let i = 0; i < n$.length; i++) {\n        const n = n$[i];\n        if (n.localName == 'style') {\n          Path.resolveUrlsInStyle(n, base);\n        } else {\n          Path.fixUrlAttributes(n, base);\n        }\n      }\n      Path.fixUrlsInTemplates(content, base);\n    },\n\n    resolveUrlsInStyle: function(style, linkUrl) {\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText: function(cssText, linkUrl) {\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls: function(text, linkUrl, regexp) {\n      return text.replace(regexp, function(m, pre, url, post) {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path._resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl: function(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return Path._resolveUrl(text, linkUrl);\n      }\n    },\n\n    _resolveUrl: function(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @param {!function(boolean, ?, string=)} callback\n     * @return {XMLHttpRequest}\n     */\n    load: function(url, callback) {\n      const request = new XMLHttpRequest();\n      request.open('GET', url, Xhr.async);\n      request.addEventListener('readystatechange', (e) => {\n        if (request.readyState === 4) {\n          // Servers redirecting an import can add a Location header to help us\n          // polyfill correctly.\n          let redirectedUrl = undefined;\n          try {\n            const locationHeader = request.getResponseHeader('Location');\n            if (locationHeader) {\n              // Relative or full path.\n              redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\n                location.origin + locationHeader : locationHeader;\n            }\n          } catch (e) {\n            console.error(e.message);\n          }\n          const isOk = ((request.status >= 200 && request.status < 300) ||\n            request.status === 304 || request.status === 0);\n          const resource = (request.response || request.responseText);\n          callback(!isOk, resource, redirectedUrl);\n        }\n      });\n      request.send();\n      return request;\n    }\n  };\n\n  /********************* loader *********************/\n  // This loader supports a dynamic list of urls\n  // and an oncomplete callback that is called when the loader is done.\n  // NOTE: The polyfill currently does *not* need this dynamism or the\n  // onComplete concept. Because of this, the loader could be simplified\n  // quite a bit.\n  class Loader {\n    constructor(onLoad, onComplete) {\n      this.cache = {};\n      this.onload = onLoad;\n      this.oncomplete = onComplete;\n      this.inflight = 0;\n      this.pending = {};\n    }\n\n    /**\n     * @param {!NodeList<!Element>} nodes\n     */\n    addNodes(nodes) {\n      const count = nodes.length;\n      if (!count) {\n        return;\n      }\n      this.inflight += count;\n      for (let i = 0; i < count; i++) {\n        this.require(nodes[i]);\n      }\n      this.checkDone();\n    }\n\n    /**\n     * @param {!Element} node\n     */\n    addNode(node) {\n      // number of transactions to complete\n      this.inflight++;\n      // commence transactions\n      this.require(node);\n      // anything to do?\n      this.checkDone();\n    }\n\n    /**\n     * @param {!Element} elt\n     */\n    require(elt) {\n      const url = elt.href || elt.src;\n      // deduplication\n      if (!this.dedupe(url, elt)) {\n        // fetch this resource\n        this.fetch(url, elt);\n      }\n    }\n\n    /**\n     * @param {string} url\n     * @param {!Element} elt\n     * @return {boolean}\n     */\n    dedupe(url, elt) {\n      if (this.pending[url]) {\n        // add to list of nodes waiting for inUrl\n        this.pending[url].push(elt);\n        // don't need fetch\n        return true;\n      }\n      let resource;\n      if (this.cache[url]) {\n        this.onload(url, elt, this.cache[url]);\n        // finished this transaction\n        this.tail();\n        // don't need fetch\n        return true;\n      }\n      // first node waiting for inUrl\n      this.pending[url] = [elt];\n      // need fetch (not a dupe)\n      return false;\n    }\n\n    /**\n     * @param {string} url\n     * @param {!Element} elt\n     */\n    fetch(url, elt) {\n      if (!url) {\n        this.receive(url, elt, true, 'error: href must be specified');\n      } else if (url.match(/^data:/)) {\n        // Handle Data URI Scheme\n        const pieces = url.split(',');\n        const header = pieces[0];\n        let body = pieces[1];\n        if (header.indexOf(';base64') > -1) {\n          body = atob(body);\n        } else {\n          body = decodeURIComponent(body);\n        }\n        this.receive(url, elt, false, body);\n      } else {\n        Xhr.load(url, (error, resource, redirectedUrl) =>\n          this.receive(url, elt, error, resource, redirectedUrl));\n      }\n    }\n\n    /**\n     * @param {!string} url\n     * @param {!Element} elt\n     * @param {boolean} err\n     * @param {string=} resource\n     * @param {string=} redirectedUrl\n     */\n    receive(url, elt, err, resource, redirectedUrl) {\n      this.cache[url] = resource;\n      const $p = this.pending[url];\n      for (let i = 0, l = $p.length, p;\n        (i < l) && (p = $p[i]); i++) {\n        // If url was redirected, use the redirected location so paths are\n        // calculated relative to that.\n        this.onload(url, p, resource, err, redirectedUrl);\n        this.tail();\n      }\n      this.pending[url] = null;\n    }\n\n    tail() {\n      --this.inflight;\n      this.checkDone();\n    }\n\n    checkDone() {\n      if (!this.inflight) {\n        this.oncomplete();\n      }\n    }\n  }\n\n  /********************* importer *********************/\n\n  const isIE = /Trident/.test(navigator.userAgent) ||\n    /Edge\\/\\d./i.test(navigator.userAgent);\n\n\n  const importsSelector = `\n    ${IMPORT_SELECTOR},\n    style:not([type]),\n    link[rel=stylesheet][href]:not([type]),\n    script:not([type]),\n    script[type=\"application/javascript\"],\n    script[type=\"text/javascript\"]`;\n\n  const importDependencyAttr = 'import-dependency';\n\n  const rootImportsSelector = `${IMPORT_SELECTOR}:not(${importDependencyAttr})`;\n\n  const pendingScriptsSelector = `script[${importDependencyAttr}]`;\n\n  const pendingStylesSelector = `style[${importDependencyAttr}],\n    link[rel=stylesheet][${importDependencyAttr}]`;\n\n  // Used to disable loading of resources.\n  const importDisableType = 'import-disable';\n\n  /**\n   * @type {Function}\n   */\n  const MATCHES = Element.prototype.matches ||\n    Element.prototype.matchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.oMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    constructor() {\n      this.documents = {};\n\n      // Observe only document head\n      new MutationObserver(this._onMutation.bind(this)).observe(document.head, {\n        childList: true\n      });\n\n      if (useNative) {\n        // Make sure to catch any imports that are in the process of loading\n        // when this script is run.\n        const imports = document.querySelectorAll(IMPORT_SELECTOR);\n        for (let i = 0, l = imports.length; i < l; i++) {\n          whenElementLoaded(imports[i]);\n        }\n      } else {\n        this._loader = new Loader(\n          this._onLoaded.bind(this), this._onLoadedAll.bind(this)\n        );\n        whenDocumentReady(() => this._loadSubtree(document));\n      }\n    }\n\n    /**\n     * @param {!(HTMLElement|Document)} node\n     */\n    _loadSubtree(node) {\n      const nodes = node.querySelectorAll(IMPORT_SELECTOR);\n      this._loader.addNodes(nodes);\n    }\n\n    _onLoaded(url, elt, resource, err, redirectedUrl) {\n      // We've already seen a document at this url, return.\n      if (this.documents[url] !== undefined) {\n        return;\n      }\n      if (err) {\n        this.documents[url] = null;\n      } else {\n        // Generate a document from data.\n        const doc = this._makeDocument(resource, redirectedUrl || url);\n        // note, we cannot use MO to detect parsed nodes because\n        // SD polyfill does not report these as mutations.\n        this._loadSubtree(doc);\n        this.documents[url] = doc;\n      }\n    }\n\n    /**\n     * Creates a new document containing resource and normalizes urls accordingly.\n     * @param {string=} resource\n     * @param {string=} url\n     * @return {!HTMLElement}\n     */\n    _makeDocument(resource, url) {\n      const content = /** @type {HTMLElement} */\n        (document.createElement('import-content'));\n\n      content.style.display = 'none';\n      if (url) {\n        content.setAttribute('import-href', url);\n      }\n      if (resource) {\n        content.innerHTML = resource;\n      }\n\n      // Support <base> in imported docs. Resolve url and remove it from the parent.\n      const baseEl = content.querySelector('base');\n      if (baseEl) {\n        url = Path.replaceAttrUrl(baseEl.getAttribute('href'), url);\n        baseEl.parentNode.removeChild(baseEl);\n      }\n\n      // This is specific to users of <dom-module> (Polymer).\n      // TODO(valdrin) remove this when Polymer uses importForElement.\n      const s$ = content.querySelectorAll('dom-module');\n      for (let i = 0, s; i < s$.length && (s = s$[i]); i++) {\n        s.setAttribute('assetpath',\n          Path.replaceAttrUrl(s.getAttribute('assetpath') || '', url));\n      }\n\n      const n$ = content.querySelectorAll(importsSelector);\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        n['__ownerImport'] = content;\n        // Mark for easier selectors.\n        n.setAttribute(importDependencyAttr, '');\n        // Disable loading.\n        if (n.localName === 'script') {\n          n['__originalType'] = n.getAttribute('type');\n          n.setAttribute('type', importDisableType);\n        } else if (isIE && !isImportLink(n)) {\n          n.setAttribute('type', importDisableType);\n        }\n\n        Path.fixUrls(n, url);\n      }\n      Path.fixUrlsInTemplates(content, url);\n      return content;\n    }\n\n    _onLoadedAll() {\n      this._flatten();\n      // Scripts and styles are executed in sequentially so that styles are\n      // applied before scripts run.\n      this._waitForStyles()\n        .then(() => this._runScripts())\n        .then(() => this._fireEvents());\n    }\n\n    /**\n     * @param {(HTMLElement|Document)=} element\n     */\n    _flatten(element) {\n      element = element || document;\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (element.querySelectorAll(IMPORT_SELECTOR));\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        n.import = this.documents[n.href];\n        if (n.import && !n.import['__firstImport']) {\n          n.import['__firstImport'] = n;\n          this._flatten(n.import);\n          // If in the main document, observe for any imports added later.\n          if (element === document) {\n            this._observe(n.import);\n          }\n          n.appendChild(n.import);\n        }\n      }\n    }\n\n    /**\n     * Replaces all the imported scripts with a clone in order to execute them.\n     * Updates the `currentScript`.\n     * @return {Promise} Resolved when scripts are loaded.\n     */\n    _runScripts() {\n      const s$ = document.querySelectorAll(pendingScriptsSelector);\n      let promise = Promise.resolve();\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        promise = promise.then(() => {\n          const clone = document.createElement('script');\n\n          // Setting `src` will trigger load/error events, so listen for those\n          // before setting the attributes. For inline scripts, consider them\n          // already loaded.\n          let loadedPromise;\n          if (s.src) {\n            loadedPromise = whenElementLoaded(clone);\n          } else {\n            clone['__loaded'] = true;\n            loadedPromise = Promise.resolve(clone);\n          }\n\n          // Copy attributes and textContent.\n          for (let j = 0, ll = s.attributes.length; j < ll; j++) {\n            const attr = s.attributes[j];\n            if (attr.name === 'type') {\n              clone.setAttribute(attr.name, s['__originalType'] || 'text/javascript');\n            } else {\n              clone.setAttribute(attr.name, attr.value);\n            }\n          }\n          clone.textContent = s.textContent;\n\n          // Update currentScript and replace original with clone script.\n          currentScript = clone;\n          s.parentNode.replaceChild(clone, s);\n          // Listen for load/error events before adding the clone to the document.\n          // After is loaded, reset currentScript.\n          return loadedPromise.then(() => currentScript = null);\n        });\n      }\n      return promise;\n    }\n\n    /**\n     * Waits for all the imported stylesheets/styles to be loaded.\n     * @return {Promise}\n     */\n    _waitForStyles() {\n      const s$ = document.querySelectorAll(pendingStylesSelector);\n      const promises = [];\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        // <link rel=stylesheet> should be appended to <head>. Not doing so\n        // in IE/Edge breaks the cascading order\n        // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n        if (isIE && s.parentNode !== document.head) {\n          let rootImport = importForElement(s);\n          while (rootImport && importForElement(rootImport)) {\n            rootImport = importForElement(rootImport);\n          }\n          if (rootImport.parentNode === document.head) {\n            document.head.insertBefore(s, rootImport);\n          } else {\n            document.head.appendChild(s);\n          }\n        }\n\n        // Listen for load/error events, remove selector once is done loading.\n        promises.push(whenElementLoaded(s)\n          .then(() => s.removeAttribute(importDependencyAttr)));\n\n        if (s.hasAttribute('type')) {\n          // Enables the loading!\n          s.removeAttribute('type');\n          if (s.localName === 'style') {\n            s.textContent += '';\n          }\n        }\n      }\n      return Promise.all(promises);\n    }\n\n    /**\n     * Fires load/error events for loaded imports.\n     */\n    _fireEvents() {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (document.querySelectorAll(IMPORT_SELECTOR));\n      // Inverse order to have events firing bottom-up.\n      for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n        // Don't fire twice same event.\n        if (!n['__loaded']) {\n          n['__loaded'] = true;\n          const eventType = n.import ? 'load' : 'error';\n          n.dispatchEvent(new CustomEvent(eventType, {\n            bubbles: false,\n            cancelable: false,\n            detail: undefined\n          }));\n        }\n      }\n    }\n\n    _observe(element) {\n      if (element['__importObserver']) {\n        return;\n      }\n      element['__importObserver'] = new MutationObserver(this._onMutation.bind(this));\n      element['__importObserver'].observe(element, {\n        childList: true,\n        subtree: true\n      });\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    _onMutation(mutations) {\n      for (let j = 0, m; j < mutations.length && (m = mutations[j]); j++) {\n        for (let i = 0, l = m.addedNodes ? m.addedNodes.length : 0; i < l; i++) {\n          const n = /** @type {Element} */ (m.addedNodes[i]);\n          if (n && isImportLink(n)) {\n            if (useNative) {\n              whenElementLoaded(n);\n            } else {\n              this._loader.addNode(n);\n            }\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  function isImportLink(node) {\n    return node.nodeType === Node.ELEMENT_NODE && MATCHES.call(node, IMPORT_SELECTOR);\n  }\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!Element} element\n   * @return {Promise}\n   */\n  function whenElementLoaded(element) {\n    if (!element['__loadPromise']) {\n      element['__loadPromise'] = new Promise((resolve) => {\n        if (isElementLoaded(element)) {\n          resolve();\n        } else if (isIE && element.localName === 'style') {\n          // NOTE: IE does not fire \"load\" event for styles that have already\n          // loaded. This is in violation of the spec, so we try our hardest to\n          // work around it.\n          let isLoaded = false;\n          // If there's not @import in the textContent, assume it has loaded.\n          if (element.textContent.indexOf('@import') == -1) {\n            isLoaded = true;\n            // if we have a sheet, we have been parsed\n          } else if (element.sheet && element.sheet.cssRules) {\n            isLoaded = true;\n            const csr = element.sheet.cssRules,\n              len = csr.length;\n            // search the rules for @import's\n            for (let i = 0, r; i < len && (r = csr[i]) && isLoaded; i++) {\n              if (r.type === CSSRule.IMPORT_RULE) {\n                // if every @import has resolved, fake the load\n                isLoaded = Boolean(r.styleSheet);\n              }\n            }\n          }\n          if (isLoaded) {\n            // Resolve async to allow style to apply.\n            setTimeout(resolve);\n          } else {\n            // Listen only for load as <style> will always trigger that.\n            element.addEventListener('load', resolve);\n          }\n        } else {\n          element.addEventListener('load', resolve);\n          element.addEventListener('error', resolve);\n        }\n      }).then(() => {\n        element['__loaded'] = true;\n        return element;\n      });\n    }\n    return element['__loadPromise'];\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {boolean}\n   */\n  function isElementLoaded(element) {\n    if (element['__loaded']) {\n      return true;\n    }\n    let isLoaded = false;\n    if (useNative && isImportLink(element) &&\n      element.import && element.import.readyState !== 'loading') {\n      isLoaded = true;\n    }\n    element['__loaded'] = isLoaded;\n    return isLoaded;\n  }\n\n  /**\n   * Calls the callback when all imports in the document at call time\n   * (or at least document ready) have loaded. Callback is called synchronously\n   * if imports are already done loading.\n   * @param {function()=} callback\n   */\n  function whenReady(callback) {\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    whenDocumentReady(() => whenImportsReady(() => callback && callback()));\n  }\n\n  /**\n   * Invokes the callback when document is in ready state. Callback is called\n   *  synchronously if document is already done loading.\n   * @param {!function()} callback\n   */\n  function whenDocumentReady(callback) {\n    if (document.readyState !== 'loading') {\n      callback();\n    } else {\n      document.addEventListener('readystatechange', function stateChanged() {\n        if (document.readyState !== 'loading') {\n          document.removeEventListener('readystatechange', stateChanged);\n          callback();\n        }\n      });\n    }\n  }\n\n  /**\n   * Invokes the callback after all imports are loaded. Callback is called\n   * synchronously if imports are already done loading.\n   * @param {!function()} callback\n   */\n  function whenImportsReady(callback) {\n    let imports = document.querySelectorAll(rootImportsSelector);\n    const promises = [];\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      if (!isElementLoaded(imp)) {\n        promises.push(whenElementLoaded(imp));\n      }\n    }\n    if (promises.length) {\n      Promise.all(promises).then(() => callback());\n    } else {\n      callback();\n    }\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n  whenReady(() => document.dispatchEvent(new CustomEvent('HTMLImportsLoaded', {\n    cancelable: true,\n    bubbles: true,\n    detail: undefined\n  })));\n\n  new Importer();\n\n  /**\n   * Returns the link that imported the element.\n   * @param {!Element} element\n   * @return {!HTMLLinkElement|undefined}\n   */\n  function importForElement(element) {\n    let target = element;\n    while ((target = target['__ownerImport'] || target.parentNode || target.host)) {\n      // Found the deepest import.\n      if (target.localName === 'import-content') {\n        element['__ownerImport'] = target;\n        break;\n      }\n    }\n    if (target) {\n      return target['__firstImport'];\n    }\n  }\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n  scope.importForElement = importForElement;\n\n})(window.HTMLImports = (window.HTMLImports || {}));\n"]}