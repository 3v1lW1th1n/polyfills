{"version":3,"sources":["/src/html-imports.js"],"names":["scope","constructor","Importer","documents","observe","MutationObserver","_onMutation","bind","document","head","childList","_loader","Loader","_onLoaded","_onLoadedAll","whenDocumentReady","_loadSubtree","onLoad","onComplete","cache","onload","oncomplete","inflight","pending","isImportLink","node","nodeType","Node","ELEMENT_NODE","MATCHES","call","IMPORT_SELECTOR","whenElementLoaded","element","then","Promise","resolve","isElementLoaded","addEventListener","el","localName","src","whenReady","callback","whenImportsReady","readyState","stateChanged","removeEventListener","imports","querySelectorAll","rootImportsSelector","promises","i","l","length","imp","push","all","importForElement","target","parentNode","host","useNative","createElement","currentScript","Object","defineProperty","get","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","STYLESHEET_REGEXP","Path","fixUrls","base","href","setAttribute","replaceAttrUrl","getAttribute","resolveUrlsInStyle","textContent","fixUrlAttributes","attrs","a","at","attributes","v","value","search","resolveUrlsInCssText","fixUrlsInTemplates","t$","fixUrlsInTemplate","template","content","n$","n","style","linkUrl","cssText","r","replaceUrls","text","regexp","replace","m","pre","url","post","urlPath","_resolveUrl","test","undefined","__workingURL","u","URL","pathname","e","doc","__tempDoc","implementation","createHTMLDocument","__base","appendChild","__anchor","Xhr","async","load","request","XMLHttpRequest","open","redirectedUrl","locationHeader","getResponseHeader","substr","location","origin","console","error","message","status","response","responseText","send","addNodes","nodes","count","require","checkDone","addNode","elt","dedupe","fetch","tail","match","pieces","split","body","header","indexOf","atob","decodeURIComponent","receive","resource","err","$p","p","isIE","navigator","userAgent","Element","prototype","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","_makeDocument","importLink","display","p1","p2","innerHTML","baseEl","querySelector","removeChild","s$","s","importsSelector","importDependencyAttr","_flatten","_waitForStyles","_runScripts","_fireEvents","import","_observe","pendingScriptsSelector","promise","clone","removeAttribute","j","ll","name","replaceChild","needsMove","disabledLinkSelector","pendingStylesSelector","rootImport","insertBefore","dispatchEvent","CustomEvent","eventType","bubbles","cancelable","detail","subtree","mutations","addedNodes","onLoadingDone","event","elem","window","HTMLImports"],"mappings":"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","file":"html-imports.min.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(function(scope) {\n\n  /********************* base setup *********************/\n  const IMPORT_SELECTOR = 'link[rel=import]';\n  const useNative = Boolean('import' in document.createElement('link'));\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get: function() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat. This is not needed by\n          // html-imports polyfill but helps generally polyfill `currentScript`.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n  const STYLESHEET_REGEXP = /(<link[^>]*)(rel=['|\"]?stylesheet['|\"]?[^>]*>)/g;\n\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n\n    fixUrls: function(element, base) {\n      if (element.href) {\n        element.setAttribute('href',\n          Path.replaceAttrUrl(element.getAttribute('href'), base));\n      }\n      if (element.src) {\n        element.setAttribute('src',\n          Path.replaceAttrUrl(element.getAttribute('src'), base));\n      }\n      if (element.localName === 'style') {\n        Path.resolveUrlsInStyle(element, base);\n      } else if (element.localName === 'script' && element.textContent) {\n        element.textContent += `\\n//# sourceURL=${base}`;\n      }\n    },\n\n    fixUrlAttributes: function(element, base) {\n      const attrs = ['action', 'src', 'href', 'url', 'style'];\n      for (let i = 0, a; i < attrs.length && (a = attrs[i]); i++) {\n        const at = element.attributes[a];\n        const v = at && at.value;\n        if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n          at.value = (a === 'style') ?\n            Path.resolveUrlsInCssText(v, base) :\n            Path.replaceAttrUrl(v, base);\n        }\n      }\n    },\n\n    fixUrlsInTemplates: function(element, base) {\n      const t$ = element.querySelectorAll('template');\n      for (let i = 0; i < t$.length; i++) {\n        Path.fixUrlsInTemplate(t$[i], base);\n      }\n    },\n\n    fixUrlsInTemplate: function(template, base) {\n      const content = template.content;\n      if (!content) { // Template not supported.\n        return;\n      }\n      const n$ = content.querySelectorAll(\n        'style, form[action], [src], [href], [url], [style]');\n      for (let i = 0; i < n$.length; i++) {\n        const n = n$[i];\n        if (n.localName == 'style') {\n          Path.resolveUrlsInStyle(n, base);\n        } else {\n          Path.fixUrlAttributes(n, base);\n        }\n      }\n      Path.fixUrlsInTemplates(content, base);\n    },\n\n    resolveUrlsInStyle: function(style, linkUrl) {\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText: function(cssText, linkUrl) {\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls: function(text, linkUrl, regexp) {\n      return text.replace(regexp, function(m, pre, url, post) {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path._resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl: function(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return Path._resolveUrl(text, linkUrl);\n      }\n    },\n\n    _resolveUrl: function(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @param {!function(boolean, ?, string=)} callback\n     * @return {XMLHttpRequest}\n     */\n    load: function(url, callback) {\n      const request = new XMLHttpRequest();\n      request.open('GET', url, Xhr.async);\n      request.addEventListener('readystatechange', (e) => {\n        if (request.readyState === 4) {\n          // Servers redirecting an import can add a Location header to help us\n          // polyfill correctly.\n          let redirectedUrl = undefined;\n          try {\n            const locationHeader = request.getResponseHeader('Location');\n            if (locationHeader) {\n              // Relative or full path.\n              redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\n                location.origin + locationHeader : locationHeader;\n            }\n          } catch (e) {\n            console.error(e.message);\n          }\n          const isOk = ((request.status >= 200 && request.status < 300) ||\n            request.status === 304 || request.status === 0);\n          const resource = (request.response || request.responseText);\n          callback(!isOk, resource, redirectedUrl);\n        }\n      });\n      request.send();\n      return request;\n    }\n  };\n\n  /********************* loader *********************/\n  // This loader supports a dynamic list of urls\n  // and an oncomplete callback that is called when the loader is done.\n  // NOTE: The polyfill currently does *not* need this dynamism or the\n  // onComplete concept. Because of this, the loader could be simplified\n  // quite a bit.\n  class Loader {\n    constructor(onLoad, onComplete) {\n      this.cache = {};\n      this.onload = onLoad;\n      this.oncomplete = onComplete;\n      this.inflight = 0;\n      this.pending = {};\n    }\n\n    /**\n     * @param {!NodeList<!Element>} nodes\n     */\n    addNodes(nodes) {\n      const count = nodes.length;\n      if (!count) {\n        return;\n      }\n      this.inflight += count;\n      for (let i = 0; i < count; i++) {\n        this.require(nodes[i]);\n      }\n      this.checkDone();\n    }\n\n    /**\n     * @param {!Element} node\n     */\n    addNode(node) {\n      // number of transactions to complete\n      this.inflight++;\n      // commence transactions\n      this.require(node);\n      // anything to do?\n      this.checkDone();\n    }\n\n    /**\n     * @param {!Element} elt\n     */\n    require(elt) {\n      const url = elt.href || elt.src;\n      // deduplication\n      if (!this.dedupe(url, elt)) {\n        // fetch this resource\n        this.fetch(url, elt);\n      }\n    }\n\n    /**\n     * @param {string} url\n     * @param {!Element} elt\n     * @return {boolean}\n     */\n    dedupe(url, elt) {\n      if (this.pending[url]) {\n        // add to list of nodes waiting for inUrl\n        this.pending[url].push(elt);\n        // don't need fetch\n        return true;\n      }\n      let resource;\n      if (this.cache[url]) {\n        this.onload(url, elt, this.cache[url]);\n        // finished this transaction\n        this.tail();\n        // don't need fetch\n        return true;\n      }\n      // first node waiting for inUrl\n      this.pending[url] = [elt];\n      // need fetch (not a dupe)\n      return false;\n    }\n\n    /**\n     * @param {string} url\n     * @param {!Element} elt\n     */\n    fetch(url, elt) {\n      if (!url) {\n        this.receive(url, elt, true, 'error: href must be specified');\n      } else if (url.match(/^data:/)) {\n        // Handle Data URI Scheme\n        const pieces = url.split(',');\n        const header = pieces[0];\n        let body = pieces[1];\n        if (header.indexOf(';base64') > -1) {\n          body = atob(body);\n        } else {\n          body = decodeURIComponent(body);\n        }\n        this.receive(url, elt, false, body);\n      } else {\n        Xhr.load(url, (error, resource, redirectedUrl) =>\n          this.receive(url, elt, error, resource, redirectedUrl));\n      }\n    }\n\n    /**\n     * @param {!string} url\n     * @param {!Element} elt\n     * @param {boolean} err\n     * @param {string=} resource\n     * @param {string=} redirectedUrl\n     */\n    receive(url, elt, err, resource, redirectedUrl) {\n      this.cache[url] = resource;\n      const $p = this.pending[url];\n      for (let i = 0, l = $p.length, p;\n        (i < l) && (p = $p[i]); i++) {\n        // If url was redirected, use the redirected location so paths are\n        // calculated relative to that.\n        this.onload(url, p, resource, err, redirectedUrl);\n        this.tail();\n      }\n      this.pending[url] = null;\n    }\n\n    tail() {\n      --this.inflight;\n      this.checkDone();\n    }\n\n    checkDone() {\n      if (!this.inflight) {\n        this.oncomplete();\n      }\n    }\n  }\n\n  /********************* importer *********************/\n\n  const isIE = /Trident/.test(navigator.userAgent) ||\n    /Edge\\/\\d./i.test(navigator.userAgent);\n\n  // Used to disable loading of resources.\n  const importDisableType = 'import-disable';\n\n  const disabledLinkSelector = `link[rel=stylesheet][href][type=${importDisableType}]`;\n\n  const importsSelector = `\n    ${IMPORT_SELECTOR},\n    ${disabledLinkSelector},\n    style:not([type]),\n    link[rel=stylesheet][href]:not([type]),\n    script:not([type]),\n    script[type=\"application/javascript\"],\n    script[type=\"text/javascript\"]`;\n\n  const importDependencyAttr = 'import-dependency';\n\n  const rootImportsSelector = `${IMPORT_SELECTOR}:not(${importDependencyAttr})`;\n\n  const pendingScriptsSelector = `script[${importDependencyAttr}]`;\n\n  const pendingStylesSelector = `style[${importDependencyAttr}],\n    link[rel=stylesheet][${importDependencyAttr}]`;\n\n  /**\n   * @type {Function}\n   */\n  const MATCHES = Element.prototype.matches ||\n    Element.prototype.matchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.oMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    constructor() {\n      this.documents = {};\n      // Observe only document head\n      new MutationObserver(this._onMutation.bind(this)).observe(document.head, {\n        childList: true\n      });\n      this._loader = new Loader(\n        this._onLoaded.bind(this), this._onLoadedAll.bind(this)\n      );\n      whenDocumentReady(() => this._loadSubtree(document));\n    }\n\n    /**\n     * @param {!HTMLDocument} doc\n     */\n    _loadSubtree(doc) {\n      const nodes = doc.querySelectorAll(IMPORT_SELECTOR);\n      this._loader.addNodes(nodes);\n    }\n\n    _onLoaded(url, elt, resource, err, redirectedUrl) {\n      // We've already seen a document at this url, return.\n      if (this.documents[url] !== undefined) {\n        return;\n      }\n      if (err) {\n        this.documents[url] = null;\n      } else {\n        // Generate a document from data.\n        const doc = /** @type {!HTMLDocument} */\n          (this._makeDocument(elt, resource, redirectedUrl || url));\n        // note, we cannot use MO to detect parsed nodes because\n        // SD polyfill does not report these as mutations.\n        this._loadSubtree(doc);\n        this.documents[url] = doc;\n      }\n    }\n\n    /**\n     * Creates a new document containing resource and normalizes urls accordingly.\n     * @param {!HTMLLinkElement} importLink\n     * @param {string=} resource\n     * @param {string=} url\n     * @return {!Node}\n     */\n    _makeDocument(importLink, resource, url) {\n      const content = document.createElement('import-content');\n\n      content.style.display = 'none';\n      if (url) {\n        content.setAttribute('import-href', url);\n      }\n      if (resource) {\n        if (isIE) {\n          // <link rel=stylesheet> should be appended to <head>. Not doing so\n          // in IE/Edge breaks the cascading order. We disable the loading by\n          // setting the type before setting innerHTML to avoid loading\n          // resources twice.\n          resource = resource.replace(STYLESHEET_REGEXP, (match, p1, p2) => {\n            if (match.indexOf('type=') === -1) {\n              return `${p1} type=${importDisableType} ${p2}`;\n            }\n            return match;\n          });\n        }\n        content.innerHTML = resource;\n      }\n\n      // Support <base> in imported docs. Resolve url and remove it from the parent.\n      const baseEl = content.querySelector('base');\n      if (baseEl) {\n        url = Path.replaceAttrUrl(baseEl.getAttribute('href'), url);\n        baseEl.parentNode.removeChild(baseEl);\n      }\n\n      // This is specific to users of <dom-module> (Polymer).\n      // TODO(valdrin) remove this when Polymer uses importForElement.\n      const s$ = content.querySelectorAll('dom-module');\n      for (let i = 0, s; i < s$.length && (s = s$[i]); i++) {\n        s.setAttribute('assetpath',\n          Path.replaceAttrUrl(s.getAttribute('assetpath') || '', url));\n      }\n\n      const n$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)>} */\n        (content.querySelectorAll(importsSelector));\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        // Listen for load/error events, then fix urls.\n        whenElementLoaded(n);\n        Path.fixUrls(n, url);\n        // Mark for easier selectors.\n        n.setAttribute(importDependencyAttr, '');\n        // Set owner import so we save lookup when importForElement is invoked.\n        n['__ownerImport'] = importLink;\n      }\n      Path.fixUrlsInTemplates(content, url);\n      return content;\n    }\n\n    _onLoadedAll() {\n      this._flatten(document);\n      // We wait for styles to load, and at the same time we execute the scripts,\n      // then fire the load/error events for imports to have faster whenReady\n      // callback execution.\n      // NOTE: This is different for native behavior where scripts would be\n      // executed after the styles before them are loaded.\n      // To achieve that, we could select pending styles and scripts in the\n      // document and execute them sequentially in their dom order.\n      Promise.all([this._waitForStyles(), this._runScripts()])\n        .then(() => this._fireEvents());\n    }\n\n    /**\n     * @param {!HTMLDocument} doc\n     */\n    _flatten(doc) {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(IMPORT_SELECTOR));\n      for (let i = 0, l = n$.length, n, imp; i < l && (n = n$[i]); i++) {\n        imp = /** @type {HTMLDocument} */ (this.documents[n.href]);\n        n.import = imp;\n        if (imp && !imp['__firstImport']) {\n          imp['__firstImport'] = n;\n          this._flatten(imp);\n          n.appendChild(imp);\n          // If in the main document, observe for any imports added later.\n          if (doc === document) {\n            this._observe(imp);\n          }\n        }\n      }\n    }\n\n    /**\n     * Replaces all the imported scripts with a clone in order to execute them.\n     * Updates the `currentScript`.\n     * @return {Promise} Resolved when scripts are loaded.\n     */\n    _runScripts() {\n      const s$ = document.querySelectorAll(pendingScriptsSelector);\n      let promise = Promise.resolve();\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        promise = promise.then(() => {\n          const clone = /** @type {!HTMLScriptElement} */\n            (document.createElement('script'));\n          // Remove import-dependency attribute to avoid double cloning.\n          s.removeAttribute(importDependencyAttr);\n          // Copy attributes and textContent.\n          for (let j = 0, ll = s.attributes.length; j < ll; j++) {\n            clone.setAttribute(s.attributes[j].name, s.attributes[j].value);\n          }\n          clone.textContent = s.textContent;\n\n          // Update currentScript and replace original with clone script.\n          currentScript = clone;\n          s.parentNode.replaceChild(clone, s);\n          // Wait for load/error events; after is loaded, reset currentScript.\n          return whenElementLoaded(clone).then(() => currentScript = null);\n        });\n      }\n      return promise;\n    }\n\n    /**\n     * Waits for all the imported stylesheets/styles to be loaded.\n     * @return {Promise}\n     */\n    _waitForStyles() {\n      // <link rel=stylesheet> should be appended to <head>. Not doing so\n      // in IE/Edge breaks the cascading order\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n      // If there is one <link rel=stylesheet> imported, we must move all imported\n      // links and styles to <head>.\n      const needsMove = !!document.querySelector(disabledLinkSelector);\n      const s$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLStyleElement)>} */\n        (document.querySelectorAll(pendingStylesSelector));\n      const promises = [];\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        // Listen for load/error events, remove selector once is done loading.\n        promises.push(whenElementLoaded(s)\n          .then(() => s.removeAttribute(importDependencyAttr)));\n        // Check if was already moved to head, to handle the case where the element\n        // has already been moved but it is still loading.\n        if (needsMove && s.parentNode !== document.head) {\n          let rootImport = importForElement(s);\n          while (rootImport && importForElement(rootImport)) {\n            rootImport = importForElement(rootImport);\n          }\n          if (rootImport.parentNode === document.head) {\n            document.head.insertBefore(s, rootImport);\n          } else {\n            document.head.appendChild(s);\n          }\n          // Enables the loading of <link rel=stylesheet>\n          s.removeAttribute('type');\n        }\n      }\n      return Promise.all(promises);\n    }\n\n    /**\n     * Fires load/error events for loaded imports.\n     */\n    _fireEvents() {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (document.querySelectorAll(IMPORT_SELECTOR));\n      // Inverse order to have events firing bottom-up.\n      for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n        // Don't fire twice same event.\n        if (!n['__loaded']) {\n          n['__loaded'] = true;\n          const eventType = n.import ? 'load' : 'error';\n          n.dispatchEvent(new CustomEvent(eventType, {\n            bubbles: false,\n            cancelable: false,\n            detail: undefined\n          }));\n        }\n      }\n    }\n\n    _observe(element) {\n      if (element['__importObserver']) {\n        return;\n      }\n      element['__importObserver'] = new MutationObserver(this._onMutation.bind(this));\n      element['__importObserver'].observe(element, {\n        childList: true,\n        subtree: true\n      });\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    _onMutation(mutations) {\n      for (let j = 0, m; j < mutations.length && (m = mutations[j]); j++) {\n        for (let i = 0, l = m.addedNodes ? m.addedNodes.length : 0; i < l; i++) {\n          const n = /** @type {HTMLLinkElement} */ (m.addedNodes[i]);\n          // NOTE: added scripts are not updating currentScript in IE.\n          // TODO add test w/ script & stylesheet maybe\n          if (n && isImportLink(n)) {\n            this._loader.addNode(n);\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  function isImportLink(node) {\n    return node.nodeType === Node.ELEMENT_NODE && MATCHES.call(node, IMPORT_SELECTOR);\n  }\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)} element\n   * @return {Promise}\n   */\n  function whenElementLoaded(element) {\n    if (!element['__loadPromise']) {\n      element['__loadPromise'] = new Promise((resolve) => {\n        if (isElementLoaded(element)) {\n          resolve();\n        } else {\n          element.addEventListener('load', resolve);\n          element.addEventListener('error', resolve);\n        }\n      }).then(() => {\n        element['__loaded'] = true;\n        return element;\n      });\n    }\n    return element['__loadPromise'];\n  }\n\n  /**\n   * @param {!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)} el\n   * @return {boolean}\n   */\n  function isElementLoaded(el) {\n    el['__loaded'] = el['__loaded'] ||\n      // For inline scripts, consider them already loaded.\n      (el.localName === 'script' && !( /** @type {!HTMLScriptElement} */ (el).src));\n    return el['__loaded'];\n  }\n\n  /**\n   * Calls the callback when all imports in the document at call time\n   * (or at least document ready) have loaded. Callback is called synchronously\n   * if imports are already done loading.\n   * @param {function()=} callback\n   */\n  function whenReady(callback) {\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    whenDocumentReady(() => whenImportsReady(() => callback && callback()));\n  }\n\n  /**\n   * Invokes the callback when document is in ready state. Callback is called\n   *  synchronously if document is already done loading.\n   * @param {!function()} callback\n   */\n  function whenDocumentReady(callback) {\n    if (document.readyState !== 'loading') {\n      callback();\n    } else {\n      document.addEventListener('readystatechange', function stateChanged() {\n        if (document.readyState !== 'loading') {\n          document.removeEventListener('readystatechange', stateChanged);\n          callback();\n        }\n      });\n    }\n  }\n\n  /**\n   * Invokes the callback after all imports are loaded. Callback is called\n   * synchronously if imports are already done loading.\n   * @param {!function()} callback\n   */\n  function whenImportsReady(callback) {\n    let imports = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(rootImportsSelector));\n    const promises = [];\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      if (!isElementLoaded(imp)) {\n        promises.push(whenElementLoaded(imp));\n      }\n    }\n    if (promises.length) {\n      Promise.all(promises).then(() => callback());\n    } else {\n      callback();\n    }\n  }\n\n  /**\n   * Returns the link that imported the element.\n   * @param {!Element} element\n   * @return {!HTMLLinkElement|undefined}\n   */\n  function importForElement(element) {\n    let target = element;\n    while ((target = target['__ownerImport'] || target.parentNode || target.host)) {\n      // Found the deepest import.\n      if (isImportLink(target)) {\n        element['__ownerImport'] = /** @type {!HTMLLinkElement} */ (target);\n        break;\n      }\n    }\n    return element['__ownerImport'];\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n  whenReady(() => document.dispatchEvent(new CustomEvent('HTMLImportsLoaded', {\n    cancelable: true,\n    bubbles: true,\n    detail: undefined\n  })));\n\n  if (useNative) {\n    // Listen for load/error events to capture dynamically added scripts.\n    /**\n     * @type {!function(!Event)}\n     */\n    const onLoadingDone = (event) => {\n      const elem = /** @type {!Element} */ (event.target);\n      if (isImportLink(elem)) {\n        elem['__loaded'] = true;\n      }\n    };\n    document.addEventListener('load', onLoadingDone, true /* useCapture */ );\n    document.addEventListener('error', onLoadingDone, true /* useCapture */ );\n  } else {\n    new Importer();\n  }\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n  scope.importForElement = importForElement;\n\n})(window.HTMLImports = (window.HTMLImports || {}));\n"]}