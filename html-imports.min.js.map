{"version":3,"sources":["/src/html-imports.js"],"names":["scope","constructor","Importer","documents","inflight","whenDocumentReady","observe","MutationObserver","_onMutation","bind","document","head","childList","_load","isImportLink","node","nodeType","Node","ELEMENT_NODE","MATCHES","call","importSelector","whenElementLoaded","element","then","Promise","resolve","isElementLoaded","isIE","localName","addEventListener","el","src","whenReady","callback","whenImportsReady","readyState","stateChanged","removeEventListener","imports","querySelectorAll","rootImportSelector","promises","i","l","length","imp","push","all","importForElement","owner","parentNode","host","useNative","createElement","currentScript","Object","defineProperty","get","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","STYLESHEET_REGEXP","Path","fixUrls","base","href","setAttribute","replaceAttrUrl","getAttribute","resolveUrlsInStyle","fixUrlAttributes","attrs","a","at","attributes","v","value","search","resolveUrlsInCssText","fixUrlsInTemplates","t$","fixUrlsInTemplate","template","content","n$","n","style","linkUrl","textContent","cssText","r","replaceUrls","text","regexp","replace","m","pre","url","post","urlPath","_resolveUrl","test","undefined","__workingURL","u","URL","pathname","e","doc","__tempDoc","implementation","createHTMLDocument","__base","appendChild","__anchor","Xhr","async","load","reject","match","pieces","split","resource","header","indexOf","atob","decodeURIComponent","request","XMLHttpRequest","open","redirectedUrl","locationHeader","getResponseHeader","substr","location","origin","console","error","message","resp","response","responseText","status","send","navigator","userAgent","Element","prototype","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","link","whenLoadedPromise","_whenImportLoaded","_whenImportsLoaded","_onLoadedAll","links","promise","_makeDocument","catch","createDocumentFragment","p1","p2","innerHTML","firstElementChild","baseEl","querySelector","removeChild","s$","s","importDependenciesSelector","importDependencyAttr","_flatten","_waitForStyles","_runScripts","_fireEvents","import","DOCUMENT_FRAGMENT_NODE","_observe","pendingScriptsSelector","clone","removeAttribute","j","ll","name","replaceChild","needsMove","disabledLinkSelector","pendingStylesSelector","rootImport","parent","next","nextSibling","placeholder","insertBefore","_fireEventIfNeeded","dispatchEvent","CustomEvent","eventType","bubbles","cancelable","detail","subtree","mutations","addedNodes","onLoadingDone","event","elem","target","window","HTMLImports"],"mappings":"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","file":"html-imports.min.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(function(scope) {\n\n  /********************* base setup *********************/\n  const useNative = Boolean('import' in document.createElement('link'));\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get: function() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat. This is not needed by\n          // html-imports polyfill but helps generally polyfill `currentScript`.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n  const STYLESHEET_REGEXP = /(<link[^>]*)(rel=['|\"]?stylesheet['|\"]?[^>]*>)/g;\n\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n\n    fixUrls: function(element, base) {\n      if (element.href) {\n        element.setAttribute('href',\n          Path.replaceAttrUrl(element.getAttribute('href'), base));\n      }\n      if (element.src) {\n        element.setAttribute('src',\n          Path.replaceAttrUrl(element.getAttribute('src'), base));\n      }\n      if (element.localName === 'style') {\n        Path.resolveUrlsInStyle(element, base);\n      }\n      // TODO(valdrin) append sourceURL and test the \"debuggability\" of scripts\n      // loaded via imports on the various browsers.\n      // else if (element.localName === 'script' && element.textContent) {\n      //   element.textContent += `\\n//# sourceURL=${base}`;\n      // }\n    },\n\n    fixUrlAttributes: function(element, base) {\n      const attrs = ['action', 'src', 'href', 'url', 'style'];\n      for (let i = 0, a; i < attrs.length && (a = attrs[i]); i++) {\n        const at = element.attributes[a];\n        const v = at && at.value;\n        // Skip bound attribute values (assume binding is done via {} and []).\n        // TODO(valdrin) consider exposing a library-implementable hook.\n        if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n          at.value = (a === 'style') ?\n            Path.resolveUrlsInCssText(v, base) :\n            Path.replaceAttrUrl(v, base);\n        }\n      }\n    },\n\n    fixUrlsInTemplates: function(element, base) {\n      const t$ = element.querySelectorAll('template');\n      for (let i = 0; i < t$.length; i++) {\n        Path.fixUrlsInTemplate(t$[i], base);\n      }\n    },\n\n    fixUrlsInTemplate: function(template, base) {\n      const content = template.content;\n      if (!content) { // Template not supported.\n        return;\n      }\n      const n$ = content.querySelectorAll(\n        'style, form[action], [src], [href], [url], [style]');\n      for (let i = 0; i < n$.length; i++) {\n        const n = n$[i];\n        if (n.localName == 'style') {\n          Path.resolveUrlsInStyle(n, base);\n        } else {\n          Path.fixUrlAttributes(n, base);\n        }\n      }\n      Path.fixUrlsInTemplates(content, base);\n    },\n\n    resolveUrlsInStyle: function(style, linkUrl) {\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText: function(cssText, linkUrl) {\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls: function(text, linkUrl, regexp) {\n      return text.replace(regexp, function(m, pre, url, post) {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path._resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl: function(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return Path._resolveUrl(text, linkUrl);\n      }\n    },\n\n    _resolveUrl: function(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @return {!Promise}\n     */\n    load: function(url) {\n      return new Promise((resolve, reject) => {\n        if (!url) {\n          reject({\n            resource: 'error: href must be specified'\n          });\n        } else if (url.match(/^data:/)) {\n          // Handle Data URI Scheme\n          const pieces = url.split(',');\n          const header = pieces[0];\n          let resource = pieces[1];\n          if (header.indexOf(';base64') > -1) {\n            resource = atob(resource);\n          } else {\n            resource = decodeURIComponent(resource);\n          }\n          resolve({\n            resource: resource\n          });\n        } else {\n          const request = new XMLHttpRequest();\n          request.open('GET', url, Xhr.async);\n          request.addEventListener('readystatechange', (e) => {\n            if (request.readyState === 4) {\n              // Servers redirecting an import can add a Location header to help us\n              // polyfill correctly.\n              let redirectedUrl = undefined;\n              try {\n                const locationHeader = request.getResponseHeader('Location');\n                if (locationHeader) {\n                  // Relative or full path.\n                  redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\n                    location.origin + locationHeader : locationHeader;\n                }\n              } catch (e) {\n                console.error(e.message);\n              }\n              const resp = {\n                resource: (request.response || request.responseText),\n                redirectedUrl: redirectedUrl\n              };\n              if ((request.status >= 200 && request.status < 300) ||\n                request.status === 304 || request.status === 0) {\n                resolve(resp);\n              } else {\n                reject(resp);\n              }\n            }\n          });\n          request.send();\n        }\n      });\n    }\n  };\n\n  /********************* importer *********************/\n\n  const isIE = /Trident/.test(navigator.userAgent) ||\n    /Edge\\/\\d./i.test(navigator.userAgent);\n\n  const importSelector = 'link[rel=import]';\n\n  // Used to disable loading of resources.\n  const importDisableType = 'import-disable';\n\n  const disabledLinkSelector = `link[rel=stylesheet][href][type=${importDisableType}]`;\n\n  const importDependenciesSelector = `${importSelector}, ${disabledLinkSelector},\n    style:not([type]), link[rel=stylesheet][href]:not([type]),\n    script:not([type]), script[type=\"application/javascript\"],\n    script[type=\"text/javascript\"]`;\n\n  const importDependencyAttr = 'import-dependency';\n\n  const rootImportSelector = `${importSelector}:not(${importDependencyAttr})`;\n\n  const pendingScriptsSelector = `script[${importDependencyAttr}]`;\n\n  const pendingStylesSelector = `style[${importDependencyAttr}],\n    link[rel=stylesheet][${importDependencyAttr}]`;\n\n  /**\n   * @type {Function}\n   */\n  const MATCHES = Element.prototype.matches ||\n    Element.prototype.matchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.oMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    constructor() {\n      this.documents = {};\n      // Used to keep track of pending loads, so that flattening and firing of\n      // events can be done when all resources are ready.\n      this.inflight = 0;\n      whenDocumentReady(() => {\n        // Observe only document head\n        new MutationObserver(this._onMutation.bind(this)).observe(document.head, {\n          childList: true\n        });\n        this._load();\n      });\n    }\n\n    /**\n     * Loads the resources needed by the import link and fires the load/error\n     * event on the node once finished. If link is not defined or null, loads\n     * all imports in the main document.\n     * @param {HTMLLinkElement=} link\n     */\n    _load(link) {\n      const whenLoadedPromise = link ? this._whenImportLoaded(link) : this._whenImportsLoaded(document);\n      if (whenLoadedPromise) {\n        this.inflight++;\n        whenLoadedPromise.then(() => {\n          // Wait until all resources are ready.\n          if (--this.inflight === 0) {\n            this._onLoadedAll();\n          }\n        });\n      }\n    }\n\n    /**\n     * @param {!(HTMLDocument|DocumentFragment)} doc\n     * @return {Promise|null}\n     */\n    _whenImportsLoaded(doc) {\n      const links = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      const promises = [];\n      for (let i = 0, l = links.length; i < l; i++) {\n        const promise = this._whenImportLoaded(links[i]);\n        if (promise) {\n          promises.push(promise);\n        }\n      }\n      return promises.length ? Promise.all(promises).then(() => doc) : null;\n    }\n\n    /**\n     * @param {!HTMLLinkElement} link\n     * @return {Promise|null}\n     */\n    _whenImportLoaded(link) {\n      const url = link.href;\n      // This resource is already being handled by another import.\n      if (this.documents[url] !== undefined) {\n        return null;\n      }\n      // Mark it as pending to notify others this url is being loaded.\n      this.documents[url] = 'pending';\n      return Xhr.load(url)\n        .then((resp) => {\n          const doc = this._makeDocument(resp.resource, resp.redirectedUrl || url);\n          this.documents[url] = doc;\n          // Load subtree.\n          return this._whenImportsLoaded(doc);\n        })\n        .catch(() => this.documents[url] = null)\n        .then(() => link);\n    }\n\n    /**\n     * Creates a new document containing resource and normalizes urls accordingly.\n     * @param {string=} resource\n     * @param {string=} url\n     * @return {!DocumentFragment}\n     */\n    _makeDocument(resource, url) {\n      if (!resource) {\n        return document.createDocumentFragment();\n      }\n\n      if (isIE) {\n        // <link rel=stylesheet> should be appended to <head>. Not doing so\n        // in IE/Edge breaks the cascading order. We disable the loading by\n        // setting the type before setting innerHTML to avoid loading\n        // resources twice.\n        resource = resource.replace(STYLESHEET_REGEXP, (match, p1, p2) => {\n          if (match.indexOf('type=') === -1) {\n            return `${p1} type=${importDisableType} ${p2}`;\n          }\n          return match;\n        });\n      }\n\n      let content;\n      const template = /** @type {!HTMLTemplateElement} */\n        (document.createElement('template'));\n      template.innerHTML = resource;\n      if (template.content) {\n        // This creates issues in Safari10 when used with shadydom (see #12).\n        content = template.content;\n      } else {\n        // <template> not supported, create fragment and move children into it.\n        content = document.createDocumentFragment();\n        while (template.firstElementChild) {\n          content.appendChild(template.firstElementChild);\n        }\n      }\n\n      // Support <base> in imported docs. Resolve url and remove it from the parent.\n      const baseEl = content.querySelector('base');\n      if (baseEl) {\n        url = Path.replaceAttrUrl(baseEl.getAttribute('href'), url);\n        baseEl.parentNode.removeChild(baseEl);\n      }\n\n      // This is specific to users of <dom-module> (Polymer).\n      // TODO(valdrin) remove this when Polymer uses importForElement.\n      const s$ = content.querySelectorAll('dom-module');\n      for (let i = 0, s; i < s$.length && (s = s$[i]); i++) {\n        s.setAttribute('assetpath',\n          Path.replaceAttrUrl(s.getAttribute('assetpath') || '', url));\n      }\n\n      const n$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)>} */\n        (content.querySelectorAll(importDependenciesSelector));\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        // Listen for load/error events, then fix urls.\n        whenElementLoaded(n);\n        Path.fixUrls(n, url);\n        // Mark for easier selectors.\n        n.setAttribute(importDependencyAttr, '');\n      }\n      Path.fixUrlsInTemplates(content, url);\n      return content;\n    }\n\n    _onLoadedAll() {\n      this._flatten(document);\n      // We wait for styles to load, and at the same time we execute the scripts,\n      // then fire the load/error events for imports to have faster whenReady\n      // callback execution.\n      // NOTE: This is different for native behavior where scripts would be\n      // executed after the styles before them are loaded.\n      // To achieve that, we could select pending styles and scripts in the\n      // document and execute them sequentially in their dom order.\n      Promise.all([this._waitForStyles(), this._runScripts()])\n        .then(() => this._fireEvents());\n    }\n\n    /**\n     * @param {!HTMLDocument} doc\n     */\n    _flatten(doc) {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        const imp = this.documents[n.href];\n        n.import = /** @type {!Document} */ (imp);\n        if (imp && imp.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n          this.documents[n.href] = n;\n          // Suppress Closure warning about incompatible subtype assignment.\n          ( /** @type {!HTMLElement} */ (n).import = n);\n          this._flatten(imp);\n          n.appendChild(imp);\n          // If in the main document, observe for any imports added later.\n          if (doc === document) {\n            this._observe(n);\n          }\n        }\n      }\n    }\n\n    /**\n     * Replaces all the imported scripts with a clone in order to execute them.\n     * Updates the `currentScript`.\n     * @return {Promise} Resolved when scripts are loaded.\n     */\n    _runScripts() {\n      const s$ = document.querySelectorAll(pendingScriptsSelector);\n      let promise = Promise.resolve();\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        promise = promise.then(() => {\n          // The pending scripts have been generated through innerHTML and\n          // browsers won't execute them for security reasons. We cannot use\n          // s.cloneNode(true) either, the only way to run the script is manually\n          // creating a new element and copying its attributes/textContent.\n          const clone = /** @type {!HTMLScriptElement} */\n            (document.createElement('script'));\n          // Remove import-dependency attribute to avoid double cloning.\n          s.removeAttribute(importDependencyAttr);\n          // Copy attributes and textContent.\n          for (let j = 0, ll = s.attributes.length; j < ll; j++) {\n            clone.setAttribute(s.attributes[j].name, s.attributes[j].value);\n          }\n          clone.textContent = s.textContent;\n\n          // Update currentScript and replace original with clone script.\n          currentScript = clone;\n          s.parentNode.replaceChild(clone, s);\n          // Wait for load/error events; after is loaded, reset currentScript.\n          return whenElementLoaded(clone).then(() => currentScript = null);\n        });\n      }\n      return promise;\n    }\n\n    /**\n     * Waits for all the imported stylesheets/styles to be loaded.\n     * @return {Promise}\n     */\n    _waitForStyles() {\n      // <link rel=stylesheet> should be appended to <head>. Not doing so\n      // in IE/Edge breaks the cascading order\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n      // If there is one <link rel=stylesheet> imported, we must move all imported\n      // links and styles to <head>.\n      const needsMove = !!document.querySelector(disabledLinkSelector);\n      const s$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLStyleElement)>} */\n        (document.querySelectorAll(pendingStylesSelector));\n      const promises = [];\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        // Listen for load/error events, remove selector once is done loading.\n        promises.push(whenElementLoaded(s)\n          .then(() => s.removeAttribute(importDependencyAttr)));\n        // Check if was already moved to head, to handle the case where the element\n        // has already been moved but it is still loading.\n        if (needsMove && s.parentNode !== document.head) {\n          let rootImport = importForElement(s);\n          while (rootImport && importForElement(rootImport)) {\n            rootImport = importForElement(rootImport);\n          }\n          // Replace the element we're about to move with a placeholder.\n          // NOTE: we first have to append the element to the new parent, then\n          // we can put the placeholder at its place, otherwise load/error events\n          // seem to be fired too early.\n          const parent = s.parentNode,\n            next = s.nextSibling,\n            placeholder = document.createElement(s.localName);\n          // Add reference of the moved element.\n          placeholder['__appliedElement'] = s;\n          // Disable this from appearing in document.styleSheets.\n          placeholder.setAttribute('type', 'import-placeholder');\n          // First, re-parent the element...\n          if (rootImport.parentNode === document.head) {\n            document.head.insertBefore(s, rootImport);\n          } else {\n            document.head.appendChild(s);\n          }\n          // ...and then, insert the placeholder at the right place.\n          parent.insertBefore(placeholder, next);\n          // Enable the loading of <link rel=stylesheet>.\n          s.removeAttribute('type');\n        }\n      }\n      return Promise.all(promises);\n    }\n\n    /**\n     * Fires load/error events for imports in the right order .\n     */\n    _fireEvents() {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (document.querySelectorAll(importSelector));\n      // Inverse order to have events firing bottom-up.\n      for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n        this._fireEventIfNeeded(n);\n      }\n    }\n\n    /**\n     * Fires load/error event for the import if this wasn't done already.\n     * @param {!HTMLLinkElement} link\n     */\n    _fireEventIfNeeded(link) {\n      // Don't fire twice same event.\n      if (!link['__loaded']) {\n        link['__loaded'] = true;\n        const eventType = link.import ? 'load' : 'error';\n        link.dispatchEvent(new CustomEvent(eventType, {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        }));\n      }\n    }\n\n    _observe(element) {\n      if (element['__importObserver']) {\n        return;\n      }\n      element['__importObserver'] = new MutationObserver(this._onMutation.bind(this));\n      element['__importObserver'].observe(element, {\n        childList: true,\n        subtree: true\n      });\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    _onMutation(mutations) {\n      for (let j = 0, m; j < mutations.length && (m = mutations[j]); j++) {\n        for (let i = 0, l = m.addedNodes ? m.addedNodes.length : 0; i < l; i++) {\n          const n = /** @type {HTMLLinkElement} */ (m.addedNodes[i]);\n          // NOTE: added scripts are not updating currentScript in IE.\n          // TODO add test w/ script & stylesheet maybe\n          if (n && isImportLink(n)) {\n            const imp = this.documents[n.href];\n            // First time we see this import, load.\n            if (imp === undefined) {\n              this._load(n);\n            }\n            // If nothing else is loading, we can safely associate the import\n            // and fire the load/error event.\n            else if (!this.inflight) {\n              n.import = imp;\n              this._fireEventIfNeeded(n);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  function isImportLink(node) {\n    return node.nodeType === Node.ELEMENT_NODE && MATCHES.call(node, importSelector);\n  }\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)} element\n   * @return {Promise}\n   */\n  function whenElementLoaded(element) {\n    if (!element['__loadPromise']) {\n      element['__loadPromise'] = new Promise((resolve) => {\n        if (isElementLoaded(element)) {\n          resolve();\n        } else if (isIE && element.localName === 'style') {\n          // NOTE: We listen only for load events in IE/Edge, because in IE/Edge\n          // <style> with @import will fire error events for each failing @import,\n          // and finally will trigger the load event when all @import are\n          // finished (even if all fail).\n          element.addEventListener('load', resolve);\n        } else {\n          element.addEventListener('load', resolve);\n          element.addEventListener('error', resolve);\n        }\n      }).then(() => {\n        element['__loaded'] = true;\n        return element;\n      });\n    }\n    return element['__loadPromise'];\n  }\n\n  /**\n   * @param {!HTMLElement} el\n   * @return {boolean}\n   */\n  function isElementLoaded(el) {\n    el['__loaded'] = el['__loaded'] ||\n      // Inline scripts don't trigger load/error events, consider them already loaded.\n      (el.localName === 'script' && !( /** @type {!HTMLScriptElement} */ (el).src));\n    return el['__loaded'];\n  }\n\n  /**\n   * Calls the callback when all imports in the document at call time\n   * (or at least document ready) have loaded. Callback is called synchronously\n   * if imports are already done loading.\n   * @param {function()=} callback\n   */\n  function whenReady(callback) {\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    whenDocumentReady(() => whenImportsReady(() => callback && callback()));\n  }\n\n  /**\n   * Invokes the callback when document is in ready state. Callback is called\n   *  synchronously if document is already done loading.\n   * @param {!function()} callback\n   */\n  function whenDocumentReady(callback) {\n    if (document.readyState !== 'loading') {\n      callback();\n    } else {\n      document.addEventListener('readystatechange', function stateChanged() {\n        if (document.readyState !== 'loading') {\n          document.removeEventListener('readystatechange', stateChanged);\n          callback();\n        }\n      });\n    }\n  }\n\n  /**\n   * Invokes the callback after all imports are loaded. Callback is called\n   * synchronously if imports are already done loading.\n   * @param {!function()} callback\n   */\n  function whenImportsReady(callback) {\n    let imports = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(rootImportSelector));\n    const promises = [];\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      if (!isElementLoaded(imp)) {\n        promises.push(whenElementLoaded(imp));\n      }\n    }\n    if (promises.length) {\n      Promise.all(promises).then(callback);\n    } else {\n      callback();\n    }\n  }\n\n  /**\n   * Returns the link that imported the element.\n   * @param {!Element} element\n   * @return {!HTMLLinkElement|undefined}\n   */\n  function importForElement(element) {\n    let owner = element['__ownerImport'];\n    if (!owner) {\n      owner = element;\n      // Walk up the parent tree until we find an import.\n      while ((owner = owner.parentNode || owner.host) && !isImportLink(owner)) {}\n      element['__ownerImport'] = owner;\n    }\n    return owner;\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n  whenReady(() => document.dispatchEvent(new CustomEvent('HTMLImportsLoaded', {\n    cancelable: true,\n    bubbles: true,\n    detail: undefined\n  })));\n\n  if (useNative) {\n    // Listen for load/error events to capture dynamically added scripts.\n    /**\n     * @type {!function(!Event)}\n     */\n    const onLoadingDone = (event) => {\n      const elem = /** @type {!Element} */ (event.target);\n      if (isImportLink(elem)) {\n        elem['__loaded'] = true;\n      }\n    };\n    document.addEventListener('load', onLoadingDone, true /* useCapture */ );\n    document.addEventListener('error', onLoadingDone, true /* useCapture */ );\n  } else {\n    new Importer();\n  }\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n  scope.importForElement = importForElement;\n\n})(window.HTMLImports = (window.HTMLImports || {}));\n"]}