{"version":3,"sources":["src/html-imports.js"],"names":["scope","constructor","Importer","doc","documents","_doc","imports","querySelectorAll","IMPORT_SELECTOR","i","l","length","whenElementLoaded","observe","MutationObserver","_onMutation","bind","head","childList","useNative","_loader","Loader","_onLoaded","_onLoadedAll","whenDocumentReady","then","_loadSubtree","onLoad","onComplete","cache","onload","oncomplete","inflight","pending","isImportLink","node","nodeType","Node","ELEMENT_NODE","MATCHES","call","fixUrlAttributes","element","base","attrs","forEach","a","at","attributes","v","value","search","Path","resolveUrlsInCssText","replaceAttrUrl","fixUrlsInTemplates","t$","content","template","n$","n","localName","resolveUrlsInStyle","runScripts","s$","promise","Promise","resolve","s","c","createElement","textContent","src","setAttribute","getAttribute","whenLoadedPromise","catch","currentScript","parentNode","replaceChild","script","waitForStyles","stylesInImportsSelector","promises","hasLinks","push","all","isIE","isEdge","stylesSelector","removeChild","appendChild","__loadPromise","reject","isElementLoaded","addEventListener","isLoaded","import","readyState","indexOf","sheet","csr","cssRules","type","CSSRule","IMPORT_RULE","styleSheet","whenReady","callback","document","watchImportsLoad","importInfo","checkReady","requiredReadyState","removeEventListener","READY_EVENT","allImports","loadedImports","errorImports","imp","Object","defineProperty","get","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","style","linkUrl","cssText","r","replaceUrls","text","regexp","replace","m","pre","url","post","urlPath","href","URL","test","Xhr","async","load","request","XMLHttpRequest","open","redirectedUrl","undefined","locationHeader","getResponseHeader","substr","location","origin","e","console","error","message","status","response","responseText","send","addNodes","nodes","require","checkDone","addNode","elt","dedupe","fetch","tail","match","pieces","split","body","header","atob","decodeURIComponent","receive","resource","err","$p","p","display","innerHTML","o","assetpath","importsSelectors","scriptType","_flatten","__fired","eventType","dispatchEvent","CustomEvent","bubbles","cancelable","detail","__firstImport","_observe","__importObserver","subtree","mutations","j","addedNodes","Element","prototype","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","navigator","userAgent","window","HTMLImports"],"mappings":"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","file":"html-imports.min.js","sourcesContent":["/**\r\n * @license\r\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\n(function(scope) {\r\n\r\n  /********************* base setup *********************/\r\n  const IMPORT_SELECTOR = 'link[rel=import]';\r\n  const useNative = Boolean('import' in document.createElement('link'));\r\n  const flags = {\r\n    bust: false,\r\n    log: false\r\n  };\r\n\r\n  // Polyfill `currentScript` for browsers without it.\r\n  let currentScript = null;\r\n  if ('currentScript' in document === false) {\r\n    Object.defineProperty(document, 'currentScript', {\r\n      get: function() {\r\n        return currentScript ||\r\n          // NOTE: only works when called in synchronously executing code.\r\n          // readyState should check if `loading` but IE10 is\r\n          // interactive when scripts run so we cheat.\r\n          (document.readyState !== 'complete' ?\r\n            document.scripts[document.scripts.length - 1] : null);\r\n      },\r\n      configurable: true\r\n    });\r\n  }\r\n\r\n  /********************* path fixup *********************/\r\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\r\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\r\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\r\n\r\n  // path fixup: style elements in imports must be made relative to the main\r\n  // document. We fixup url's in url() and @import.\r\n  const Path = {\r\n    resolveUrlsInStyle: function(style, linkUrl) {\r\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\r\n    },\r\n\r\n    resolveUrlsInCssText: function(cssText, linkUrl) {\r\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\r\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\r\n      return r;\r\n    },\r\n\r\n    replaceUrls: function(text, linkUrl, regexp) {\r\n      return text.replace(regexp, function(m, pre, url, post) {\r\n        let urlPath = url.replace(/[\"']/g, '');\r\n        if (linkUrl) {\r\n          urlPath = (new URL(urlPath, linkUrl)).href;\r\n        }\r\n        return pre + '\\'' + urlPath + '\\'' + post;\r\n      });\r\n    },\r\n\r\n    replaceAttrUrl: function(text, linkUrl) {\r\n      if (text && ABS_URL_TEST.test(text)) {\r\n        return text;\r\n      } else {\r\n        return new URL(text, linkUrl).href;\r\n      }\r\n    }\r\n  };\r\n\r\n  /********************* Xhr processor *********************/\r\n  const Xhr = {\r\n\r\n    async: true,\r\n\r\n    /**\r\n     * @param {!string} url\r\n     * @param {!function(boolean, ?, string=)} callback\r\n     * @return {XMLHttpRequest}\r\n     */\r\n    load: function(url, callback) {\r\n      const request = new XMLHttpRequest();\r\n      if (flags.bust) {\r\n        url += '?' + Math.random();\r\n      }\r\n      request.open('GET', url, Xhr.async);\r\n      request.addEventListener('readystatechange', (e) => {\r\n        if (request.readyState === 4) {\r\n          // Servers redirecting an import can add a Location header to help us\r\n          // polyfill correctly.\r\n          let redirectedUrl = undefined;\r\n          try {\r\n            const locationHeader = request.getResponseHeader('Location');\r\n            if (locationHeader) {\r\n              // Relative or full path.\r\n              redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\r\n                location.origin + locationHeader : locationHeader;\r\n            }\r\n          } catch (e) {\r\n            console.error(e.message);\r\n          }\r\n          const isOk = ((request.status >= 200 && request.status < 300) ||\r\n            request.status === 304 || request.status === 0);\r\n          const resource = (request.response || request.responseText);\r\n          callback(!isOk, resource, redirectedUrl);\r\n        }\r\n      });\r\n      request.send();\r\n      return request;\r\n    }\r\n  };\r\n\r\n  /********************* loader *********************/\r\n  // This loader supports a dynamic list of urls\r\n  // and an oncomplete callback that is called when the loader is done.\r\n  // NOTE: The polyfill currently does *not* need this dynamism or the\r\n  // onComplete concept. Because of this, the loader could be simplified\r\n  // quite a bit.\r\n  class Loader {\r\n    constructor(onLoad, onComplete) {\r\n      this.cache = {};\r\n      this.onload = onLoad;\r\n      this.oncomplete = onComplete;\r\n      this.inflight = 0;\r\n      this.pending = {};\r\n    }\r\n\r\n    addNodes(nodes) {\r\n      // number of transactions to complete\r\n      this.inflight += nodes.length;\r\n      // commence transactions\r\n      for (let i = 0, l = nodes.length, n;\r\n        (i < l) && (n = nodes[i]); i++) {\r\n        this.require(n);\r\n      }\r\n      // anything to do?\r\n      this.checkDone();\r\n    }\r\n\r\n    addNode(node) {\r\n      // number of transactions to complete\r\n      this.inflight++;\r\n      // commence transactions\r\n      this.require(node);\r\n      // anything to do?\r\n      this.checkDone();\r\n    }\r\n\r\n    require(elt) {\r\n      const url = elt.src || elt.href;\r\n      // deduplication\r\n      if (!this.dedupe(url, elt)) {\r\n        // fetch this resource\r\n        this.fetch(url, elt);\r\n      }\r\n    }\r\n\r\n    dedupe(url, elt) {\r\n      if (this.pending[url]) {\r\n        // add to list of nodes waiting for inUrl\r\n        this.pending[url].push(elt);\r\n        // don't need fetch\r\n        return true;\r\n      }\r\n      let resource;\r\n      if (this.cache[url]) {\r\n        this.onload(url, elt, this.cache[url]);\r\n        // finished this transaction\r\n        this.tail();\r\n        // don't need fetch\r\n        return true;\r\n      }\r\n      // first node waiting for inUrl\r\n      this.pending[url] = [elt];\r\n      // need fetch (not a dupe)\r\n      return false;\r\n    }\r\n\r\n    fetch(url, elt) {\r\n      flags.log && console.log('fetch', url, elt);\r\n      if (!url) {\r\n        this.receive(url, elt, true, 'error: href must be specified');\r\n      } else if (url.match(/^data:/)) {\r\n        // Handle Data URI Scheme\r\n        const pieces = url.split(',');\r\n        const header = pieces[0];\r\n        let body = pieces[1];\r\n        if (header.indexOf(';base64') > -1) {\r\n          body = atob(body);\r\n        } else {\r\n          body = decodeURIComponent(body);\r\n        }\r\n        this.receive(url, elt, false, body);\r\n      } else {\r\n        Xhr.load(url, (error, resource, redirectedUrl) =>\r\n          this.receive(url, elt, error, resource, redirectedUrl));\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {!string} url\r\n     * @param {!Element} elt\r\n     * @param {boolean} err\r\n     * @param {string=} resource\r\n     * @param {string=} redirectedUrl\r\n     */\r\n    receive(url, elt, err, resource, redirectedUrl) {\r\n      this.cache[url] = resource;\r\n      const $p = this.pending[url];\r\n      for (let i = 0, l = $p.length, p;\r\n        (i < l) && (p = $p[i]); i++) {\r\n        // If url was redirected, use the redirected location so paths are\r\n        // calculated relative to that.\r\n        this.onload(url, p, resource, err, redirectedUrl);\r\n        this.tail();\r\n      }\r\n      this.pending[url] = null;\r\n    }\r\n\r\n    tail() {\r\n      --this.inflight;\r\n      this.checkDone();\r\n    }\r\n\r\n    checkDone() {\r\n      if (!this.inflight) {\r\n        this.oncomplete();\r\n      }\r\n    }\r\n  }\r\n\r\n  /********************* importer *********************/\r\n\r\n  const stylesSelector = [\r\n    'style:not([type])',\r\n    'link[rel=stylesheet][href]:not([type])'\r\n  ].join(',');\r\n\r\n  const stylesInImportsSelector = [\r\n    `${IMPORT_SELECTOR} style:not([type])`,\r\n    `${IMPORT_SELECTOR} link[rel=stylesheet][href]:not([type])`\r\n  ].join(',');\r\n\r\n  const importsSelectors = [\r\n    IMPORT_SELECTOR,\r\n    stylesSelector,\r\n    'script:not([type])',\r\n    'script[type=\"application/javascript\"]',\r\n    'script[type=\"text/javascript\"]'\r\n  ].join(',');\r\n\r\n  /**\r\n   * Importer will:\r\n   * - load any linked import documents (with deduping)\r\n   * - whenever an import is loaded, prompt the parser to try to parse\r\n   * - observe imported documents for new elements (these are handled via the\r\n   *   dynamic importer)\r\n   */\r\n  class Importer {\r\n    /**\r\n     * @param {!HTMLDocument} doc\r\n     */\r\n    constructor(doc) {\r\n      this.documents = {};\r\n      this._doc = doc;\r\n      // Make sure to catch any imports that are in the process of loading\r\n      // when this script is run.\r\n      const imports = doc.querySelectorAll(IMPORT_SELECTOR);\r\n      for (let i = 0, l = imports.length; i < l; i++) {\r\n        whenElementLoaded(imports[i]);\r\n      }\r\n      // Observe only document head\r\n      new MutationObserver(this._onMutation.bind(this)).observe(doc.head, {\r\n        childList: true\r\n      });\r\n\r\n      if (!useNative) {\r\n        this._loader = new Loader(\r\n          this._onLoaded.bind(this), this._onLoadedAll.bind(this)\r\n        );\r\n        whenDocumentReady(doc).then(() => this._loadSubtree(doc));\r\n      }\r\n    }\r\n\r\n    _loadSubtree(doc) {\r\n      const nodes = doc.querySelectorAll(IMPORT_SELECTOR);\r\n      // add these nodes to loader's queue\r\n      this._loader.addNodes(nodes);\r\n    }\r\n\r\n    _onLoaded(url, elt, resource, err, redirectedUrl) {\r\n      flags.log && console.log('loaded', url, elt);\r\n      // We've already seen a document at this url, return.\r\n      if (this.documents[url] !== undefined) {\r\n        return;\r\n      }\r\n      if (err) {\r\n        this.documents[url] = null;\r\n      } else {\r\n        // Generate an HTMLDocument from data.\r\n        const doc = makeDocument(resource, redirectedUrl || url);\r\n        // note, we cannot use MO to detect parsed nodes because\r\n        // SD polyfill does not report these as mutations.\r\n        this._loadSubtree(doc);\r\n        this.documents[url] = doc;\r\n      }\r\n    }\r\n\r\n    _onLoadedAll() {\r\n      this._flatten(this._doc);\r\n      Promise.all([\r\n        runScripts(this._doc),\r\n        waitForStyles(this._doc)\r\n      ]).then(() => fireEvents(this._doc));\r\n    }\r\n\r\n    _flatten(element) {\r\n      const n$ = element.querySelectorAll(IMPORT_SELECTOR);\r\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\r\n        n.import = this.documents[n.href];\r\n        if (n.import && !n.import.__firstImport) {\r\n          n.import.__firstImport = n;\r\n          this._flatten(n.import);\r\n          n.appendChild(n.import);\r\n          // If in the main document, observe for any imports added later.\r\n          if (element === document) {\r\n            this._observe(n.import);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    _observe(element) {\r\n      if (element.__importObserver) {\r\n        return;\r\n      }\r\n      element.__importObserver = new MutationObserver(this._onMutation.bind(this));\r\n      element.__importObserver.observe(element, {\r\n        childList: true,\r\n        subtree: true\r\n      });\r\n    }\r\n\r\n    /**\r\n     * @param {Array<MutationRecord>} mutations\r\n     */\r\n    _onMutation(mutations) {\r\n      for (let j = 0, m; j < mutations.length && (m = mutations[j]); j++) {\r\n        for (let i = 0, l = m.addedNodes ? m.addedNodes.length : 0; i < l; i++) {\r\n          const n = /** @type {Element} */ (m.addedNodes[i]);\r\n          if (n && isImportLink(n)) {\r\n            if (useNative) {\r\n              whenElementLoaded(n);\r\n            } else {\r\n              this._loader.addNode(n);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * @type {Function}\r\n   */\r\n  const MATCHES = Element.prototype.matches ||\r\n    Element.prototype.matchesSelector ||\r\n    Element.prototype.mozMatchesSelector ||\r\n    Element.prototype.msMatchesSelector ||\r\n    Element.prototype.oMatchesSelector ||\r\n    Element.prototype.webkitMatchesSelector;\r\n\r\n  /**\r\n   * @param {!Node} node\r\n   * @return {boolean}\r\n   */\r\n  function isImportLink(node) {\r\n    return node.nodeType === Node.ELEMENT_NODE && MATCHES.call(node, IMPORT_SELECTOR);\r\n  }\r\n\r\n  /********************* vulcanize style inline processing  *********************/\r\n  const attrs = ['action', 'src', 'href', 'url', 'style'];\r\n\r\n  function fixUrlAttributes(element, base) {\r\n    attrs.forEach((a) => {\r\n      const at = element.attributes[a];\r\n      const v = at && at.value;\r\n      if (v && (v.search(/({{|\\[\\[)/) < 0)) {\r\n        at.value = (a === 'style') ?\r\n          Path.resolveUrlsInCssText(v, base) :\r\n          Path.replaceAttrUrl(v, base);\r\n      }\r\n    });\r\n  }\r\n\r\n  function fixUrlsInTemplate(template, base) {\r\n    const content = template.content;\r\n    if (!content) { // Template not supported.\r\n      return;\r\n    }\r\n    const n$ = content.querySelectorAll('style, form[action], [src], [href], [url], [style]');\r\n    for (let i = 0; i < n$.length; i++) {\r\n      const n = n$[i];\r\n      if (n.localName == 'style') {\r\n        Path.resolveUrlsInStyle(n, base);\r\n      } else {\r\n        fixUrlAttributes(n, base);\r\n      }\r\n    }\r\n    fixUrlsInTemplates(content, base);\r\n  }\r\n\r\n  function fixUrlsInTemplates(element, base) {\r\n    const t$ = element.querySelectorAll('template');\r\n    for (let i = 0; i < t$.length; i++) {\r\n      fixUrlsInTemplate(t$[i], base);\r\n    }\r\n  }\r\n\r\n  const scriptType = 'import-script';\r\n\r\n  function fixUrls(element, base) {\r\n    const n$ = element.querySelectorAll(importsSelectors);\r\n    for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\r\n      // Ensure we add load/error listeners before modifying urls or appending\r\n      // these to the main document.\r\n      whenElementLoaded(n);\r\n      if (n.href) {\r\n        n.setAttribute('href', Path.replaceAttrUrl(n.getAttribute('href'), base));\r\n      }\r\n      if (n.src) {\r\n        n.setAttribute('src', Path.replaceAttrUrl(n.getAttribute('src'), base));\r\n      }\r\n      if (n.localName == 'style') {\r\n        Path.resolveUrlsInStyle(n, base);\r\n      } else if (n.localName === 'script') {\r\n        if (n.textContent) {\r\n          n.textContent += `\\n//# sourceURL=${base}`;\r\n        }\r\n        // NOTE: we override the type here, might need to keep track of original\r\n        // type and apply it to clone when running the script.\r\n        n.setAttribute('type', scriptType);\r\n      }\r\n    }\r\n    fixUrlsInTemplates(element, base);\r\n  }\n\n  function fixDomModules(element, url) {\r\n    const s$ = element.querySelectorAll('dom-module');\r\n    for (let i = 0; i < s$.length; i++) {\r\n      const o = s$[i];\r\n      const assetpath = o.getAttribute('assetpath') || '';\r\n      o.setAttribute('assetpath', Path.replaceAttrUrl(assetpath, url));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Replaces all the imported scripts with a clone in order to execute them.\r\n   * Updates the `currentScript`.\r\n   * @param {!HTMLDocument} doc\r\n   * @return {Promise} Resolved when scripts are loaded.\r\n   */\r\n  function runScripts(doc) {\r\n    const s$ = doc.querySelectorAll(`script[type=${scriptType}]`);\r\n    let promise = Promise.resolve();\r\n    for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\r\n      promise = promise.then(() => {\r\n        const c = doc.createElement('script');\r\n        c.textContent = s.textContent;\r\n        if (s.src) {\r\n          c.setAttribute('src', s.getAttribute('src'));\r\n        }\r\n        // Listen for load/error events before adding the clone to the document.\r\n        // Catch failures, always return c.\r\n        const whenLoadedPromise = whenElementLoaded(c).catch(() => c);\r\n        // Update currentScript and replace original with clone script.\r\n        currentScript = c;\r\n        s.parentNode.replaceChild(c, s);\r\n        // After is loaded, reset currentScript.\r\n        return whenLoadedPromise.then((script) => {\r\n          if (script === currentScript) {\r\n            currentScript = null;\r\n          }\r\n        });\r\n      });\r\n    }\r\n    return promise;\r\n  }\r\n\r\n  /**\r\n   * Waits for all the imported stylesheets/styles to be loaded.\r\n   * @param {!HTMLDocument} doc\r\n   * @return {Promise}\r\n   */\r\n  function waitForStyles(doc) {\r\n    const s$ = doc.querySelectorAll(stylesInImportsSelector);\r\n    const promises = [];\r\n    let hasLinks = false;\r\n    for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\r\n      hasLinks = hasLinks || s.localName === 'link';\r\n      // Catch failures, always return s\r\n      promises.push(\r\n        whenElementLoaded(s).catch(() => s)\r\n      );\r\n    }\r\n    return Promise.all(promises).then(() => {\r\n      // NOTE(valdrin): When imports have link stylesheets, the dom order won't\r\n      // matter in IE/Edge. We remove then add all the styles and links in order\r\n      // to solve thi issue. We could also remove the styles before adding the\r\n      // imported links and add them back to the dom right after.\r\n      if ((isIE || isEdge) && hasLinks) {\r\n        const n$ = doc.head.querySelectorAll(stylesSelector);\r\n        for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\r\n          n.parentNode.removeChild(n);\r\n          doc.head.appendChild(n);\r\n        }\r\n      }\r\n      return s$;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fires load/error events for loaded imports.\r\n   * @param {!HTMLDocument} doc\r\n   */\r\n  function fireEvents(doc) {\r\n    const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\r\n      (doc.querySelectorAll(IMPORT_SELECTOR));\r\n    // Inverse order to have events firing bottom-up.\r\n    for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\r\n      // Don't fire twice same event.\r\n      if (!n.__fired) {\r\n        n.__fired = true;\r\n        const eventType = n.import ? 'load' : 'error';\r\n        flags.log && console.warn('fire', eventType, n.href);\r\n        // Ensure the load promise is setup before firing the event.\r\n        whenElementLoaded(n);\r\n        n.dispatchEvent(new CustomEvent(eventType, {\r\n          bubbles: false,\r\n          cancelable: false,\r\n          detail: undefined\r\n        }));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Waits for an element to finish loading. If already done loading, it will\r\n   * mark the element accordingly.\r\n   * @param {!Element} element\r\n   * @return {Promise}\r\n   */\r\n  function whenElementLoaded(element) {\r\n    if (!element.__loadPromise) {\r\n      element.__loadPromise = new Promise((resolve, reject) => {\r\n        if (isElementLoaded(element)) {\r\n          resolve(element);\r\n        } else {\r\n          element.addEventListener('load', () => resolve(element));\r\n          element.addEventListener('error', () => reject(element));\r\n        }\r\n      });\r\n    }\r\n    return element.__loadPromise;\r\n  }\r\n\r\n  /**\r\n   * @param {!Element} element\r\n   * @return {boolean}\r\n   */\r\n  function isElementLoaded(element) {\r\n    let isLoaded = false;\r\n    if (useNative && isImportLink(element) && element.import &&\r\n      element.import.readyState !== 'loading') {\r\n      isLoaded = true;\r\n    } else if (isIE && element.localName === 'style') {\r\n      // NOTE: IE does not fire \"load\" event for styles that have already\r\n      // loaded. This is in violation of the spec, so we try our hardest to\r\n      // work around it.\r\n      // If there's not @import in the textContent, assume it has loaded\r\n      if (element.textContent.indexOf('@import') == -1) {\r\n        isLoaded = true;\r\n        // if we have a sheet, we have been parsed\r\n      } else if (element.sheet) {\r\n        isLoaded = true;\r\n        const csr = element.sheet.cssRules;\r\n        // search the rules for @import's\r\n        for (let i = 0, l = csr ? csr.length : 0; i < l && isLoaded; i++) {\r\n          if (csr[i].type === CSSRule.IMPORT_RULE) {\r\n            // if every @import has resolved, fake the load\r\n            isLoaded = Boolean(csr[i].styleSheet);\r\n          }\r\n        }\r\n      }\r\n    } else if (element.localName === 'script' && !element.src) {\r\n      isLoaded = true;\r\n    }\r\n    return isLoaded;\r\n  }\r\n\r\n  /**\r\n   * Creates a new document containing resource and normalizes urls accordingly.\r\n   * @param {string} resource\r\n   * @param {string} url\r\n   * @return {Node}\r\n   */\r\n  function makeDocument(resource, url) {\r\n    const content = document.createElement('import-content');\r\n    content.setAttribute('import-href', url);\r\n    content.style.display = 'none';\r\n    content.innerHTML = resource;\r\n\r\n    // TODO(sorvell): this is specific to users of <dom-module> (Polymer).\r\n    fixDomModules(content, url);\r\n    fixUrls(content, url);\r\n    return content;\r\n  }\r\n\r\n  /**\r\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\r\n    method. This api is necessary because unlike the native implementation,\r\n    script elements do not force imports to resolve. Instead, users should wrap\r\n    code in either an `HTMLImportsLoaded` handler or after load time in an\r\n    `HTMLImports.whenReady(callback)` call.\r\n\r\n    NOTE: This module also supports these apis under the native implementation.\r\n    Therefore, if this file is loaded, the same code can be used under both\r\n    the polyfill and native implementation.\r\n   */\r\n\r\n  const isIE = /Trident/.test(navigator.userAgent);\r\n  const isEdge = !isIE && /Edge\\/\\d./i.test(navigator.userAgent);\r\n  const requiredReadyState = isIE ? 'complete' : 'interactive';\r\n  const READY_EVENT = 'readystatechange';\r\n\r\n  /**\r\n   * Calls the callback when all HTMLImports in the document at call time\r\n   * (or at least document ready) have loaded.\r\n   * @param {function(!HTMLImportInfo)=} callback\r\n   * @param {HTMLDocument=} doc\r\n   * @return {Promise}\r\n   */\r\n  function whenReady(callback, doc) {\r\n    doc = doc || document;\r\n    // 1. ensure the document is in a ready state (has dom), then\r\n    // 2. watch for loading of imports and call callback when done\r\n    return whenDocumentReady(doc).then(watchImportsLoad).then((importInfo) => {\r\n      callback && callback(importInfo);\r\n      return importInfo;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {!HTMLDocument} doc\r\n   * @returns {boolean}\r\n   */\r\n  function isDocumentReady(doc) {\r\n    return (doc.readyState === 'complete' ||\r\n      doc.readyState === requiredReadyState);\r\n  }\r\n\r\n  /**\n   * Resolved when document is in ready state.\n   * @param {!HTMLDocument} doc\n   * @returns {Promise}\n   */\r\n  function whenDocumentReady(doc) {\r\n    return new Promise((resolve) => {\r\n      const checkReady = function checkReady() {\r\n        if (isDocumentReady(doc)) {\r\n          doc.removeEventListener(READY_EVENT, checkReady);\r\n          resolve(doc);\r\n        }\r\n      }\r\n      doc.addEventListener(READY_EVENT, checkReady);\r\n      checkReady();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Resolved when all imports are done loading. The promise returns the import\r\n   * details as HTMLImportInfo object.\r\n   * @param {!HTMLDocument} doc\r\n   * @returns {Promise}\r\n   */\r\n  function watchImportsLoad(doc) {\r\n    let imports = doc.querySelectorAll(IMPORT_SELECTOR);\r\n    const promises = [];\r\n    const importInfo = /** @type {!HTMLImportInfo} */ ({\r\n      allImports: [],\r\n      loadedImports: [],\r\n      errorImports: []\r\n    });\r\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\r\n      // Skip nested imports.\r\n      if (MATCHES.call(imp, `${IMPORT_SELECTOR} ${IMPORT_SELECTOR}`)) {\r\n        continue;\r\n      }\r\n      importInfo.allImports.push(imp);\r\n      promises.push(whenElementLoaded(imp).then((imp) => {\r\n        importInfo.loadedImports.push(imp);\r\n        return imp;\r\n      }).catch((imp) => {\r\n        importInfo.errorImports.push(imp);\r\n        // Capture failures, always return imp.\r\n        return imp;\r\n      }));\r\n    }\r\n    // Return aggregated info.\r\n    return Promise.all(promises).then(() => importInfo);\r\n  }\r\n\r\n  new Importer(document);\r\n\r\n  // Fire the 'HTMLImportsLoaded' event when imports in document at load time\r\n  // have loaded. This event is required to simulate the script blocking\r\n  // behavior of native imports. A main document script that needs to be sure\r\n  // imports have loaded should wait for this event.\r\n  whenReady((detail) =>\r\n    document.dispatchEvent(new CustomEvent('HTMLImportsLoaded', {\r\n      cancelable: true,\r\n      bubbles: true,\r\n      detail: detail\r\n    })));\r\n\r\n  // exports\r\n  scope.useNative = useNative;\r\n  scope.whenReady = whenReady;\r\n\r\n})(window.HTMLImports = (window.HTMLImports || {}));\r\n"]}