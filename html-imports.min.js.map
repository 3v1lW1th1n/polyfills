{"version":3,"sources":["src/html-imports.js"],"names":["scope","importForElement","element","useNative","ownerDocument","owner","parentNode","host","isImportLink","whenImportsReady","callback","imports","document","querySelectorAll","rootImportSelector","pending","length","i","l","imp","whenElementLoaded","whenDocumentReady","readyState","stateChanged","removeEventListener","addEventListener","whenReady","localName","src","onLoadingDone","event","type","isIE","node","nodeType","Node","ELEMENT_NODE","rel","constructor","Importer","documents","inflight","observe","MutationObserver","m","handleMutations","head","childList","subtree","loadImports","createElement","currentScript","Object","defineProperty","get","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","STYLESHEET_REGEXP","Path","fixUrls","base","href","setAttribute","replaceAttrUrl","getAttribute","resolveUrlsInStyle","fixUrlAttributes","attrs","a","at","attributes","v","value","search","resolveUrlsInCssText","fixUrlsInTemplates","t$","fixUrlsInTemplate","template","content","n$","n","style","linkUrl","textContent","cssText","r","replaceUrls","text","regexp","replace","pre","url","post","urlPath","resolveUrl","test","undefined","__workingURL","u","URL","pathname","e","doc","__tempDoc","implementation","createHTMLDocument","__base","appendChild","__anchor","Xhr","async","load","success","fail","match","pieces","split","resource","header","indexOf","atob","decodeURIComponent","request","XMLHttpRequest","open","onload","request.onload","redirectedUrl","getResponseHeader","location","origin","protocol","response","responseText","status","send","navigator","userAgent","links","importSelector","loadImport","processImportsIfLoadingDone","link","makeDocument","createDocumentFragment","p1","p2","innerHTML","firstChild","baseEl","querySelector","removeAttribute","s$","s","importDependenciesSelector","inlineScriptIndex","importDependencyAttr","encodeURIComponent","num","flatten","scriptsOk","stylesOk","waitForStyles","fireEvents","runScripts","import","DOCUMENT_FRAGMENT_NODE","cloneScript","clone","j","ll","name","replaceChild","pendingScriptsSelector","pendingStylesSelector","needsMove","disabledLinkSelector","rootImport","parent","next","nextSibling","placeholder","insertBefore","fireEventIfNeeded","dispatchEvent","CustomEvent","eventType","bubbles","cancelable","detail","mutations","addedNodes","ii","iii","imps","elem","target","window","HTMLImports"],"mappings":"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","file":"html-imports.min.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(scope => {\n\n  /********************* base setup *********************/\n  const useNative = Boolean('import' in document.createElement('link'));\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat. This is not needed by\n          // html-imports polyfill but helps generally polyfill `currentScript`.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n  const STYLESHEET_REGEXP = /(<link[^>]*)(rel=['|\"]?stylesheet['|\"]?[^>]*>)/g;\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n\n    fixUrls(element, base) {\n      if (element.href) {\n        element.setAttribute('href',\n          Path.replaceAttrUrl(element.getAttribute('href'), base));\n      }\n      if (element.src) {\n        element.setAttribute('src',\n          Path.replaceAttrUrl(element.getAttribute('src'), base));\n      }\n      if (element.localName === 'style') {\n        Path.resolveUrlsInStyle(element, base);\n      }\n    },\n\n    fixUrlAttributes(element, base) {\n      const attrs = ['action', 'src', 'href', 'url', 'style'];\n      for (let i = 0, a; i < attrs.length && (a = attrs[i]); i++) {\n        const at = element.attributes[a];\n        const v = at && at.value;\n        // Skip bound attribute values (assume binding is done via {} and []).\n        // TODO(valdrin) consider exposing a library-implementable hook.\n        if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n          at.value = (a === 'style') ?\n            Path.resolveUrlsInCssText(v, base) :\n            Path.replaceAttrUrl(v, base);\n        }\n      }\n    },\n\n    fixUrlsInTemplates(element, base) {\n      const t$ = element.querySelectorAll('template');\n      for (let i = 0; i < t$.length; i++) {\n        Path.fixUrlsInTemplate(t$[i], base);\n      }\n    },\n\n    fixUrlsInTemplate(template, base) {\n      // If template is not supported, still resolve urls within it.\n      const content = template.content || template;\n      const n$ = content.querySelectorAll(\n        'style, form[action], [src], [href], [url], [style]');\n      for (let i = 0; i < n$.length; i++) {\n        const n = n$[i];\n        if (n.localName == 'style') {\n          Path.resolveUrlsInStyle(n, base);\n        } else {\n          Path.fixUrlAttributes(n, base);\n        }\n      }\n      Path.fixUrlsInTemplates(content, base);\n    },\n\n    resolveUrlsInStyle(style, linkUrl) {\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText(cssText, linkUrl) {\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls(text, linkUrl, regexp) {\n      return text.replace(regexp, (m, pre, url, post) => {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path.resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return Path.resolveUrl(text, linkUrl);\n      }\n    },\n\n    resolveUrl(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @param {!function(!string, string=)} success\n     * @param {!function(!string)} fail\n     */\n    load(url, success, fail) {\n      if (!url) {\n        fail('error: href must be specified');\n      } else if (url.match(/^data:/)) {\n        // Handle Data URI Scheme\n        const pieces = url.split(',');\n        const header = pieces[0];\n        let resource = pieces[1];\n        if (header.indexOf(';base64') > -1) {\n          resource = atob(resource);\n        } else {\n          resource = decodeURIComponent(resource);\n        }\n        success(resource);\n      } else {\n        const request = new XMLHttpRequest();\n        request.open('GET', url, Xhr.async);\n        request.onload = () => {\n          // Servers redirecting an import can add a Location header to help us\n          // polyfill correctly. Handle relative and full paths.\n          let redirectedUrl = request.getResponseHeader('Location');\n          if (redirectedUrl && redirectedUrl.indexOf('/') === 0) {\n            // In IE location.origin might not work\n            // https://connect.microsoft.com/IE/feedback/details/1763802/location-origin-is-undefined-in-ie-11-on-windows-10-but-works-on-windows-7\n            const origin = (location.origin || location.protocol + '//' + location.host);\n            redirectedUrl = origin + redirectedUrl;\n          }\n          const resource = /** @type {string} */ (request.response || request.responseText);\n          if (request.status === 304 || request.status === 0 ||\n            request.status >= 200 && request.status < 300) {\n            success(resource, redirectedUrl);\n          } else {\n            fail(resource);\n          }\n        };\n        request.send();\n      }\n    }\n  };\n\n  /********************* importer *********************/\n\n  const isIE = /Trident/.test(navigator.userAgent) ||\n    /Edge\\/\\d./i.test(navigator.userAgent);\n  const supportsUnhandledrejection = ('onunhandledrejection' in window);\n\n  const importSelector = 'link[rel=import]';\n\n  // Used to disable loading of resources.\n  const importDisableType = 'import-disable';\n\n  const disabledLinkSelector = `link[rel=stylesheet][href][type=${importDisableType}]`;\n\n  const importDependenciesSelector = `${importSelector}, ${disabledLinkSelector},\n    style:not([type]), link[rel=stylesheet][href]:not([type]),\n    script:not([type]), script[type=\"application/javascript\"],\n    script[type=\"text/javascript\"]`;\n\n  const importDependencyAttr = 'import-dependency';\n\n  const rootImportSelector = `${importSelector}:not(${importDependencyAttr})`;\n\n  const pendingScriptsSelector = `script[${importDependencyAttr}]`;\n\n  const pendingStylesSelector = `style[${importDependencyAttr}],\n    link[rel=stylesheet][${importDependencyAttr}]`;\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    constructor() {\n      this.documents = {};\n      // Used to keep track of pending loads, so that flattening and firing of\n      // events can be done when all resources are ready.\n      this.inflight = 0;\n      // 1. Load imports contents\n      // 2. Assign them to first import links on the document\n      // 3. Wait for import styles & scripts to be done loading/running\n      // 4. Fire load/error events\n      whenDocumentReady(() => {\n        // Observe changes on <head>.\n        new MutationObserver(m => this.handleMutations(m)).observe(document.head, {\n          childList: true,\n          subtree: true\n        });\n        this.loadImports(document);\n      });\n    }\n\n    /**\n     * @param {!(HTMLDocument|DocumentFragment)} doc\n     */\n    loadImports(doc) {\n      const links = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      for (let i = 0, l = links.length; i < l; i++) {\n        this.loadImport(links[i]);\n      }\n      this.processImportsIfLoadingDone();\n    }\n\n    /**\n     * @param {!HTMLLinkElement} link\n     */\n    loadImport(link) {\n      const url = link.href;\n      // This resource is already being handled by another import.\n      if (this.documents[url] !== undefined) {\n        return;\n      }\n      this.inflight++;\n      // Mark it as pending to notify others this url is being loaded.\n      this.documents[url] = 'pending';\n      Xhr.load(url, (resource, redirectedUrl) => {\n        const doc = this.makeDocument(resource, redirectedUrl || url);\n        this.documents[url] = doc;\n        this.inflight--;\n        // Load subtree.\n        this.loadImports(doc);\n      }, () => {\n        // If load fails, handle error.\n        this.documents[url] = null;\n        this.inflight--;\n        this.processImportsIfLoadingDone();\n      });\n    }\n\n    /**\n     * Creates a new document containing resource and normalizes urls accordingly.\n     * @param {string=} resource\n     * @param {string=} url\n     * @return {!DocumentFragment}\n     */\n    makeDocument(resource, url) {\n      if (!resource) {\n        return document.createDocumentFragment();\n      }\n\n      if (isIE) {\n        // <link rel=stylesheet> should be appended to <head>. Not doing so\n        // in IE/Edge breaks the cascading order. We disable the loading by\n        // setting the type before setting innerHTML to avoid loading\n        // resources twice.\n        resource = resource.replace(STYLESHEET_REGEXP, (match, p1, p2) => {\n          if (match.indexOf('type=') === -1) {\n            return `${p1} type=${importDisableType} ${p2}`;\n          }\n          return match;\n        });\n      }\n\n      let content;\n      const template = /** @type {!HTMLTemplateElement} */\n        (document.createElement('template'));\n      template.innerHTML = resource;\n      if (template.content) {\n        // This creates issues in Safari10 when used with shadydom (see #12).\n        content = template.content;\n      } else {\n        // <template> not supported, create fragment and move content into it.\n        content = document.createDocumentFragment();\n        while (template.firstChild) {\n          content.appendChild(template.firstChild);\n        }\n      }\n\n      // Support <base> in imported docs. Resolve url and remove its href.\n      const baseEl = content.querySelector('base');\n      if (baseEl) {\n        url = Path.replaceAttrUrl(baseEl.getAttribute('href'), url);\n        baseEl.removeAttribute('href');\n      }\n\n      // This is specific to users of <dom-module> (Polymer).\n      // TODO(valdrin) remove this when Polymer uses importForElement.\n      const s$ = content.querySelectorAll('dom-module');\n      for (let i = 0, s; i < s$.length && (s = s$[i]); i++) {\n        s.setAttribute('assetpath',\n          Path.replaceAttrUrl(s.getAttribute('assetpath') || '', url));\n      }\n\n      const n$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)>} */\n        (content.querySelectorAll(importDependenciesSelector));\n      // For source map hints.\n      let inlineScriptIndex = 0;\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        // Listen for load/error events, then fix urls.\n        whenElementLoaded(n);\n        Path.fixUrls(n, url);\n        // Mark for easier selectors.\n        n.setAttribute(importDependencyAttr, '');\n        // Generate source map hints for inline scripts.\n        if (n.localName === 'script' && !n.src && n.textContent) {\n          const num = inlineScriptIndex ? `-${inlineScriptIndex}` : '';\n          const content = n.textContent + `\\n//# sourceURL=${url}${num}.js\\n`;\n          // We use the src attribute so it triggers load/error events, and it's\n          // easier to capture errors (e.g. parsing) like this.\n          n.setAttribute('src', 'data:text/javascript;charset=utf-8,' + encodeURIComponent(content));\n          n.textContent = '';\n          inlineScriptIndex++;\n        }\n      }\n      Path.fixUrlsInTemplates(content, url);\n      return content;\n    }\n\n    /**\n     * Waits for loaded imports to finish loading scripts and styles, then fires\n     * the load/error events.\n     */\n    processImportsIfLoadingDone() {\n      // Wait until all resources are ready, then load import resources.\n      if (this.inflight) {\n        return;\n      }\n      this.flatten(document);\n      // We wait for styles to load, and at the same time we execute the scripts,\n      // then fire the load/error events for imports to have faster whenReady\n      // callback execution.\n      // NOTE: This is different for native behavior where scripts would be\n      // executed after the styles before them are loaded.\n      // To achieve that, we could select pending styles and scripts in the\n      // document and execute them sequentially in their dom order.\n      let scriptsOk = false,\n        stylesOk = false;\n      this.waitForStyles(() => {\n        stylesOk = true;\n        if (scriptsOk) {\n          this.fireEvents();\n        }\n      });\n      this.runScripts(() => {\n        scriptsOk = true;\n        if (stylesOk) {\n          this.fireEvents();\n        }\n      });\n    }\n\n    /**\n     * @param {!HTMLDocument} doc\n     */\n    flatten(doc) {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        const imp = this.documents[n.href];\n        n.import = /** @type {!Document} */ (imp);\n        if (imp && imp.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n          // We set the .import to be the link itself, and update its readyState.\n          // Other links with the same href will point to this link.\n          this.documents[n.href] = n;\n          n.readyState = 'loading';\n          // Suppress Closure warning about incompatible subtype assignment.\n          ( /** @type {!HTMLElement} */ (n).import = n);\n          this.flatten(imp);\n          n.appendChild(imp);\n        }\n      }\n    }\n\n    /**\n     * Replaces all the imported scripts with a clone in order to execute them.\n     * Updates the `currentScript`.\n     * @param {!function()} callback\n     */\n    runScripts(callback) {\n      const s$ = document.querySelectorAll(pendingScriptsSelector);\n      const l = s$.length;\n      const cloneScript = i => {\n        if (i < l) {\n          // The pending scripts have been generated through innerHTML and\n          // browsers won't execute them for security reasons. We cannot use\n          // s.cloneNode(true) either, the only way to run the script is manually\n          // creating a new element and copying its attributes.\n          const s = s$[i];\n          const clone = /** @type {!HTMLScriptElement} */\n            (document.createElement('script'));\n          // Remove import-dependency attribute to avoid double cloning.\n          s.removeAttribute(importDependencyAttr);\n          for (let j = 0, ll = s.attributes.length; j < ll; j++) {\n            clone.setAttribute(s.attributes[j].name, s.attributes[j].value);\n          }\n          // Update currentScript and replace original with clone script.\n          currentScript = clone;\n          s.parentNode.replaceChild(clone, s);\n          whenElementLoaded(clone, () => {\n            currentScript = null;\n            cloneScript(i + 1);\n          });\n        } else {\n          callback();\n        }\n      };\n      cloneScript(0);\n    }\n\n    /**\n     * Waits for all the imported stylesheets/styles to be loaded.\n     * @param {!function()} callback\n     */\n    waitForStyles(callback) {\n      const s$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLStyleElement)>} */\n        (document.querySelectorAll(pendingStylesSelector));\n      let pending = s$.length;\n      if (!pending) {\n        callback();\n        return;\n      }\n      // <link rel=stylesheet> should be appended to <head>. Not doing so\n      // in IE/Edge breaks the cascading order\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n      // If there is one <link rel=stylesheet> imported, we must move all imported\n      // links and styles to <head>.\n      const needsMove = !!document.querySelector(disabledLinkSelector);\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        // Listen for load/error events, remove selector once is done loading.\n        whenElementLoaded(s, () => {\n          s.removeAttribute(importDependencyAttr);\n          if (--pending === 0) {\n            callback();\n          }\n        });\n        // Check if was already moved to head, to handle the case where the element\n        // has already been moved but it is still loading.\n        if (needsMove && s.parentNode !== document.head) {\n          let rootImport = importForElement(s);\n          while (rootImport && importForElement(rootImport)) {\n            rootImport = importForElement(rootImport);\n          }\n          // Replace the element we're about to move with a placeholder.\n          // NOTE: we first have to append the element to the new parent, then\n          // we can put the placeholder at its place, otherwise load/error events\n          // seem to be fired too early.\n          const parent = s.parentNode,\n            next = s.nextSibling,\n            placeholder = document.createElement(s.localName);\n          // Add reference of the moved element.\n          placeholder['__appliedElement'] = s;\n          // Disable this from appearing in document.styleSheets.\n          placeholder.setAttribute('type', 'import-placeholder');\n          // First, re-parent the element...\n          if (rootImport.parentNode === document.head) {\n            document.head.insertBefore(s, rootImport);\n          } else {\n            document.head.appendChild(s);\n          }\n          // ...and then, insert the placeholder at the right place.\n          parent.insertBefore(placeholder, next);\n          // Enable the loading of <link rel=stylesheet>.\n          s.removeAttribute('type');\n        }\n      }\n    }\n\n    /**\n     * Fires load/error events for imports in the right order .\n     */\n    fireEvents() {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (document.querySelectorAll(importSelector));\n      // Inverse order to have events firing bottom-up.\n      for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n        this.fireEventIfNeeded(n);\n      }\n    }\n\n    /**\n     * Fires load/error event for the import if this wasn't done already.\n     * @param {!HTMLLinkElement} link\n     */\n    fireEventIfNeeded(link) {\n      // Don't fire twice same event.\n      if (!link['__loaded']) {\n        link['__loaded'] = true;\n        // Update link's import readyState.\n        link.import && (link.import.readyState = 'complete');\n        const eventType = link.import ? 'load' : 'error';\n        link.dispatchEvent(new CustomEvent(eventType, {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        }));\n      }\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    handleMutations(mutations) {\n      for (let i = 0; i < mutations.length; i++) {\n        const m = mutations[i];\n        if (!m.addedNodes) {\n          continue;\n        }\n        for (let ii = 0; ii < m.addedNodes.length; ii++) {\n          const link = m.addedNodes[ii];\n          if (!link || link.nodeType !== Node.ELEMENT_NODE) {\n            continue;\n          }\n          // NOTE: added scripts are not updating currentScript in IE.\n          // TODO add test w/ script & stylesheet maybe\n          const imports = /** @type {!NodeList<!HTMLLinkElement>} */\n            (isImportLink(link) ? [link] : link.querySelectorAll(importSelector));\n          for (let iii = 0; iii < imports.length; iii++) {\n            const n = imports[iii];\n            const imp = this.documents[n.href];\n            // First time we see this import, load.\n            if (imp === undefined) {\n              this.loadImport(n);\n            }\n            // If nothing else is loading, we can safely associate the import\n            // and fire the load/error event.\n            else if (!this.inflight) {\n              n.import = imp;\n              this.fireEventIfNeeded(n);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  const isImportLink = node => {\n    return node.nodeType === Node.ELEMENT_NODE && node.localName === 'link' &&\n      ( /** @type {!HTMLLinkElement} */ (node).rel === 'import');\n  };\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)} element\n   * @param {function()=} callback\n   */\n  const whenElementLoaded = (element, callback) => {\n    if (element['__loaded']) {\n      callback && callback();\n    } else if (element.localName === 'script' && !element.src) {\n      // Inline scripts don't trigger load/error events, consider them already loaded.\n      element['__loaded'] = true;\n      callback && callback();\n    } else {\n      const onLoadingDone = event => {\n        element.removeEventListener(event.type, onLoadingDone);\n        element['__loaded'] = true;\n        callback && callback();\n      };\n      element.addEventListener('load', onLoadingDone);\n      // NOTE: We listen only for load events in IE/Edge, because in IE/Edge\n      // <style> with @import will fire error events for each failing @import,\n      // and finally will trigger the load event when all @import are\n      // finished (even if all fail).\n      if (!isIE || element.localName !== 'style') {\n        element.addEventListener('error', onLoadingDone);\n      }\n    }\n  }\n\n  /**\n   * Calls the callback when all imports in the document at call time\n   * (or at least document ready) have loaded. Callback is called synchronously\n   * if imports are already done loading.\n   * @param {function()=} callback\n   */\n  const whenReady = callback => {\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    whenDocumentReady(() => whenImportsReady(() => callback && callback()));\n  }\n\n  /**\n   * Invokes the callback when document is in ready state. Callback is called\n   *  synchronously if document is already done loading.\n   * @param {!function()} callback\n   */\n  const whenDocumentReady = callback => {\n    if (document.readyState !== 'loading') {\n      callback();\n    } else {\n      const stateChanged = () => {\n        if (document.readyState !== 'loading') {\n          document.removeEventListener('readystatechange', stateChanged);\n          callback();\n        }\n      }\n      document.addEventListener('readystatechange', stateChanged);\n    }\n  }\n\n  /**\n   * Invokes the callback after all imports are loaded. Callback is called\n   * synchronously if imports are already done loading.\n   * @param {!function()} callback\n   */\n  const whenImportsReady = callback => {\n    let imports = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(rootImportSelector));\n    let pending = imports.length;\n    if (!pending) {\n      callback();\n      return;\n    }\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      whenElementLoaded(imp, () => {\n        if (--pending === 0) {\n          callback();\n        }\n      });\n    }\n  }\n\n  /**\n   * Returns the link that imported the element.\n   * @param {!Node} element\n   * @return {HTMLLinkElement|Document|undefined}\n   */\n  const importForElement = element => {\n    if (useNative) {\n      return element.ownerDocument;\n    }\n    let owner = element['__ownerImport'];\n    if (!owner) {\n      owner = element;\n      // Walk up the parent tree until we find an import.\n      while ((owner = owner.parentNode || owner.host) && !isImportLink(owner)) {}\n      element['__ownerImport'] = owner;\n    }\n    return owner;\n  }\n\n  if (useNative) {\n    // Check for imports that might already be done loading by the time this\n    // script is actually executed. Native imports are blocking, so the ones\n    // available in the document by this time should already have failed\n    // or have .import defined.\n    const imps = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(importSelector));\n    for (let i = 0, l = imps.length, imp; i < l && (imp = imps[i]); i++) {\n      if (!imp.import || imp.import.readyState !== 'loading') {\n        imp['__loaded'] = true;\n      }\n    }\n    // Listen for load/error events to capture dynamically added scripts.\n    /**\n     * @type {!function(!Event)}\n     */\n    const onLoadingDone = event => {\n      const elem = /** @type {!Element} */ (event.target);\n      if (isImportLink(elem)) {\n        elem['__loaded'] = true;\n      }\n    };\n    document.addEventListener('load', onLoadingDone, true /* useCapture */ );\n    document.addEventListener('error', onLoadingDone, true /* useCapture */ );\n  } else {\n    new Importer();\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n  whenReady(() => document.dispatchEvent(new CustomEvent('HTMLImportsLoaded', {\n    cancelable: true,\n    bubbles: true,\n    detail: undefined\n  })));\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n  scope.importForElement = importForElement;\n\n})(window.HTMLImports = (window.HTMLImports || {}));\n"]}