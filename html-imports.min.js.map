{"version":3,"sources":["/src/html-imports.js"],"names":["scope","constructor","Importer","documents","imports","document","querySelectorAll","IMPORT_SELECTOR","i","l","length","whenElementLoaded","observe","MutationObserver","_onMutation","bind","head","childList","useNative","_loader","Loader","_onLoaded","_onLoadedAll","whenDocumentReady","_loadSubtree","onLoad","onComplete","cache","onload","oncomplete","inflight","pending","isImportLink","node","nodeType","Node","ELEMENT_NODE","MATCHES","call","element","then","Promise","resolve","isElementLoaded","addEventListener","isLoaded","import","readyState","isIE","localName","textContent","indexOf","sheet","csr","cssRules","type","CSSRule","IMPORT_RULE","styleSheet","whenReady","callback","whenImportsReady","stateChanged","removeEventListener","promises","imp","push","all","createElement","currentScript","Object","defineProperty","get","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","Path","fixUrls","base","href","setAttribute","replaceAttrUrl","getAttribute","src","resolveUrlsInStyle","fixUrlAttributes","attrs","a","at","attributes","v","value","search","resolveUrlsInCssText","fixUrlsInTemplates","t$","fixUrlsInTemplate","template","content","n$","n","style","linkUrl","cssText","r","replaceUrls","text","regexp","replace","m","pre","url","post","urlPath","_resolveUrl","test","undefined","__workingURL","u","URL","pathname","e","doc","__tempDoc","implementation","createHTMLDocument","__base","appendChild","__anchor","Xhr","async","load","request","XMLHttpRequest","open","redirectedUrl","locationHeader","getResponseHeader","substr","location","origin","console","error","message","status","response","responseText","send","addNodes","nodes","require","checkDone","addNode","elt","dedupe","fetch","tail","match","pieces","split","body","header","atob","decodeURIComponent","receive","resource","err","$p","p","Element","prototype","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","_makeDocument","display","innerHTML","baseEl","querySelector","parentNode","removeChild","s$","s","importsSelectors","scriptType","_flatten","_waitForStyles","_runScripts","_fireEvents","isEdge","_cloneAndMoveStyles","_observe","promise","clone","loadedPromise","j","ll","attr","name","replaceChild","stylesInImportsSelector","importLink","stylesSelector","insertBefore","eventType","dispatchEvent","CustomEvent","bubbles","cancelable","detail","subtree","mutations","addedNodes","navigator","userAgent","window","HTMLImports"],"mappings":"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","file":"html-imports.min.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(function(scope) {\n\n  /********************* base setup *********************/\n  const IMPORT_SELECTOR = 'link[rel=import]';\n  const useNative = Boolean('import' in document.createElement('link'));\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get: function() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat. This is not needed by\n          // html-imports polyfill but helps generally polyfill `currentScript`.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n\n    fixUrls: function(element, base) {\n      if (element.href) {\n        element.setAttribute('href',\n          Path.replaceAttrUrl(element.getAttribute('href'), base));\n      }\n      if (element.src) {\n        element.setAttribute('src',\n          Path.replaceAttrUrl(element.getAttribute('src'), base));\n      }\n      if (element.localName === 'style') {\n        Path.resolveUrlsInStyle(element, base);\n      } else if (element.localName === 'script' && element.textContent) {\n        element.textContent += `\\n//# sourceURL=${base}`;\n      }\n    },\n\n    fixUrlAttributes: function(element, base) {\n      const attrs = ['action', 'src', 'href', 'url', 'style'];\n      for (let i = 0, a; i < attrs.length && (a = attrs[i]); i++) {\n        const at = element.attributes[a];\n        const v = at && at.value;\n        if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n          at.value = (a === 'style') ?\n            Path.resolveUrlsInCssText(v, base) :\n            Path.replaceAttrUrl(v, base);\n        }\n      }\n    },\n\n    fixUrlsInTemplates: function(element, base) {\n      const t$ = element.querySelectorAll('template');\n      for (let i = 0; i < t$.length; i++) {\n        Path.fixUrlsInTemplate(t$[i], base);\n      }\n    },\n\n    fixUrlsInTemplate: function(template, base) {\n      const content = template.content;\n      if (!content) { // Template not supported.\n        return;\n      }\n      const n$ = content.querySelectorAll(\n        'style, form[action], [src], [href], [url], [style]');\n      for (let i = 0; i < n$.length; i++) {\n        const n = n$[i];\n        if (n.localName == 'style') {\n          Path.resolveUrlsInStyle(n, base);\n        } else {\n          Path.fixUrlAttributes(n, base);\n        }\n      }\n      Path.fixUrlsInTemplates(content, base);\n    },\n\n    resolveUrlsInStyle: function(style, linkUrl) {\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText: function(cssText, linkUrl) {\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls: function(text, linkUrl, regexp) {\n      return text.replace(regexp, function(m, pre, url, post) {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path._resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl: function(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return Path._resolveUrl(text, linkUrl);\n      }\n    },\n\n    _resolveUrl: function(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @param {!function(boolean, ?, string=)} callback\n     * @return {XMLHttpRequest}\n     */\n    load: function(url, callback) {\n      const request = new XMLHttpRequest();\n      request.open('GET', url, Xhr.async);\n      request.addEventListener('readystatechange', (e) => {\n        if (request.readyState === 4) {\n          // Servers redirecting an import can add a Location header to help us\n          // polyfill correctly.\n          let redirectedUrl = undefined;\n          try {\n            const locationHeader = request.getResponseHeader('Location');\n            if (locationHeader) {\n              // Relative or full path.\n              redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\n                location.origin + locationHeader : locationHeader;\n            }\n          } catch (e) {\n            console.error(e.message);\n          }\n          const isOk = ((request.status >= 200 && request.status < 300) ||\n            request.status === 304 || request.status === 0);\n          const resource = (request.response || request.responseText);\n          callback(!isOk, resource, redirectedUrl);\n        }\n      });\n      request.send();\n      return request;\n    }\n  };\n\n  /********************* loader *********************/\n  // This loader supports a dynamic list of urls\n  // and an oncomplete callback that is called when the loader is done.\n  // NOTE: The polyfill currently does *not* need this dynamism or the\n  // onComplete concept. Because of this, the loader could be simplified\n  // quite a bit.\n  class Loader {\n    constructor(onLoad, onComplete) {\n      this.cache = {};\n      this.onload = onLoad;\n      this.oncomplete = onComplete;\n      this.inflight = 0;\n      this.pending = {};\n    }\n\n    /**\n     * @param {!NodeList<!Element>} nodes\n     */\n    addNodes(nodes) {\n      // Avoid calling checkDone if no nodes are added.\n      if (!nodes.length) {\n        return;\n      }\n      // number of transactions to complete\n      this.inflight += nodes.length;\n      // commence transactions\n      for (let i = 0, l = nodes.length; i < l; i++) {\n        this.require(nodes[i]);\n      }\n      // anything to do?\n      this.checkDone();\n    }\n\n    /**\n     * @param {!Element} node\n     */\n    addNode(node) {\n      // number of transactions to complete\n      this.inflight++;\n      // commence transactions\n      this.require(node);\n      // anything to do?\n      this.checkDone();\n    }\n\n    /**\n     * @param {!Element} elt\n     */\n    require(elt) {\n      const url = elt.href || elt.src;\n      // deduplication\n      if (!this.dedupe(url, elt)) {\n        // fetch this resource\n        this.fetch(url, elt);\n      }\n    }\n\n    /**\n     * @param {string} url\n     * @param {!Element} elt\n     * @return {boolean}\n     */\n    dedupe(url, elt) {\n      if (this.pending[url]) {\n        // add to list of nodes waiting for inUrl\n        this.pending[url].push(elt);\n        // don't need fetch\n        return true;\n      }\n      let resource;\n      if (this.cache[url]) {\n        this.onload(url, elt, this.cache[url]);\n        // finished this transaction\n        this.tail();\n        // don't need fetch\n        return true;\n      }\n      // first node waiting for inUrl\n      this.pending[url] = [elt];\n      // need fetch (not a dupe)\n      return false;\n    }\n\n    /**\n     * @param {string} url\n     * @param {!Element} elt\n     */\n    fetch(url, elt) {\n      if (!url) {\n        this.receive(url, elt, true, 'error: href must be specified');\n      } else if (url.match(/^data:/)) {\n        // Handle Data URI Scheme\n        const pieces = url.split(',');\n        const header = pieces[0];\n        let body = pieces[1];\n        if (header.indexOf(';base64') > -1) {\n          body = atob(body);\n        } else {\n          body = decodeURIComponent(body);\n        }\n        this.receive(url, elt, false, body);\n      } else {\n        Xhr.load(url, (error, resource, redirectedUrl) =>\n          this.receive(url, elt, error, resource, redirectedUrl));\n      }\n    }\n\n    /**\n     * @param {!string} url\n     * @param {!Element} elt\n     * @param {boolean} err\n     * @param {string=} resource\n     * @param {string=} redirectedUrl\n     */\n    receive(url, elt, err, resource, redirectedUrl) {\n      this.cache[url] = resource;\n      const $p = this.pending[url];\n      for (let i = 0, l = $p.length, p;\n        (i < l) && (p = $p[i]); i++) {\n        // If url was redirected, use the redirected location so paths are\n        // calculated relative to that.\n        this.onload(url, p, resource, err, redirectedUrl);\n        this.tail();\n      }\n      this.pending[url] = null;\n    }\n\n    tail() {\n      --this.inflight;\n      this.checkDone();\n    }\n\n    checkDone() {\n      if (!this.inflight) {\n        this.oncomplete();\n      }\n    }\n  }\n\n  /********************* importer *********************/\n\n  const stylesSelector = [\n    'style:not([type])',\n    'link[rel=stylesheet][href]:not([type])'\n  ].join(',');\n\n  const stylesInImportsSelector = [\n    `${IMPORT_SELECTOR} style:not([type])`,\n    `${IMPORT_SELECTOR} link[rel=stylesheet][href]:not([type])`\n  ].join(',');\n\n  const importsSelectors = [\n    IMPORT_SELECTOR,\n    stylesSelector,\n    'script:not([type])',\n    'script[type=\"application/javascript\"]',\n    'script[type=\"text/javascript\"]'\n  ].join(',');\n\n  /**\n   * @type {Function}\n   */\n  const MATCHES = Element.prototype.matches ||\n    Element.prototype.matchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.oMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\n  const scriptType = 'import-script';\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    constructor() {\n      this.documents = {};\n      // Make sure to catch any imports that are in the process of loading\n      // when this script is run.\n      const imports = document.querySelectorAll(IMPORT_SELECTOR);\n      for (let i = 0, l = imports.length; i < l; i++) {\n        whenElementLoaded(imports[i]);\n      }\n      // Observe only document head\n      new MutationObserver(this._onMutation.bind(this)).observe(document.head, {\n        childList: true\n      });\n\n      if (!useNative) {\n        this._loader = new Loader(\n          this._onLoaded.bind(this), this._onLoadedAll.bind(this)\n        );\n        whenDocumentReady(() => this._loadSubtree(document));\n      }\n    }\n\n    /**\n     * @param {!(HTMLElement|Document)} node\n     */\n    _loadSubtree(node) {\n      const nodes = node.querySelectorAll(IMPORT_SELECTOR);\n      // Add these nodes to loader's queue.\n      this._loader.addNodes(nodes);\n    }\n\n    _onLoaded(url, elt, resource, err, redirectedUrl) {\n      // We've already seen a document at this url, return.\n      if (this.documents[url] !== undefined) {\n        return;\n      }\n      if (err) {\n        this.documents[url] = null;\n      } else {\n        // Generate a document from data.\n        const doc = this._makeDocument(resource, redirectedUrl || url);\n        // note, we cannot use MO to detect parsed nodes because\n        // SD polyfill does not report these as mutations.\n        this._loadSubtree(doc);\n        this.documents[url] = doc;\n      }\n    }\n\n    /**\n     * Creates a new document containing resource and normalizes urls accordingly.\n     * @param {string=} resource\n     * @param {string=} url\n     * @return {!HTMLElement}\n     */\n    _makeDocument(resource, url) {\n      const content = /** @type {HTMLElement} */\n        (document.createElement('import-content'));\n      content.style.display = 'none';\n      if (url) {\n        content.setAttribute('import-href', url);\n      }\n      if (resource) {\n        content.innerHTML = resource;\n      }\n\n      // Support <base> in imported docs. Resolve url and remove it from the parent.\n      const baseEl = /** @type {HTMLBaseElement} */ (content.querySelector('base'));\n      if (baseEl) {\n        url = Path.replaceAttrUrl(baseEl.getAttribute('href'), url);\n        baseEl.parentNode.removeChild(baseEl);\n      }\n      // This is specific to users of <dom-module> (Polymer).\n      // TODO(valdrin) remove this when importForElement is exposed.\n      const s$ = content.querySelectorAll('dom-module');\n      for (let i = 0, s; i < s$.length && (s = s$[i]); i++) {\n        s.setAttribute('assetpath',\n          Path.replaceAttrUrl(s.getAttribute('assetpath') || '', url));\n      }\n\n      const n$ = content.querySelectorAll(importsSelectors);\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        // Ensure we add load/error listeners before modifying urls or appending\n        // these to the main document.\n        whenElementLoaded(n);\n        Path.fixUrls(n, url);\n        if (n.localName === 'script') {\n          n['__originalType'] = n.getAttribute('type');\n          n.setAttribute('type', scriptType);\n        }\n      }\n      Path.fixUrlsInTemplates(content, url);\n      return content;\n    }\n\n    _onLoadedAll() {\n      this._flatten();\n      // Scripts and styles are executed in sequentially so that styles are\n      // applied before scripts run.\n      this._waitForStyles()\n        .then(() => this._runScripts())\n        .then(() => this._fireEvents());\n    }\n\n    /**\n     * @param {(HTMLElement|Document)=} element\n     */\n    _flatten(element) {\n      element = element || document;\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (element.querySelectorAll(IMPORT_SELECTOR));\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        n.import = this.documents[n.href];\n        if (n.import && !n.import['__firstImport']) {\n          n.import['__firstImport'] = n;\n          this._flatten(n.import);\n          // If in the main document, observe for any imports added later.\n          if (element === document) {\n            // In IE/Edge, when imports have link stylesheets/styles, the cascading order\n            // isn't respected https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n            if (isIE || isEdge) {\n              this._cloneAndMoveStyles(n);\n            }\n            this._observe(n.import);\n          }\n          n.appendChild(n.import);\n        }\n      }\n    }\n\n    /**\n     * Replaces all the imported scripts with a clone in order to execute them.\n     * Updates the `currentScript`.\n     * @return {Promise} Resolved when scripts are loaded.\n     */\n    _runScripts() {\n      const s$ = document.querySelectorAll(`script[type=${scriptType}]`);\n      let promise = Promise.resolve();\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        promise = promise.then(() => {\n          const clone = document.createElement('script');\n\n          // Setting `src` will trigger load/error events, so listen for those\n          // before setting the attributes. For inline scripts, consider them\n          // already loaded.\n          let loadedPromise;\n          if (s.src) {\n            loadedPromise = whenElementLoaded(clone);\n          } else {\n            clone['__loaded'] = true;\n            loadedPromise = Promise.resolve(clone);\n          }\n\n          // Copy attributes and textContent.\n          for (let j = 0, ll = s.attributes.length; j < ll; j++) {\n            const attr = s.attributes[j];\n            if (attr.name === 'type') {\n              clone.setAttribute(attr.name, s['__originalType'] || 'text/javascript');\n            } else {\n              clone.setAttribute(attr.name, attr.value);\n            }\n          }\n          clone.textContent = s.textContent;\n\n          // Update currentScript and replace original with clone script.\n          currentScript = clone;\n          s.parentNode.replaceChild(clone, s);\n          // Listen for load/error events before adding the clone to the document.\n          // After is loaded, reset currentScript.\n          return loadedPromise.then(() => currentScript = null);\n        });\n      }\n      return promise;\n    }\n\n    /**\n     * Waits for all the imported stylesheets/styles to be loaded.\n     * @return {Promise}\n     */\n    _waitForStyles() {\n      const s$ = document.querySelectorAll(stylesInImportsSelector);\n      const promises = [];\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        promises.push(whenElementLoaded(s));\n      }\n      return Promise.all(promises);\n    }\n\n    /**\n     * Clones styles and stylesheets links contained in imports and moves them\n     * as siblings of the root import link.\n     * @param {!HTMLLinkElement} importLink\n     */\n    _cloneAndMoveStyles(importLink) {\n      const n$ = importLink.import.querySelectorAll(stylesSelector);\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        // Cannot use `n.cloneNode(true)` as it won't work for link stylesheets\n        // with a parentNode https://gist.github.com/valdrinkoshi/4a92f97169a6fc41a1852f23211b8c4e\n        const clone = document.createElement(n.localName);\n        // Ensure we listen for load/error events on this element.\n        whenElementLoaded(clone);\n        // Copy attributes and textContent.\n        for (let j = 0, ll = n.attributes.length; j < ll; j++) {\n          clone.setAttribute(n.attributes[j].name, n.attributes[j].value);\n        }\n        clone.textContent = n.textContent;\n\n        // Remove old, add new.\n        n.parentNode.removeChild(n);\n        importLink.parentNode.insertBefore(clone, importLink);\n      }\n    }\n\n    /**\n     * Fires load/error events for loaded imports.\n     */\n    _fireEvents() {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (document.querySelectorAll(IMPORT_SELECTOR));\n      // Inverse order to have events firing bottom-up.\n      for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n        // Don't fire twice same event.\n        if (!n['__fired']) {\n          n['__fired'] = true;\n          const eventType = n.import ? 'load' : 'error';\n          // Ensure the load promise is setup before firing the event.\n          whenElementLoaded(n);\n          n.dispatchEvent(new CustomEvent(eventType, {\n            bubbles: false,\n            cancelable: false,\n            detail: undefined\n          }));\n        }\n      }\n    }\n\n    _observe(element) {\n      if (element['__importObserver']) {\n        return;\n      }\n      element['__importObserver'] = new MutationObserver(this._onMutation.bind(this));\n      element['__importObserver'].observe(element, {\n        childList: true,\n        subtree: true\n      });\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    _onMutation(mutations) {\n      for (let j = 0, m; j < mutations.length && (m = mutations[j]); j++) {\n        for (let i = 0, l = m.addedNodes ? m.addedNodes.length : 0; i < l; i++) {\n          const n = /** @type {Element} */ (m.addedNodes[i]);\n          if (n && isImportLink(n)) {\n            whenElementLoaded(n);\n            if (!useNative) {\n              this._loader.addNode(n);\n            }\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  function isImportLink(node) {\n    return node.nodeType === Node.ELEMENT_NODE && MATCHES.call(node, IMPORT_SELECTOR);\n  }\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!Element} element\n   * @return {Promise}\n   */\n  function whenElementLoaded(element) {\n    element['__loadPromise'] = element['__loadPromise'] || new Promise((resolve) => {\n      if (isElementLoaded(element)) {\n        resolve();\n      } else {\n        element.addEventListener('load', resolve);\n        element.addEventListener('error', resolve);\n      }\n    }).then(() => {\n      element['__loaded'] = true;\n      return element;\n    });\n    return element['__loadPromise'];\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {boolean}\n   */\n  function isElementLoaded(element) {\n    if (element['__loaded']) {\n      return true;\n    }\n    let isLoaded = false;\n    if (useNative && isImportLink(element) && element.import &&\n      element.import.readyState !== 'loading') {\n      isLoaded = true;\n    } else if (isIE && element.localName === 'style') {\n      // NOTE: IE does not fire \"load\" event for styles that have already\n      // loaded. This is in violation of the spec, so we try our hardest to\n      // work around it.\n      // If there's not @import in the textContent, assume it has loaded\n      if (element.textContent.indexOf('@import') == -1) {\n        isLoaded = true;\n        // if we have a sheet, we have been parsed\n      } else if (element.sheet) {\n        isLoaded = true;\n        const csr = element.sheet.cssRules;\n        // search the rules for @import's\n        for (let i = 0, l = csr ? csr.length : 0; i < l && isLoaded; i++) {\n          if (csr[i].type === CSSRule.IMPORT_RULE) {\n            // if every @import has resolved, fake the load\n            isLoaded = Boolean(csr[i].styleSheet);\n          }\n        }\n      }\n    }\n    element['__loaded'] = isLoaded;\n    return isLoaded;\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n\n  const isIE = /Trident/.test(navigator.userAgent);\n  const isEdge = !isIE && /Edge\\/\\d./i.test(navigator.userAgent);\n\n  /**\n   * Calls the callback when all imports in the document at call time\n   * (or at least document ready) have loaded. Callback is called synchronously\n   * if imports are already done loading.\n   * @param {function()=} callback\n   */\n  function whenReady(callback) {\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    whenDocumentReady(() => whenImportsReady(() => callback && callback()));\n  }\n\n  /**\n   * Invokes the callback when document is in ready state. Callback is called\n   *  synchronously if document is already done loading.\n   * @param {!function()} callback\n   */\n  function whenDocumentReady(callback) {\n    if (document.readyState !== 'loading') {\n      callback();\n    } else {\n      document.addEventListener('readystatechange', function stateChanged() {\n        if (document.readyState !== 'loading') {\n          document.removeEventListener('readystatechange', stateChanged);\n          callback();\n        }\n      });\n    }\n  }\n\n  /**\n   * Invokes the callback after all imports are loaded. Callback is called\n   * synchronously if imports are already done loading.\n   * @param {!function()} callback\n   */\n  function whenImportsReady(callback) {\n    let imports = document.querySelectorAll(IMPORT_SELECTOR);\n    const promises = [];\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      // Skip nested imports.\n      if (MATCHES.call(imp, `${IMPORT_SELECTOR} ${IMPORT_SELECTOR}`)) {\n        continue;\n      }\n      if (!isElementLoaded(imp)) {\n        promises.push(whenElementLoaded(imp));\n      }\n    }\n    if (promises.length) {\n      Promise.all(promises).then(() => callback());\n    } else {\n      callback();\n    }\n  }\n\n  new Importer();\n\n  // Fire the 'HTMLImportsLoaded' event when imports in document at load time\n  // have loaded. This event is required to simulate the script blocking\n  // behavior of native imports. A main document script that needs to be sure\n  // imports have loaded should wait for this event.\n  whenReady(() =>\n    document.dispatchEvent(new CustomEvent('HTMLImportsLoaded', {\n      cancelable: true,\n      bubbles: true,\n      detail: undefined\n    })));\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n\n})(window.HTMLImports = (window.HTMLImports || {}));\n"]}