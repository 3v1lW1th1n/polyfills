{"version":3,"sources":["/src/html-imports.js"],"names":["scope","constructor","Importer","doc","documents","_doc","imports","querySelectorAll","IMPORT_SELECTOR","i","l","length","whenElementLoaded","observe","MutationObserver","_onMutation","bind","head","childList","useNative","_loader","Loader","_onLoaded","_onLoadedAll","whenDocumentReady","then","_loadSubtree","onLoad","onComplete","cache","onload","oncomplete","inflight","pending","isImportLink","node","nodeType","Node","ELEMENT_NODE","MATCHES","call","runScripts","s$","promise","Promise","resolve","s","c","createElement","textContent","src","setAttribute","getAttribute","whenLoadedPromise","catch","currentScript","parentNode","replaceChild","waitForStyles","stylesInImportsSelector","promises","push","all","element","__loadPromise","reject","isElementLoaded","addEventListener","isLoaded","import","readyState","isIE","localName","indexOf","sheet","csr","cssRules","type","CSSRule","IMPORT_RULE","styleSheet","whenReady","callback","isImporting","document","watchImportsLoad","imp","Object","defineProperty","get","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","Path","fixUrls","base","href","replaceAttrUrl","resolveUrlsInStyle","fixUrlAttributes","attrs","a","at","attributes","v","value","search","resolveUrlsInCssText","fixUrlsInTemplates","t$","fixUrlsInTemplate","template","content","n$","n","style","linkUrl","cssText","r","replaceUrls","text","regexp","replace","m","pre","url","post","urlPath","_resolveUrl","test","undefined","__workingURL","u","URL","pathname","e","__tempDoc","implementation","createHTMLDocument","__base","appendChild","__anchor","Xhr","async","load","request","XMLHttpRequest","open","redirectedUrl","locationHeader","getResponseHeader","substr","location","origin","console","error","message","status","response","responseText","send","addNodes","nodes","require","checkDone","addNode","elt","dedupe","fetch","tail","match","pieces","split","body","header","atob","decodeURIComponent","receive","resource","err","$p","p","_makeDocument","display","innerHTML","baseEl","querySelector","removeChild","importsSelectors","scriptType","_flatten","__fired","eventType","dispatchEvent","CustomEvent","bubbles","cancelable","detail","__firstImport","isEdge","importLink","stylesSelector","clone","j","ll","name","insertBefore","_observe","__importObserver","subtree","mutations","addedNodes","Element","prototype","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","navigator","userAgent","window","HTMLImports"],"mappings":"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","file":"html-imports.min.js","sourcesContent":["/**\r\n * @license\r\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\n(function(scope) {\r\n\r\n  /********************* base setup *********************/\r\n  const IMPORT_SELECTOR = 'link[rel=import]';\r\n  const useNative = Boolean('import' in document.createElement('link'));\r\n  const flags = {\r\n    bust: false,\r\n    log: false\r\n  };\r\n\r\n  // Polyfill `currentScript` for browsers without it.\r\n  let currentScript = null;\r\n  if ('currentScript' in document === false) {\r\n    Object.defineProperty(document, 'currentScript', {\r\n      get: function() {\r\n        return currentScript ||\r\n          // NOTE: only works when called in synchronously executing code.\r\n          // readyState should check if `loading` but IE10 is\r\n          // interactive when scripts run so we cheat. This is not needed by\r\n          // html-imports polyfill but helps generally polyfill `currentScript`.\r\n          (document.readyState !== 'complete' ?\r\n            document.scripts[document.scripts.length - 1] : null);\r\n      },\r\n      configurable: true\r\n    });\r\n  }\r\n\r\n  /********************* path fixup *********************/\r\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\r\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\r\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\r\n\r\n\r\n  // path fixup: style elements in imports must be made relative to the main\r\n  // document. We fixup url's in url() and @import.\r\n  const Path = {\r\n\r\n    fixUrls: function(element, base) {\r\n      if (element.href) {\r\n        element.setAttribute('href',\r\n          Path.replaceAttrUrl(element.getAttribute('href'), base));\r\n      }\r\n      if (element.src) {\r\n        element.setAttribute('src',\r\n          Path.replaceAttrUrl(element.getAttribute('src'), base));\r\n      }\r\n      if (element.localName === 'style') {\r\n        Path.resolveUrlsInStyle(element, base);\r\n      } else if (element.localName === 'script' && element.textContent) {\r\n        element.textContent += `\\n//# sourceURL=${base}`;\r\n      }\r\n    },\r\n\r\n    fixUrlAttributes: function(element, base) {\r\n      const attrs = ['action', 'src', 'href', 'url', 'style'];\r\n      for (let i = 0, a; i < attrs.length && (a = attrs[i]); i++) {\r\n        const at = element.attributes[a];\r\n        const v = at && at.value;\r\n        if (v && (v.search(/({{|\\[\\[)/) < 0)) {\r\n          at.value = (a === 'style') ?\r\n            Path.resolveUrlsInCssText(v, base) :\r\n            Path.replaceAttrUrl(v, base);\r\n        }\r\n      }\r\n    },\r\n\r\n    fixUrlsInTemplates: function(element, base) {\r\n      const t$ = element.querySelectorAll('template');\r\n      for (let i = 0; i < t$.length; i++) {\r\n        Path.fixUrlsInTemplate(t$[i], base);\r\n      }\r\n    },\r\n\r\n    fixUrlsInTemplate: function(template, base) {\r\n      const content = template.content;\r\n      if (!content) { // Template not supported.\r\n        return;\r\n      }\r\n      const n$ = content.querySelectorAll(\r\n        'style, form[action], [src], [href], [url], [style]');\r\n      for (let i = 0; i < n$.length; i++) {\r\n        const n = n$[i];\r\n        if (n.localName == 'style') {\r\n          Path.resolveUrlsInStyle(n, base);\r\n        } else {\r\n          Path.fixUrlAttributes(n, base);\r\n        }\r\n      }\r\n      Path.fixUrlsInTemplates(content, base);\r\n    },\r\n\r\n    resolveUrlsInStyle: function(style, linkUrl) {\r\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\r\n    },\r\n\r\n    resolveUrlsInCssText: function(cssText, linkUrl) {\r\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\r\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\r\n      return r;\r\n    },\r\n\r\n    replaceUrls: function(text, linkUrl, regexp) {\r\n      return text.replace(regexp, function(m, pre, url, post) {\r\n        let urlPath = url.replace(/[\"']/g, '');\r\n        if (linkUrl) {\r\n          urlPath = Path._resolveUrl(urlPath, linkUrl);\r\n        }\r\n        return pre + '\\'' + urlPath + '\\'' + post;\r\n      });\r\n    },\r\n\r\n    replaceAttrUrl: function(text, linkUrl) {\r\n      if (text && ABS_URL_TEST.test(text)) {\r\n        return text;\r\n      } else {\r\n        return Path._resolveUrl(text, linkUrl);\r\n      }\r\n    },\r\n\r\n    _resolveUrl: function(url, base) {\r\n      // Lazy feature detection.\r\n      if (Path.__workingURL === undefined) {\r\n        Path.__workingURL = false;\r\n        try {\r\n          const u = new URL('b', 'http://a');\r\n          u.pathname = 'c%20d';\r\n          Path.__workingURL = (u.href === 'http://a/c%20d');\r\n        } catch (e) {}\r\n      }\r\n\r\n      if (Path.__workingURL) {\r\n        return (new URL(url, base)).href;\r\n      }\r\n\r\n      // Fallback to creating an anchor into a disconnected document.\r\n      let doc = Path.__tempDoc;\r\n      if (!doc) {\r\n        doc = document.implementation.createHTMLDocument('temp');\r\n        Path.__tempDoc = doc;\r\n        doc.__base = doc.createElement('base');\r\n        doc.head.appendChild(doc.__base);\r\n        doc.__anchor = doc.createElement('a');\r\n      }\r\n      doc.__base.href = base;\r\n      doc.__anchor.href = url;\r\n      return doc.__anchor.href || url;\r\n    }\r\n  };\r\n\r\n  /********************* Xhr processor *********************/\r\n  const Xhr = {\r\n\r\n    async: true,\r\n\r\n    /**\r\n     * @param {!string} url\r\n     * @param {!function(boolean, ?, string=)} callback\r\n     * @return {XMLHttpRequest}\r\n     */\r\n    load: function(url, callback) {\r\n      const request = new XMLHttpRequest();\r\n      if (flags.bust) {\r\n        url += '?' + Math.random();\r\n      }\r\n      request.open('GET', url, Xhr.async);\r\n      request.addEventListener('readystatechange', (e) => {\r\n        if (request.readyState === 4) {\r\n          // Servers redirecting an import can add a Location header to help us\r\n          // polyfill correctly.\r\n          let redirectedUrl = undefined;\r\n          try {\r\n            const locationHeader = request.getResponseHeader('Location');\r\n            if (locationHeader) {\r\n              // Relative or full path.\r\n              redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\r\n                location.origin + locationHeader : locationHeader;\r\n            }\r\n          } catch (e) {\r\n            console.error(e.message);\r\n          }\r\n          const isOk = ((request.status >= 200 && request.status < 300) ||\r\n            request.status === 304 || request.status === 0);\r\n          const resource = (request.response || request.responseText);\r\n          callback(!isOk, resource, redirectedUrl);\r\n        }\r\n      });\r\n      request.send();\r\n      return request;\r\n    }\r\n  };\r\n\r\n  /********************* loader *********************/\r\n  // This loader supports a dynamic list of urls\r\n  // and an oncomplete callback that is called when the loader is done.\r\n  // NOTE: The polyfill currently does *not* need this dynamism or the\r\n  // onComplete concept. Because of this, the loader could be simplified\r\n  // quite a bit.\r\n  class Loader {\r\n    constructor(onLoad, onComplete) {\r\n      this.cache = {};\r\n      this.onload = onLoad;\r\n      this.oncomplete = onComplete;\r\n      this.inflight = 0;\r\n      this.pending = {};\r\n    }\r\n\r\n    addNodes(nodes) {\r\n      // number of transactions to complete\r\n      this.inflight += nodes.length;\r\n      // commence transactions\r\n      for (let i = 0, l = nodes.length, n;\r\n        (i < l) && (n = nodes[i]); i++) {\r\n        this.require(n);\r\n      }\r\n      // anything to do?\r\n      this.checkDone();\r\n    }\r\n\r\n    addNode(node) {\r\n      // number of transactions to complete\r\n      this.inflight++;\r\n      // commence transactions\r\n      this.require(node);\r\n      // anything to do?\r\n      this.checkDone();\r\n    }\r\n\r\n    require(elt) {\r\n      const url = elt.src || elt.href;\r\n      // deduplication\r\n      if (!this.dedupe(url, elt)) {\r\n        // fetch this resource\r\n        this.fetch(url, elt);\r\n      }\r\n    }\r\n\r\n    dedupe(url, elt) {\r\n      if (this.pending[url]) {\r\n        // add to list of nodes waiting for inUrl\r\n        this.pending[url].push(elt);\r\n        // don't need fetch\r\n        return true;\r\n      }\r\n      let resource;\r\n      if (this.cache[url]) {\r\n        this.onload(url, elt, this.cache[url]);\r\n        // finished this transaction\r\n        this.tail();\r\n        // don't need fetch\r\n        return true;\r\n      }\r\n      // first node waiting for inUrl\r\n      this.pending[url] = [elt];\r\n      // need fetch (not a dupe)\r\n      return false;\r\n    }\r\n\r\n    fetch(url, elt) {\r\n      flags.log && console.log('fetch', url, elt);\r\n      if (!url) {\r\n        this.receive(url, elt, true, 'error: href must be specified');\r\n      } else if (url.match(/^data:/)) {\r\n        // Handle Data URI Scheme\r\n        const pieces = url.split(',');\r\n        const header = pieces[0];\r\n        let body = pieces[1];\r\n        if (header.indexOf(';base64') > -1) {\r\n          body = atob(body);\r\n        } else {\r\n          body = decodeURIComponent(body);\r\n        }\r\n        this.receive(url, elt, false, body);\r\n      } else {\r\n        Xhr.load(url, (error, resource, redirectedUrl) =>\r\n          this.receive(url, elt, error, resource, redirectedUrl));\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {!string} url\r\n     * @param {!Element} elt\r\n     * @param {boolean} err\r\n     * @param {string=} resource\r\n     * @param {string=} redirectedUrl\r\n     */\r\n    receive(url, elt, err, resource, redirectedUrl) {\r\n      this.cache[url] = resource;\r\n      const $p = this.pending[url];\r\n      for (let i = 0, l = $p.length, p;\r\n        (i < l) && (p = $p[i]); i++) {\r\n        // If url was redirected, use the redirected location so paths are\r\n        // calculated relative to that.\r\n        this.onload(url, p, resource, err, redirectedUrl);\r\n        this.tail();\r\n      }\r\n      this.pending[url] = null;\r\n    }\r\n\r\n    tail() {\r\n      --this.inflight;\r\n      this.checkDone();\r\n    }\r\n\r\n    checkDone() {\r\n      if (!this.inflight) {\r\n        this.oncomplete();\r\n      }\r\n    }\r\n  }\r\n\r\n  /********************* importer *********************/\r\n\r\n  const stylesSelector = [\r\n    'style:not([type])',\r\n    'link[rel=stylesheet][href]:not([type])'\r\n  ].join(',');\r\n\r\n  const stylesInImportsSelector = [\r\n    `${IMPORT_SELECTOR} style:not([type])`,\r\n    `${IMPORT_SELECTOR} link[rel=stylesheet][href]:not([type])`\r\n  ].join(',');\r\n\r\n  const importsSelectors = [\r\n    IMPORT_SELECTOR,\r\n    stylesSelector,\r\n    'script:not([type])',\r\n    'script[type=\"application/javascript\"]',\r\n    'script[type=\"text/javascript\"]'\r\n  ].join(',');\r\n\r\n  /**\r\n   * Importer will:\r\n   * - load any linked import documents (with deduping)\r\n   * - whenever an import is loaded, prompt the parser to try to parse\r\n   * - observe imported documents for new elements (these are handled via the\r\n   *   dynamic importer)\r\n   */\r\n  class Importer {\r\n    /**\r\n     * @param {!HTMLDocument} doc\r\n     */\r\n    constructor(doc) {\r\n      this.documents = {};\r\n      this._doc = doc;\r\n      // Make sure to catch any imports that are in the process of loading\r\n      // when this script is run.\r\n      const imports = doc.querySelectorAll(IMPORT_SELECTOR);\r\n      for (let i = 0, l = imports.length; i < l; i++) {\r\n        whenElementLoaded(imports[i]);\r\n      }\r\n      // Observe only document head\r\n      new MutationObserver(this._onMutation.bind(this)).observe(doc.head, {\r\n        childList: true\r\n      });\r\n\r\n      if (!useNative) {\r\n        this._loader = new Loader(\r\n          this._onLoaded.bind(this), this._onLoadedAll.bind(this)\r\n        );\r\n        whenDocumentReady(doc).then(() => this._loadSubtree(doc));\r\n      }\r\n    }\r\n\r\n    _loadSubtree(doc) {\r\n      const nodes = doc.querySelectorAll(IMPORT_SELECTOR);\r\n      // add these nodes to loader's queue\r\n      this._loader.addNodes(nodes);\r\n    }\r\n\r\n    _onLoaded(url, elt, resource, err, redirectedUrl) {\r\n      flags.log && console.log('loaded', url, elt);\r\n      // We've already seen a document at this url, return.\r\n      if (this.documents[url] !== undefined) {\r\n        return;\r\n      }\r\n      if (err) {\r\n        this.documents[url] = null;\r\n      } else {\r\n        // Generate an HTMLDocument from data.\r\n        const doc = this._makeDocument(resource, redirectedUrl || url);\r\n        // note, we cannot use MO to detect parsed nodes because\r\n        // SD polyfill does not report these as mutations.\r\n        this._loadSubtree(doc);\r\n        this.documents[url] = doc;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Creates a new document containing resource and normalizes urls accordingly.\r\n     * @param {string=} resource\r\n     * @param {string=} url\r\n     * @return {HTMLElement}\r\n     */\r\n    _makeDocument(resource, url) {\r\n      const content = /** @type {HTMLElement} */\r\n        (document.createElement('import-content'));\r\n      content.style.display = 'none';\r\n      if (url) {\r\n        content.setAttribute('import-href', url);\r\n      }\r\n      if (resource) {\r\n        content.innerHTML = resource;\r\n      }\r\n\r\n      // Support <base> in imported docs. Resolve url and remove it from the parent.\r\n      const baseEl = /** @type {HTMLBaseElement} */ (content.querySelector('base'));\r\n      if (baseEl) {\r\n        url = Path.replaceAttrUrl(baseEl.getAttribute('href'), url);\r\n        baseEl.parentNode.removeChild(baseEl);\r\n      }\r\n      // This is specific to users of <dom-module> (Polymer).\r\n      // TODO(valdrin) remove this when importForElement is exposed.\r\n      const s$ = content.querySelectorAll('dom-module');\r\n      for (let i = 0, s; i < s$.length && (s = s$[i]); i++) {\r\n        s.setAttribute('assetpath',\r\n          Path.replaceAttrUrl(s.getAttribute('assetpath') || '', url));\r\n      }\r\n\r\n      const n$ = content.querySelectorAll(importsSelectors);\r\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\r\n        // Ensure we add load/error listeners before modifying urls or appending\r\n        // these to the main document.\r\n        whenElementLoaded(n);\r\n        Path.fixUrls(n, url);\r\n        if (n.localName === 'script') {\r\n          // NOTE: we override the type here, might need to keep track of original\r\n          // type and apply it to clone when running the script.\r\n          n.setAttribute('type', scriptType);\r\n        }\r\n      }\r\n      Path.fixUrlsInTemplates(content, url);\r\n      return content;\r\n    }\r\n\r\n    _onLoadedAll() {\r\n      this._flatten(this._doc);\r\n      Promise.all([\r\n        runScripts(this._doc),\r\n        waitForStyles(this._doc)\r\n      ]).then(() => fireEvents(this._doc));\r\n    }\r\n\r\n    _flatten(element) {\r\n      const n$ = element.querySelectorAll(IMPORT_SELECTOR);\r\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\r\n        n.import = this.documents[n.href];\r\n        if (n.import && !n.import.__firstImport) {\r\n          n.import.__firstImport = n;\r\n          this._flatten(n.import);\r\n          // If in the main document, observe for any imports added later.\r\n          if (element === document) {\r\n            // In IE/Edge, when imports have link stylesheets/styles, the cascading order\r\n            // isn't respected https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\r\n            if (isIE || isEdge) {\r\n              cloneAndMoveStyles(n);\r\n            }\r\n            this._observe(n.import);\r\n          }\r\n          n.appendChild(n.import);\r\n        }\r\n      }\r\n    }\r\n\r\n    _observe(element) {\r\n      if (element.__importObserver) {\r\n        return;\r\n      }\r\n      element.__importObserver = new MutationObserver(this._onMutation.bind(this));\r\n      element.__importObserver.observe(element, {\r\n        childList: true,\r\n        subtree: true\r\n      });\r\n    }\r\n\r\n    /**\r\n     * @param {Array<MutationRecord>} mutations\r\n     */\r\n    _onMutation(mutations) {\r\n      const promises = [];\r\n      for (let j = 0, m; j < mutations.length && (m = mutations[j]); j++) {\r\n        for (let i = 0, l = m.addedNodes ? m.addedNodes.length : 0; i < l; i++) {\r\n          const n = /** @type {Element} */ (m.addedNodes[i]);\r\n          if (n && isImportLink(n)) {\r\n            promises.push(whenElementLoaded(n));\r\n            if (!useNative) {\r\n              this._loader.addNode(n);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (promises.length) {\r\n        // Ensure we update isImporting.\r\n        isImporting = true;\r\n        Promise.all(promises).then(() => isImporting = false);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * @type {Function}\r\n   */\r\n  const MATCHES = Element.prototype.matches ||\r\n    Element.prototype.matchesSelector ||\r\n    Element.prototype.mozMatchesSelector ||\r\n    Element.prototype.msMatchesSelector ||\r\n    Element.prototype.oMatchesSelector ||\r\n    Element.prototype.webkitMatchesSelector;\r\n\r\n  /**\r\n   * @param {!Node} node\r\n   * @return {boolean}\r\n   */\r\n  function isImportLink(node) {\r\n    return node.nodeType === Node.ELEMENT_NODE && MATCHES.call(node, IMPORT_SELECTOR);\r\n  }\r\n\r\n  /********************* vulcanize style inline processing  *********************/\r\n\r\n  const scriptType = 'import-script';\r\n\r\n  /**\r\n   * Replaces all the imported scripts with a clone in order to execute them.\r\n   * Updates the `currentScript`.\r\n   * @param {!HTMLDocument} doc\r\n   * @return {Promise} Resolved when scripts are loaded.\r\n   */\r\n  function runScripts(doc) {\r\n    const s$ = doc.querySelectorAll(`script[type=${scriptType}]`);\r\n    let promise = Promise.resolve();\r\n    for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\r\n      promise = promise.then(() => {\r\n        const c = doc.createElement('script');\r\n        c.textContent = s.textContent;\r\n        if (s.src) {\r\n          c.setAttribute('src', s.getAttribute('src'));\r\n        }\r\n        // Listen for load/error events before adding the clone to the document.\r\n        // Catch failures, always return c.\r\n        const whenLoadedPromise = whenElementLoaded(c).catch(() => c);\r\n        // Update currentScript and replace original with clone script.\r\n        currentScript = c;\r\n        s.parentNode.replaceChild(c, s);\r\n        // After is loaded, reset currentScript.\r\n        return whenLoadedPromise.then(() => currentScript = null);\r\n      });\r\n    }\r\n    return promise;\r\n  }\r\n\r\n  /**\r\n   * Waits for all the imported stylesheets/styles to be loaded.\r\n   * @param {!HTMLDocument} doc\r\n   * @return {Promise}\r\n   */\r\n  function waitForStyles(doc) {\r\n    const s$ = doc.querySelectorAll(stylesInImportsSelector);\r\n    const promises = [];\r\n    for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\r\n      // Catch failures, always return s\r\n      promises.push(whenElementLoaded(s).catch(() => s));\r\n    }\r\n    return Promise.all(promises);\r\n  }\r\n\r\n  /**\r\n   * Clones styles and stylesheets links contained in imports and moves them\r\n   * as siblings of the root import link.\r\n   * @param {!HTMLLinkElement} importLink\r\n   */\r\n  function cloneAndMoveStyles(importLink) {\r\n    const n$ = importLink.import.querySelectorAll(stylesSelector);\r\n    for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\r\n      // Cannot use `n.cloneNode(true)` as it won't work for link stylesheets\r\n      // with a parentNode https://gist.github.com/valdrinkoshi/4a92f97169a6fc41a1852f23211b8c4e\r\n      const clone = document.createElement(n.localName);\r\n      // Ensure we listen for load/error for this element.\r\n      whenElementLoaded(clone);\r\n      // Copy textContent and attributes.\r\n      clone.textContent = n.textContent;\r\n      for (let j = 0, ll = n.attributes.length; j < ll; j++) {\r\n        clone.setAttribute(n.attributes[j].name, n.attributes[j].value);\r\n      }\r\n\r\n      // Remove old, add new.\r\n      n.parentNode.removeChild(n);\r\n      importLink.parentNode.insertBefore(clone, importLink);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fires load/error events for loaded imports.\r\n   * @param {!HTMLDocument} doc\r\n   */\r\n  function fireEvents(doc) {\r\n    const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\r\n      (doc.querySelectorAll(IMPORT_SELECTOR));\r\n    // Inverse order to have events firing bottom-up.\r\n    for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\r\n      // Don't fire twice same event.\r\n      if (!n.__fired) {\r\n        n.__fired = true;\r\n        const eventType = n.import ? 'load' : 'error';\r\n        flags.log && console.warn('fire', eventType, n.href);\r\n        // Ensure the load promise is setup before firing the event.\r\n        whenElementLoaded(n);\r\n        n.dispatchEvent(new CustomEvent(eventType, {\r\n          bubbles: false,\r\n          cancelable: false,\r\n          detail: undefined\r\n        }));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Waits for an element to finish loading. If already done loading, it will\r\n   * mark the element accordingly.\r\n   * @param {!Element} element\r\n   * @return {Promise}\r\n   */\r\n  function whenElementLoaded(element) {\r\n    if (!element.__loadPromise) {\r\n      element.__loadPromise = new Promise((resolve, reject) => {\r\n        if (isElementLoaded(element)) {\r\n          resolve(element);\r\n        } else {\r\n          element.addEventListener('load', () => resolve(element));\r\n          element.addEventListener('error', () => reject(element));\r\n        }\r\n      });\r\n    }\r\n    return element.__loadPromise;\r\n  }\r\n\r\n  /**\r\n   * @param {!Element} element\r\n   * @return {boolean}\r\n   */\r\n  function isElementLoaded(element) {\r\n    let isLoaded = false;\r\n    if (useNative && isImportLink(element) && element.import &&\r\n      element.import.readyState !== 'loading') {\r\n      isLoaded = true;\r\n    } else if (isIE && element.localName === 'style') {\r\n      // NOTE: IE does not fire \"load\" event for styles that have already\r\n      // loaded. This is in violation of the spec, so we try our hardest to\r\n      // work around it.\r\n      // If there's not @import in the textContent, assume it has loaded\r\n      if (element.textContent.indexOf('@import') == -1) {\r\n        isLoaded = true;\r\n        // if we have a sheet, we have been parsed\r\n      } else if (element.sheet) {\r\n        isLoaded = true;\r\n        const csr = element.sheet.cssRules;\r\n        // search the rules for @import's\r\n        for (let i = 0, l = csr ? csr.length : 0; i < l && isLoaded; i++) {\r\n          if (csr[i].type === CSSRule.IMPORT_RULE) {\r\n            // if every @import has resolved, fake the load\r\n            isLoaded = Boolean(csr[i].styleSheet);\r\n          }\r\n        }\r\n      }\r\n    } else if (element.localName === 'script' && !element.src) {\r\n      isLoaded = true;\r\n    }\r\n    return isLoaded;\r\n  }\r\n\r\n  /**\r\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\r\n    method. This api is necessary because unlike the native implementation,\r\n    script elements do not force imports to resolve. Instead, users should wrap\r\n    code in either an `HTMLImportsLoaded` handler or after load time in an\r\n    `HTMLImports.whenReady(callback)` call.\r\n\r\n    NOTE: This module also supports these apis under the native implementation.\r\n    Therefore, if this file is loaded, the same code can be used under both\r\n    the polyfill and native implementation.\r\n   */\r\n\r\n  const isIE = /Trident/.test(navigator.userAgent);\r\n  const isEdge = !isIE && /Edge\\/\\d./i.test(navigator.userAgent);\r\n  // Used to ensure synchronous callback execution in whenReady. Updated to true\r\n  // when new imports are found, and to false when all imports are done loading.\r\n  let isImporting = true;\r\n\r\n  /**\r\n   * Calls the callback when all HTMLImports in the document at call time\r\n   * (or at least document ready) have loaded.\r\n   * @param {function()=} callback\r\n   * @return {Promise}\r\n   */\r\n  function whenReady(callback) {\r\n    // Ensure callback is executed synchronously if HTMLImports is ready.\r\n    if (!isImporting) {\r\n      callback && callback();\r\n      return Promise.resolve();\r\n    }\r\n    // 1. ensure the document is in a ready state (has dom), then\r\n    // 2. watch for loading of imports and call callback when done\r\n    return whenDocumentReady(document).then(watchImportsLoad).then(() => {\r\n      isImporting = false;\r\n      callback && callback();\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Resolved when document is in ready state.\r\n   * @param {!HTMLDocument} doc\r\n   * @returns {Promise}\r\n   */\r\n  function whenDocumentReady(doc) {\r\n    return new Promise((resolve) => {\r\n      if (doc.readyState !== 'loading') {\r\n        resolve(doc);\r\n      } else {\r\n        doc.addEventListener('readystatechange', () => {\r\n          if (doc.readyState !== 'loading') {\r\n            resolve(doc);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Resolved when all imports are done loading.\r\n   * @param {!HTMLDocument} doc\r\n   * @returns {Promise}\r\n   */\r\n  function watchImportsLoad(doc) {\r\n    let imports = doc.querySelectorAll(IMPORT_SELECTOR);\r\n    const promises = [];\r\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\r\n      // Skip nested imports.\r\n      if (MATCHES.call(imp, `${IMPORT_SELECTOR} ${IMPORT_SELECTOR}`)) {\r\n        continue;\r\n      }\r\n      // Capture failures, always return imp.\r\n      promises.push(whenElementLoaded(imp).catch(() => imp));\r\n    }\r\n    // Return aggregated info.\r\n    return Promise.all(promises);\r\n  }\r\n\r\n  new Importer(document);\r\n\r\n  // Fire the 'HTMLImportsLoaded' event when imports in document at load time\r\n  // have loaded. This event is required to simulate the script blocking\r\n  // behavior of native imports. A main document script that needs to be sure\r\n  // imports have loaded should wait for this event.\r\n  whenReady(() =>\r\n    document.dispatchEvent(new CustomEvent('HTMLImportsLoaded', {\r\n      cancelable: true,\r\n      bubbles: true,\r\n      detail: undefined\r\n    })));\r\n\r\n  // exports\r\n  scope.useNative = useNative;\r\n  scope.whenReady = whenReady;\r\n\r\n})(window.HTMLImports = (window.HTMLImports || {}));\r\n"]}