{"version":3,"sources":["/src/html-imports.js"],"names":["scope","constructor","Importer","documents","imports","document","querySelectorAll","IMPORT_SELECTOR","i","l","length","whenElementLoaded","observe","MutationObserver","_onMutation","bind","head","childList","useNative","_loader","Loader","_onLoaded","_onLoadedAll","whenDocumentReady","then","_loadSubtree","onLoad","onComplete","cache","onload","oncomplete","inflight","pending","isImportLink","node","nodeType","Node","ELEMENT_NODE","MATCHES","call","element","__loadPromise","Promise","resolve","reject","isElementLoaded","addEventListener","isLoaded","import","readyState","isIE","localName","textContent","indexOf","sheet","csr","cssRules","type","CSSRule","IMPORT_RULE","styleSheet","src","whenReady","callback","isImporting","watchImportsLoad","promises","imp","push","catch","all","createElement","currentScript","Object","defineProperty","get","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","Path","fixUrls","base","href","setAttribute","replaceAttrUrl","getAttribute","resolveUrlsInStyle","fixUrlAttributes","attrs","a","at","attributes","v","value","search","resolveUrlsInCssText","fixUrlsInTemplates","t$","fixUrlsInTemplate","template","content","n$","n","style","linkUrl","cssText","r","replaceUrls","text","regexp","replace","m","pre","url","post","urlPath","_resolveUrl","test","undefined","__workingURL","u","URL","pathname","e","doc","__tempDoc","implementation","createHTMLDocument","__base","appendChild","__anchor","Xhr","async","load","request","XMLHttpRequest","open","redirectedUrl","locationHeader","getResponseHeader","substr","location","origin","console","error","message","status","response","responseText","send","addNodes","nodes","require","checkDone","addNode","elt","dedupe","fetch","tail","match","pieces","split","body","header","atob","decodeURIComponent","receive","resource","err","$p","p","Element","prototype","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","_makeDocument","display","innerHTML","baseEl","querySelector","parentNode","removeChild","s$","s","importsSelectors","scriptType","_flatten","_waitForStyles","_runScripts","_fireEvents","__firstImport","isEdge","_cloneAndMoveStyles","_observe","promise","c","whenLoadedPromise","replaceChild","stylesInImportsSelector","importLink","stylesSelector","clone","j","ll","name","insertBefore","__fired","eventType","dispatchEvent","CustomEvent","bubbles","cancelable","detail","__importObserver","subtree","mutations","addedNodes","navigator","userAgent","window","HTMLImports"],"mappings":"A;;;;;;;;;aASC,SAAQ,CAACA,CAAD,CAAQ,CA8VbC,QADIC,EACO,EAAG,CAAA,IAAA,EAAA,IACZ,KAAAC,EAAA,CAAiB,EAIjB,KADA,IAAMC,EAAUC,QAAAC,iBAAA,CA/VIC,kBA+VJ,CAAhB,CACSC,EAAI,CADb,CACgBC,EAAIL,CAAAM,OAApB,CAAoCF,CAApC,CAAwCC,CAAxC,CAA2CD,CAAA,EAA3C,CACEG,CAAA,CAAkBP,CAAA,CAAQI,CAAR,CAAlB,CAGFI,EAAA,IAAIC,gBAAJ,CAAqB,IAAAC,EAAAC,KAAA,CAAsB,IAAtB,CAArB,CAAAH,SAAA,CAA0DP,QAAAW,KAA1D,CAAyE,CACvEC,UAAW,CAAA,CAD4D,CAAzE,CAIKC,EAAL,GACE,IAAAC,EAGA,CAHe,IAAIC,CAAJ,CACb,IAAAC,EAAAN,KAAA,CAAoB,IAApB,CADa,CACc,IAAAO,EAAAP,KAAA,CAAuB,IAAvB,CADd,CAGf,CAAAQ,CAAA,EAAAC,KAAA,CAAyB,QAAA,EAAM,CAAA,MAAA,EAAAC,EAAA,CAAkBpB,QAAlB,CAAA,CAA/B,CAJF,CAbY,CAxJdJ,QADImB,EACO,CAACM,CAAD,CAASC,CAAT,CAAqB,CAC9B,IAAAC,EAAA,CAAa,EACb,KAAAC,EAAA,CAAcH,CACd,KAAAI,EAAA,CAAkBH,CAClB,KAAAI,EAAA,CAAgB,CAChB,KAAAC,EAAA,CAAe,EALe,CA6ZlCC,QAASA,EAAY,CAACC,CAAD,CAAO,CAC1B,MAAOA,EAAAC,SAAP,GAAyBC,IAAAC,aAAzB,EAA8CC,CAAAC,KAAA,CAAaL,CAAb,CAjmBxB3B,kBAimBwB,CADpB,CAU5BI,QAASA,EAAiB,CAAC6B,CAAD,CAAU,CAC7BA,CAAAC,EAAL,GACED,CAAAC,EADF,CAC0B,IAAIC,OAAJ,CAAY,QAAA,CAACC,CAAD;AAAUC,CAAV,CAAqB,CACnDC,CAAA,CAAgBL,CAAhB,CAAJ,CACEG,CAAA,CAAQH,CAAR,CADF,EAGEA,CAAAM,iBAAA,CAAyB,MAAzB,CAAiC,QAAA,EAAM,CAAA,MAAAH,EAAA,CAAQH,CAAR,CAAA,CAAvC,CACA,CAAAA,CAAAM,iBAAA,CAAyB,OAAzB,CAAkC,QAAA,EAAM,CAAA,MAAAF,EAAA,CAAOJ,CAAP,CAAA,CAAxC,CAJF,CADuD,CAAjC,CAD1B,CAUA,OAAOA,EAAAC,EAX2B,CAkBpCI,QAASA,EAAe,CAACL,CAAD,CAAU,CAChC,IAAIO,EAAW,CAAA,CACf,IAAI7B,CAAJ,EAAiBe,CAAA,CAAaO,CAAb,CAAjB,EAA0CA,CAAAQ,OAA1C,EACgC,SADhC,GACER,CAAAQ,OAAAC,WADF,CAEEF,CAAA,CAAW,CAAA,CAFb,KAGO,IAAIG,CAAJ,EAAkC,OAAlC,GAAYV,CAAAW,UAAZ,CAKL,GAA+C,EAA/C,EAAIX,CAAAY,YAAAC,QAAA,CAA4B,SAA5B,CAAJ,CACEN,CAAA,CAAW,CAAA,CADb,KAGO,IAAIP,CAAAc,MAAJ,CAAmB,CACxBP,CAAA,CAAW,CAAA,CACLQ,EAAAA,CAAMf,CAAAc,MAAAE,SAEZ,KAJwB,IAIfhD,EAAI,CAJW,CAIRC,EAAI8C,CAAA,CAAMA,CAAA7C,OAAN,CAAmB,CAAvC,CAA0CF,CAA1C,CAA8CC,CAA9C,EAAmDsC,CAAnD,CAA6DvC,CAAA,EAA7D,CACM+C,CAAA,CAAI/C,CAAJ,CAAAiD,KAAJ,GAAoBC,OAAAC,YAApB,GAEEZ,CAFF,CAEa,CAAQa,CAAAL,CAAA,CAAI/C,CAAJ,CAAAoD,WAFrB,CALsB,CAAnB,CARF,IAmB0B,QAA1B,GAAIpB,CAAAW,UAAJ,EAAuCX,CAAAqB,IAAvC,GAGLd,CAHK,CAGM,CAAA,CAHN,CAKP,OAAOA,EA7ByB,CAwDlCe,QAASA,EAAS,CAACC,CAAD,CAAW,CAE3B,MAAKC,EAAL;AAMOzC,CAAA,EAAAC,KAAA,CAAyByC,CAAzB,CAAAzC,KAAA,CAAgD,QAAA,EAAM,CAC3DwC,CAAA,CAAc,CAAA,CACdD,EAAA,EAAYA,CAAA,EAF+C,CAAtD,CANP,EACEA,CACO,EADKA,CAAA,EACL,CAAArB,OAAAC,QAAA,EAFT,CAF2B,CAmB7BpB,QAASA,EAAiB,EAAG,CAC3B,MAAO,KAAImB,OAAJ,CAAY,QAAA,CAACC,CAAD,CAAa,CACF,SAA5B,GAAItC,QAAA4C,WAAJ,CACEN,CAAA,EADF,CAGEtC,QAAAyC,iBAAA,CAA0B,kBAA1B,CAA8C,QAAA,EAAM,CACtB,SAA5B,GAAIzC,QAAA4C,WAAJ,EACEN,CAAA,EAFgD,CAApD,CAJ4B,CAAzB,CADoB,CAkB7BsB,QAASA,EAAgB,EAAG,CAG1B,IAFA,IAAI7D,EAAUC,QAAAC,iBAAA,CA1tBQC,kBA0tBR,CAAd,CACM2D,EAAW,EADjB,CAEA,EAAA,EAFA,CAES1D,EAAI,CAFb,CAEgBC,EAAIL,CAAAM,OAApB,CAAyCF,CAAzC,CAA6CC,CAA7C,GAAmD0D,CAAAA,EAAnD,CAAyD/D,CAAA,CAAQI,CAAR,CAAzD,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAsEA,CAAA,EAAtE,CAEM8B,CAAAC,KAAA,CAAa4B,CAAAA,EAAb,CAAkB,mCAAlB,CAAJ,EAIAD,CAAAE,KAAA,CAAczD,CAAA,CAAkBwD,CAAAA,EAAlB,CAAAE,MAAA,CAA6B,QAAA,CAAA,CAAA,CAAA,CAAA,MAAA,SAAA,EAAMF,CAAAA,MAAAA,EAAAA,EAAAA,CAAN,CAAA,CAAA,CAAA,CAA7B,CAAd,CAGF,OAAOzB,QAAA4B,IAAA,CAAYJ,CAAZ,CAZmB,CA5tBb;AAIf,IAAMhD,EAAoB,QAApBA,EAAgCb,SAAAkE,cAAA,CAAuB,MAAvB,CAAtC,CAOIC,EAAgB,IACgB,EAAA,CAApC,GAAI,eAAJ,EAAuBnE,SAAvB,EACEoE,MAAAC,eAAA,CAAsBrE,QAAtB,CAAgC,eAAhC,CAAiD,CAC/CsE,IAAKA,QAAQ,EAAG,CACd,MAAOH,EAAP,GAK2B,UAAxB,GAAAnE,QAAA4C,WAAA,CACC5C,QAAAuE,QAAA,CAAiBvE,QAAAuE,QAAAlE,OAAjB,CAA2C,CAA3C,CADD,CACiD,IANpD,CADc,CAD+B,CAU/CmE,aAAc,CAAA,CAViC,CAAjD,CAeF,KAAMC,EAAe,yBAArB,CACMC,EAAiB,qBADvB,CAEMC,EAAoB,oCAF1B,CAOMC,EAAO,CAEXC,EAASA,QAAQ,CAAC1C,CAAD,CAAU2C,CAAV,CAAgB,CAC3B3C,CAAA4C,KAAJ,EACE5C,CAAA6C,aAAA,CAAqB,MAArB,CACEJ,CAAAK,EAAA,CAAoB9C,CAAA+C,aAAA,CAAqB,MAArB,CAApB,CAAkDJ,CAAlD,CADF,CAGE3C,EAAAqB,IAAJ,EACErB,CAAA6C,aAAA,CAAqB,KAArB,CACEJ,CAAAK,EAAA,CAAoB9C,CAAA+C,aAAA,CAAqB,KAArB,CAApB,CAAiDJ,CAAjD,CADF,CAGwB,QAA1B;AAAI3C,CAAAW,UAAJ,CACE8B,CAAAO,EAAA,CAAwBhD,CAAxB,CAAiC2C,CAAjC,CADF,CAEiC,QAFjC,GAEW3C,CAAAW,UAFX,EAE6CX,CAAAY,YAF7C,GAGEZ,CAAAY,YAHF,EAGyB,kBAHzB,CAG4C+B,CAH5C,CAT+B,CAFtB,CAkBXM,EAAkBA,QAAQ,CAACjD,CAAD,CAAU2C,CAAV,CAAgB,CAExC,IADA,IAAMO,EAAQ,CAAC,QAAD,CAAW,KAAX,CAAkB,MAAlB,CAA0B,KAA1B,CAAiC,OAAjC,CAAd,CACSlF,EAAI,CADb,CACgBmF,CAAhB,CAAmBnF,CAAnB,CAAuBkF,CAAAhF,OAAvB,GAAwCiF,CAAxC,CAA4CD,CAAA,CAAMlF,CAAN,CAA5C,EAAuDA,CAAA,EAAvD,CAA4D,CAC1D,IAAMoF,EAAKpD,CAAAqD,WAAA,CAAmBF,CAAnB,CAAX,CACMG,EAAIF,CAAJE,EAAUF,CAAAG,MACZD,EAAJ,EAAkC,CAAlC,CAAUA,CAAAE,OAAA,CAAS,WAAT,CAAV,GACEJ,CAAAG,MADF,CACoB,OAAP,GAACJ,CAAD,CACTV,CAAAgB,EAAA,CAA0BH,CAA1B,CAA6BX,CAA7B,CADS,CAETF,CAAAK,EAAA,CAAoBQ,CAApB,CAAuBX,CAAvB,CAHJ,CAH0D,CAFpB,CAlB/B,CA+BXe,EAAoBA,QAAQ,CAAC1D,CAAD,CAAU2C,CAAV,CAAgB,CACpCgB,CAAAA,CAAK3D,CAAAlC,iBAAA,CAAyB,UAAzB,CACX,KAAK,IAAIE,EAAI,CAAb,CAAgBA,CAAhB,CAAoB2F,CAAAzF,OAApB,CAA+BF,CAAA,EAA/B,CACEyE,CAAAmB,EAAA,CAAuBD,CAAA,CAAG3F,CAAH,CAAvB,CAA8B2E,CAA9B,CAHwC,CA/BjC,CAsCXiB,EAAmBA,QAAQ,CAACC,CAAD,CAAWlB,CAAX,CAAiB,CAE1C,GADMmB,CACN,CADgBD,CAAAC,QAChB,CAAA,CAKA,IAFA,IAAMC,EAAKD,CAAAhG,iBAAA,CACT,oDADS,CAAX;AAESE,EAAI,CAAb,CAAgBA,CAAhB,CAAoB+F,CAAA7F,OAApB,CAA+BF,CAAA,EAA/B,CAAoC,CAClC,IAAMgG,EAAID,CAAA,CAAG/F,CAAH,CACS,QAAnB,EAAIgG,CAAArD,UAAJ,CACE8B,CAAAO,EAAA,CAAwBgB,CAAxB,CAA2BrB,CAA3B,CADF,CAGEF,CAAAQ,EAAA,CAAsBe,CAAtB,CAAyBrB,CAAzB,CALgC,CAQpCF,CAAAiB,EAAA,CAAwBI,CAAxB,CAAiCnB,CAAjC,CAbA,CAF0C,CAtCjC,CAwDXK,EAAoBA,QAAQ,CAACiB,CAAD,CAAQC,CAAR,CAAiB,CAC3CD,CAAArD,YAAA,CAAoB6B,CAAAgB,EAAA,CAA0BQ,CAAArD,YAA1B,CAA6CsD,CAA7C,CADuB,CAxDlC,CA4DXT,EAAsBA,QAAQ,CAACU,CAAD,CAAUD,CAAV,CAAmB,CAC3CE,CAAAA,CAAI3B,CAAA4B,EAAA,CAAiBF,CAAjB,CAA0BD,CAA1B,CAAmC3B,CAAnC,CAER,OADA6B,EACA,CADI3B,CAAA4B,EAAA,CAAiBD,CAAjB,CAAoBF,CAApB,CAA6B1B,CAA7B,CAF2C,CA5DtC,CAkEX6B,EAAaA,QAAQ,CAACC,CAAD,CAAOJ,CAAP,CAAgBK,CAAhB,CAAwB,CAC3C,MAAOD,EAAAE,QAAA,CAAaD,CAAb,CAAqB,QAAQ,CAACE,CAAD,CAAIC,CAAJ,CAASC,CAAT,CAAcC,CAAd,CAAoB,CAClDC,CAAAA,CAAUF,CAAAH,QAAA,CAAY,OAAZ,CAAqB,EAArB,CACVN,EAAJ,GACEW,CADF,CACYpC,CAAAqC,EAAA,CAAiBD,CAAjB,CAA0BX,CAA1B,CADZ,CAGA,OAAOQ,EAAP,CAAa,GAAb,CAAoBG,CAApB,CAA8B,GAA9B,CAAqCD,CALiB,CAAjD,CADoC,CAlElC,CA4EX9B,EAAgBA,QAAQ,CAACwB,CAAD,CAAOJ,CAAP,CAAgB,CACtC,MAAII,EAAJ,EAAYhC,CAAAyC,KAAA,CAAkBT,CAAlB,CAAZ,CACSA,CADT,CAGS7B,CAAAqC,EAAA,CAAiBR,CAAjB,CAAuBJ,CAAvB,CAJ6B,CA5E7B,CAoFXY,EAAaA,QAAQ,CAACH,CAAD,CAAMhC,CAAN,CAAY,CAE/B,GAA0BqC,IAAAA,EAA1B,GAAIvC,CAAAwC,EAAJ,CAAqC,CACnCxC,CAAAwC,EAAA,CAAoB,CAAA,CACpB,IAAI,CACF,IAAMC,EAAI,IAAIC,GAAJ,CAAQ,GAAR,CAAa,UAAb,CACVD,EAAAE,SAAA,CAAa,OACb3C,EAAAwC,EAAA,CAAgC,gBAAhC,GAAqBC,CAAAtC,KAHnB,CAIF,MAAOyC,CAAP,CAAU,EANuB,CASrC,GAAI5C,CAAAwC,EAAJ,CACE,MAAOrC,CAAC,IAAIuC,GAAJ,CAAQR,CAAR;AAAahC,CAAb,CAADC,MAIL0C,EAAAA,CAAM7C,CAAA8C,EACLD,EAAL,GACEA,CAIA,CAJMzH,QAAA2H,eAAAC,mBAAA,CAA2C,MAA3C,CAIN,CAHAhD,CAAA8C,EAGA,CAHiBD,CAGjB,CAFAA,CAAAI,EAEA,CAFaJ,CAAAvD,cAAA,CAAkB,MAAlB,CAEb,CADAuD,CAAA9G,KAAAmH,YAAA,CAAqBL,CAAAI,EAArB,CACA,CAAAJ,CAAAM,EAAA,CAAeN,CAAAvD,cAAA,CAAkB,GAAlB,CALjB,CAOAuD,EAAAI,EAAA9C,KAAA,CAAkBD,CAClB2C,EAAAM,EAAAhD,KAAA,CAAoB+B,CACpB,OAAOW,EAAAM,EAAAhD,KAAP,EAA4B+B,CA1BG,CApFtB,CAPb,CA0HMkB,EAAM,CAEVC,MAAO,CAAA,CAFG,CASVC,KAAMA,QAAQ,CAACpB,CAAD,CAAMpD,CAAN,CAAgB,CAC5B,IAAMyE,EAAU,IAAIC,cAIpBD,EAAAE,KAAA,CAAa,KAAb,CAAoBvB,CAApB,CAAyBkB,CAAAC,MAAzB,CACAE,EAAA1F,iBAAA,CAAyB,kBAAzB,CAA6C,QAAA,EAAO,CAClD,GAA2B,CAA3B,GAAI0F,CAAAvF,WAAJ,CAA8B,CAG5B,IAAI0F,EAAgBnB,IAAAA,EACpB,IAAI,CACF,IAAMoB,EAAiBJ,CAAAK,kBAAA,CAA0B,UAA1B,CACnBD,EAAJ,GAEED,CAFF,CAEmD,GAAjC,GAACC,CAAAE,OAAA,CAAsB,CAAtB,CAAyB,CAAzB,CAAD,CACdC,QAAAC,OADc,CACIJ,CADJ,CACqBA,CAHvC,CAFE,CAOF,MAAOf,CAAP,CAAU,CACVoB,OAAAC,MAAA,CAAcrB,CAAAsB,QAAd,CADU,CAMZpF,CAAA,CAAS,EAHwB,GAGxB,EAHMyE,CAAAY,OAGN;AAHgD,GAGhD,CAH+BZ,CAAAY,OAG/B,EAFY,GAEZ,GAFPZ,CAAAY,OAEO,EAFmBA,CAAAZ,CAAAY,OAEnB,CAAT,CADkBZ,CAAAa,SAClB,EADsCb,CAAAc,aACtC,CAA0BX,CAA1B,CAjB4B,CADoB,CAApD,CAqBAH,EAAAe,KAAA,EACA,OAAOf,EA5BqB,CATpB,CAwDV,EAAA,UAAA,EAAA,CAAAgB,QAAQ,CAACC,CAAD,CAAQ,CAEd,IAAA1H,EAAA,EAAiB0H,CAAA/I,OAEjB,KAJc,IAILF,EAAI,CAJC,CAIEC,EAAIgJ,CAAA/I,OAJN,CAIoB8F,CAAlC,CACGhG,CADH,CACOC,CADP,GACc+F,CADd,CACkBiD,CAAA,CAAMjJ,CAAN,CADlB,EAC6BA,CAAA,EAD7B,CAEE,IAAAkJ,EAAA,CAAalD,CAAb,CAGF,KAAAmD,EAAA,EATc,CAYhB,EAAA,UAAA,EAAA,CAAAC,QAAO,CAAC1H,CAAD,CAAO,CAEZ,IAAAH,EAAA,EAEA,KAAA2H,EAAA,CAAaxH,CAAb,CAEA,KAAAyH,EAAA,EANY,CASd,EAAA,UAAA,EAAA,CAAAD,QAAO,CAACG,CAAD,CAAM,CACX,IAAM1C,EAAM0C,CAAAhG,IAANsD,EAAiB0C,CAAAzE,KAElB,KAAA0E,EAAA,CAAY3C,CAAZ,CAAiB0C,CAAjB,CAAL,EAEE,IAAAE,EAAA,CAAW5C,CAAX,CAAgB0C,CAAhB,CALS,CASb,EAAA,UAAA,EAAA,CAAAC,QAAM,CAAC3C,CAAD,CAAM0C,CAAN,CAAW,CACf,GAAI,IAAA7H,EAAA,CAAamF,CAAb,CAAJ,CAIE,MAFA,KAAAnF,EAAA,CAAamF,CAAb,CAAA/C,KAAA,CAAuByF,CAAvB,CAEO,CAAA,CAAA,CAGT,IAAI,IAAAjI,EAAA,CAAWuF,CAAX,CAAJ,CAKE,MAJA,KAAAtF,EAAA,CAAYsF,CAAZ,CAAiB0C,CAAjB,CAAsB,IAAAjI,EAAA,CAAWuF,CAAX,CAAtB,CAIO,CAFP,IAAA6C,EAAA,EAEO,CAAA,CAAA,CAGT,KAAAhI,EAAA,CAAamF,CAAb,CAAA,CAAoB,CAAC0C,CAAD,CAEpB,OAAO,CAAA,CAlBQ,CAqBjB,EAAA,UAAA,EAAA,CAAAE,QAAK,CAAC5C,CAAD,CAAW,CAAA,IAAA;AAAA,IAEd,IAAKA,CAAL,CAEO,GAAIA,CAAA8C,MAAA,CAAU,QAAV,CAAJ,CAAyB,CAE9B,IAAMC,EAAS/C,CAAAgD,MAAA,CAAU,GAAV,CAAf,CAEIC,EAAOF,CAAA,CAAO,CAAP,CAFX,CAIEE,EAD+B,EAAjC,CAFeF,CAAAG,CAAO,CAAPA,CAEXhH,QAAA,CAAe,SAAf,CAAJ,CACSiH,IAAA,CAAKF,CAAL,CADT,CAGSG,kBAAA,CAAmBH,CAAnB,CAET,KAAAI,EAAA,CAAarD,CAAb,CAAuB,CAAA,CAAvB,CAA8BiD,CAA9B,CAV8B,CAAzB,IAYL/B,EAAAE,KAAA,CAASpB,CAAT,CAAc,QAAA,CAAC+B,CAAD,CAAQuB,CAAR,CAAkB9B,CAAlB,CACZ,CAAA,MAAA,EAAA6B,EAAA,CAAarD,CAAb,CAAuB+B,CAAvB,CAA8BuB,CAA9B,CAAwC9B,CAAxC,CAAA,CADF,CAdF,KACE,KAAA6B,EAAA,CAAarD,CAAb,CAAuB,CAAA,CAAvB,CAA6B,+BAA7B,CAHY,CA4BhB,EAAA,UAAA,EAAA,CAAAqD,QAAO,CAACrD,CAAD,CAAWuD,CAAX,CAAgBD,CAAhB,CAA0B9B,CAA1B,CAAyC,CAC9C,IAAA/G,EAAA,CAAWuF,CAAX,CAAA,CAAkBsD,CAElB,KADA,IAAME,EAAK,IAAA3I,EAAA,CAAamF,CAAb,CAAX,CACS3G,EAAI,CADb,CACgBC,EAAIkK,CAAAjK,OADpB,CAC+BkK,CAA/B,CACGpK,CADH,CACOC,CADP,GACcmK,CADd,CACkBD,CAAA,CAAGnK,CAAH,CADlB,EAC0BA,CAAA,EAD1B,CAIE,IAAAqB,EAAA,CAAYsF,CAAZ,CAAiByD,CAAjB,CAAoBH,CAApB,CAA8BC,CAA9B,CAAmC/B,CAAnC,CACA,CAAA,IAAAqB,EAAA,EAEF,KAAAhI,EAAA,CAAamF,CAAb,CAAA,CAAoB,IAV0B,CAahD,EAAA,UAAA,EAAA,CAAA6C,QAAI,EAAG,CACL,EAAE,IAAAjI,EACF,KAAA4H,EAAA,EAFK,CAKP,EAAA,UAAA,EAAA,CAAAA,QAAS,EAAG,CACL,IAAA5H,EAAL,EACE,IAAAD,EAAA,EAFQ,CA8Bd,KAAMQ,EAAUuI,OAAAC,UAAAC,QAAVzI,EACJuI,OAAAC,UAAAE,gBADI1I;AAEJuI,OAAAC,UAAAG,mBAFI3I,EAGJuI,OAAAC,UAAAI,kBAHI5I,EAIJuI,OAAAC,UAAAK,iBAJI7I,EAKJuI,OAAAC,UAAAM,sBAoCA,EAAA,UAAA,EAAA,CAAA3J,QAAY,CAACS,CAAD,CAAO,CAGjB,IAAAf,EAAAqI,EAAA,CAFctH,CAAA5B,iBAAAmJ,CApXMlJ,kBAoXNkJ,CAEd,CAHiB,CAMnB,EAAA,UAAA,EAAA,CAAApI,QAAS,CAAC8F,CAAD,CAAM0C,CAAN,CAAWY,CAAX,CAAqBC,CAArB,CAA0B/B,CAA1B,CAAyC,CAGpBnB,IAAAA,EAA5B,GAAI,IAAArH,EAAA,CAAegH,CAAf,CAAJ,GAGIuD,CAAJ,CACE,IAAAvK,EAAA,CAAegH,CAAf,CADF,CACwB,IADxB,EAIQW,CAIN,CAJY,IAAAuD,EAAA,CAAmBZ,CAAnB,CAA6B9B,CAA7B,EAA8CxB,CAA9C,CAIZ,CADA,IAAA1F,EAAA,CAAkBqG,CAAlB,CACA,CAAA,IAAA3H,EAAA,CAAegH,CAAf,CAAA,CAAsBW,CARxB,CAHA,CAHgD,CAwBlD,EAAA,UAAA,EAAA,CAAAuD,QAAa,CAACZ,CAAD,CAAWtD,CAAX,CAAgB,CAC3B,IAAMb,EACHjG,QAAAkE,cAAA,CAAuB,gBAAvB,CACH+B,EAAAG,MAAA6E,QAAA,CAAwB,MACpBnE,EAAJ,EACEb,CAAAjB,aAAA,CAAqB,aAArB,CAAoC8B,CAApC,CAEEsD,EAAJ,GACEnE,CAAAiF,UADF,CACsBd,CADtB,CAMA,IADMe,CACN,CAD+ClF,CAAAmF,cAAA,CAAsB,MAAtB,CAC/C,CACEtE,CACA;AADMlC,CAAAK,EAAA,CAAoBkG,CAAAjG,aAAA,CAAoB,MAApB,CAApB,CAAiD4B,CAAjD,CACN,CAAAqE,CAAAE,WAAAC,YAAA,CAA8BH,CAA9B,CAIII,EAAAA,CAAKtF,CAAAhG,iBAAA,CAAyB,YAAzB,CACX,KApB2B,IAoBlBE,EAAI,CApBc,CAoBXqL,CAAhB,CAAmBrL,CAAnB,CAAuBoL,CAAAlL,OAAvB,GAAqCmL,CAArC,CAAyCD,CAAA,CAAGpL,CAAH,CAAzC,EAAiDA,CAAA,EAAjD,CACEqL,CAAAxG,aAAA,CAAe,WAAf,CACEJ,CAAAK,EAAA,CAAoBuG,CAAAtG,aAAA,CAAe,WAAf,CAApB,EAAmD,EAAnD,CAAuD4B,CAAvD,CADF,CAIIZ,EAAAA,CAAKD,CAAAhG,iBAAA,CAtGbwL,mKAsGa,CACFtL,EAAAA,CAAI,CAAb,KAAgBC,IAAAA,EAAI8F,CAAA7F,OAAJD,CAAe+F,CAA/B,CAAkChG,CAAlC,CAAsCC,CAAtC,GAA4C+F,CAA5C,CAAgDD,CAAA,CAAG/F,CAAH,CAAhD,EAAwDA,CAAA,EAAxD,CAGEG,CAAA,CAAkB6F,CAAlB,CAEA,CADAvB,CAAAC,EAAA,CAAasB,CAAb,CAAgBW,CAAhB,CACA,CAAoB,QAApB,GAAIX,CAAArD,UAAJ,EAGEqD,CAAAnB,aAAA,CAAe,MAAf,CAlGW0G,eAkGX,CAGJ9G;CAAAiB,EAAA,CAAwBI,CAAxB,CAAiCa,CAAjC,CACA,OAAOb,EAtCoB,CAyC7B,EAAA,UAAA,EAAA,CAAAhF,QAAY,EAAG,CAAA,IAAA,EAAA,IACboB,QAAA4B,IAAA,CAAY,CACV,IAAA0H,EAAA,EADU,CAEV,IAAAC,EAAA,EAFU,CAGV,IAAAC,EAAA,EAHU,CAAZ,CAAA1K,KAAA,CAIQ,QAAA,EAAM,CAAA,MAAA,EAAA2K,EAAA,EAAA,CAJd,CADa,CAWf,EAAA,UAAA,EAAA,CAAAH,QAAQ,CAACxJ,CAAD,CAAU,CAChBA,CAAA,CAAUA,CAAV,EAAqBnC,QAGrB,KAFA,IAAMkG,EACH/D,CAAAlC,iBAAA,CAxciBC,kBAwcjB,CADH,CAESC,EAAI,CAFb,CAEgBC,EAAI8F,CAAA7F,OAFpB,CAE+B8F,CAA/B,CAAkChG,CAAlC,CAAsCC,CAAtC,GAA4C+F,CAA5C,CAAgDD,CAAA,CAAG/F,CAAH,CAAhD,EAAwDA,CAAA,EAAxD,CACEgG,CAAAxD,OACA,CADW,IAAA7C,EAAA,CAAeqG,CAAApB,KAAf,CACX,CAAIoB,CAAAxD,OAAJ,EAAiBoJ,CAAA5F,CAAAxD,OAAAoJ,EAAjB,GACE5F,CAAAxD,OAAAoJ,EAWA,CAXyB5F,CAWzB,CAVA,IAAAwF,EAAA,CAAcxF,CAAAxD,OAAd,CAUA,CARIR,CAQJ,GARgBnC,QAQhB,GAFE,CAHI6C,CAGJ,EAHYmJ,CAGZ,GAFE,IAAAC,EAAA,CAAyB9F,CAAzB,CAEF,CAAA,IAAA+F,EAAA,CAAc/F,CAAAxD,OAAd,CAEF,EAAAwD,CAAA2B,YAAA,CAAc3B,CAAAxD,OAAd,CAZF,CANc,CA4BlB,EAAA,UAAA,EAAA,CAAAkJ,QAAW,EAAG,CAGZ,IAFA,IAAMN,EAAKvL,QAAAC,iBAAA,CAA0B,4BAA1B,CAAX,CACIkM;AAAU9J,OAAAC,QAAA,EADd,CAEA,EAAA,EAFA,CAESnC,EAAI,CAFb,CAEgBC,EAAImL,CAAAlL,OAApB,CAAkCF,CAAlC,CAAsCC,CAAtC,GAA4CoL,CAAAA,EAA5C,CAAgDD,CAAA,CAAGpL,CAAH,CAAhD,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAwDA,CAAA,EAAxD,CACEgM,CAAA,CAAUA,CAAAhL,KAAA,CAAa,QAAA,CAAA,CAAA,CAAA,CAAA,MAAA,SAAA,EAAM,CAC3B,IAAMiL,EAAIpM,QAAAkE,cAAA,CAAuB,QAAvB,CAAV,CAGMmI,EAAoB/L,CAAA,CAAkB8L,CAAlB,CAAApI,MAAA,CAA2B,QAAA,EAAMoI,CAAAA,MAAAA,EAAAA,CAAjC,CAE1BjI,EAAA,CAAgBiI,CAEhBA,EAAArJ,YAAA,CAAgByI,CAAAA,EAAAzI,YACZyI,EAAAA,EAAAhI,IAAJ,EACE4I,CAAApH,aAAA,CAAe,KAAf,CAAsBwG,CAAAA,EAAAtG,aAAA,CAAe,KAAf,CAAtB,CAEFsG,EAAAA,EAAAH,WAAAiB,aAAA,CAA0BF,CAA1B,CAA6BZ,CAAAA,EAA7B,CAEA,OAAOa,EAAAlL,KAAA,CAAuB,QAAA,EAAM,CAAA,MAAAgD,EAAA,CAAgB,IAAhB,CAA7B,CAdoB,CAAN,CAAA,CAAA,CAAA,CAAb,CAiBZ,OAAOgI,EArBK,CA4Bd,EAAA,UAAA,EAAA,CAAAP,QAAc,EAAG,CAGf,IAFA,IAAML,EAAKvL,QAAAC,iBAAA,CAlMbsM,4FAkMa,CAAX;AACM1I,EAAW,EADjB,CAEA,EAAA,EAFA,CAES1D,EAAI,CAFb,CAEgBC,EAAImL,CAAAlL,OAApB,CAAkCF,CAAlC,CAAsCC,CAAtC,GAA4CoL,CAAAA,EAA5C,CAAgDD,CAAA,CAAGpL,CAAH,CAAhD,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAwDA,CAAA,EAAxD,CAEE0D,CAAAE,KAAA,CAAczD,CAAA,CAAkBkL,CAAAA,EAAlB,CAAAxH,MAAA,CAA2B,QAAA,CAAA,CAAA,CAAA,CAAA,MAAA,SAAA,EAAMwH,CAAAA,MAAAA,EAAAA,EAAAA,CAAN,CAAA,CAAA,CAAA,CAA3B,CAAd,CAEF,OAAOnJ,QAAA4B,IAAA,CAAYJ,CAAZ,CAPQ,CAejB,EAAA,UAAA,EAAA,CAAAoI,QAAmB,CAACO,CAAD,CAAa,CAE9B,IADA,IAAMtG,EAAKsG,CAAA7J,OAAA1C,iBAAA,CAtNbwM,0DAsNa,CAAX,CACStM,EAAI,CADb,CACgBC,EAAI8F,CAAA7F,OADpB,CAC+B8F,CAA/B,CAAkChG,CAAlC,CAAsCC,CAAtC,GAA4C+F,CAA5C,CAAgDD,CAAA,CAAG/F,CAAH,CAAhD,EAAwDA,CAAA,EAAxD,CAA6D,CAG3D,IAAMuM,EAAQ1M,QAAAkE,cAAA,CAAuBiC,CAAArD,UAAvB,CAEdxC,EAAA,CAAkBoM,CAAlB,CAEAA,EAAA3J,YAAA,CAAoBoD,CAAApD,YACpB,KAR2D,IAQlD4J,EAAI,CAR8C,CAQ3CC,EAAKzG,CAAAX,WAAAnF,OAArB,CAA0CsM,CAA1C,CAA8CC,CAA9C,CAAkDD,CAAA,EAAlD,CACED,CAAA1H,aAAA,CAAmBmB,CAAAX,WAAA,CAAamH,CAAb,CAAAE,KAAnB,CAAyC1G,CAAAX,WAAA,CAAamH,CAAb,CAAAjH,MAAzC,CAIFS,EAAAkF,WAAAC,YAAA,CAAyBnF,CAAzB,CACAqG;CAAAnB,WAAAyB,aAAA,CAAmCJ,CAAnC,CAA0CF,CAA1C,CAd2D,CAF/B,CAuBhC,EAAA,UAAA,EAAA,CAAAV,QAAW,EAAG,CAIZ,IAHA,IAAM5F,EACHlG,QAAAC,iBAAA,CAriBiBC,kBAqiBjB,CADH,CAGSC,EAAI+F,CAAA7F,OAAJF,CAAgB,CAHzB,CAG4BgG,CAA5B,CAAoC,CAApC,EAA+BhG,CAA/B,GAA0CgG,CAA1C,CAA8CD,CAAA,CAAG/F,CAAH,CAA9C,EAAsDA,CAAA,EAAtD,CAEE,GAAK4M,CAAA5G,CAAA4G,EAAL,CAAgB,CACd5G,CAAA4G,EAAA,CAAY,CAAA,CACZ,KAAMC,EAAY7G,CAAAxD,OAAA,CAAW,MAAX,CAAoB,OAGtCrC,EAAA,CAAkB6F,CAAlB,CACAA,EAAA8G,cAAA,CAAgB,IAAIC,WAAJ,CAAgBF,CAAhB,CAA2B,CACzCG,QAAS,CAAA,CADgC,CAEzCC,WAAY,CAAA,CAF6B,CAGzCC,OAAQlG,IAAAA,EAHiC,CAA3B,CAAhB,CANc,CANN,CAqBd,EAAA,UAAA,EAAA,CAAA+E,QAAQ,CAAC/J,CAAD,CAAU,CACZA,CAAAmL,EAAJ,GAGAnL,CAAAmL,EACA,CAD2B,IAAI9M,gBAAJ,CAAqB,IAAAC,EAAAC,KAAA,CAAsB,IAAtB,CAArB,CAC3B,CAAAyB,CAAAmL,EAAA/M,QAAA,CAAiC4B,CAAjC,CAA0C,CACxCvB,UAAW,CAAA,CAD6B,CAExC2M,QAAS,CAAA,CAF+B,CAA1C,CAJA,CADgB,CAclB,EAAA,UAAA,EAAA,CAAA9M,QAAW,CAAC+M,CAAD,CAAY,CAErB,IADA,IAAM3J,EAAW,EAAjB,CACS8I,EAAI,CADb,CACgB/F,CAAhB,CAAmB+F,CAAnB,CAAuBa,CAAAnN,OAAvB,GAA4CuG,CAA5C,CAAgD4G,CAAA,CAAUb,CAAV,CAAhD,EAA+DA,CAAA,EAA/D,CACE,IADkE,IACzDxM,EAAI,CADqD,CAClDC,EAAIwG,CAAA6G,WAAA,CAAe7G,CAAA6G,WAAApN,OAAf;AAAqC,CAAzD,CAA4DF,CAA5D,CAAgEC,CAAhE,CAAmED,CAAA,EAAnE,CAAwE,CACtE,IAAMgG,EAA4BS,CAAA6G,WAAA,CAAatN,CAAb,CAC9BgG,EAAJ,EAASvE,CAAA,CAAauE,CAAb,CAAT,GACEtC,CAAAE,KAAA,CAAczD,CAAA,CAAkB6F,CAAlB,CAAd,CACA,CAAKtF,CAAL,EACE,IAAAC,EAAAyI,EAAA,CAAqBpD,CAArB,CAHJ,CAFsE,CAUtEtC,CAAAxD,OAAJ,GAEEsD,CACA,CADc,CAAA,CACd,CAAAtB,OAAA4B,IAAA,CAAYJ,CAAZ,CAAA1C,KAAA,CAA2B,QAAA,EAAM,CAAA,MAAAwC,EAAA,CAAc,CAAA,CAAd,CAAjC,CAHF,CAbqB,CAkGzB,KAAMd,EAAO,SAAAqE,KAAA,CAAewG,SAAAC,UAAf,CAAb,CACM3B,EAAS,CAACnJ,CAAVmJ,EAAkB,YAAA9E,KAAA,CAAkBwG,SAAAC,UAAlB,CADxB,CAIIhK,EAAc,CAAA,CA4DlB,KAAI9D,CAMJ4D,EAAA,CAAU,QAAA,EACR,CAAA,MAAAzD,SAAAiN,cAAA,CAAuB,IAAIC,WAAJ,CAAgB,mBAAhB,CAAqC,CAC1DE,WAAY,CAAA,CAD8C,CAE1DD,QAAS,CAAA,CAFiD,CAG1DE,OAAQlG,IAAAA,EAHkD,CAArC,CAAvB,CAAA,CADF,CAQAxH,EAAAkB,UAAA,CAAkBA,CAClBlB,EAAA8D,UAAA,CAAkBA,CA1vBH,CAAhB,CAAD,CA4vBGmK,MAAAC,YA5vBH,CA4vByBD,MAAAC,YA5vBzB,EA4vB+C,EA5vB/C","file":"html-imports.min.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(function(scope) {\n\n  /********************* base setup *********************/\n  const IMPORT_SELECTOR = 'link[rel=import]';\n  const useNative = Boolean('import' in document.createElement('link'));\n  const flags = {\n    bust: false,\n    log: false\n  };\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get: function() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat. This is not needed by\n          // html-imports polyfill but helps generally polyfill `currentScript`.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n\n    fixUrls: function(element, base) {\n      if (element.href) {\n        element.setAttribute('href',\n          Path.replaceAttrUrl(element.getAttribute('href'), base));\n      }\n      if (element.src) {\n        element.setAttribute('src',\n          Path.replaceAttrUrl(element.getAttribute('src'), base));\n      }\n      if (element.localName === 'style') {\n        Path.resolveUrlsInStyle(element, base);\n      } else if (element.localName === 'script' && element.textContent) {\n        element.textContent += `\\n//# sourceURL=${base}`;\n      }\n    },\n\n    fixUrlAttributes: function(element, base) {\n      const attrs = ['action', 'src', 'href', 'url', 'style'];\n      for (let i = 0, a; i < attrs.length && (a = attrs[i]); i++) {\n        const at = element.attributes[a];\n        const v = at && at.value;\n        if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n          at.value = (a === 'style') ?\n            Path.resolveUrlsInCssText(v, base) :\n            Path.replaceAttrUrl(v, base);\n        }\n      }\n    },\n\n    fixUrlsInTemplates: function(element, base) {\n      const t$ = element.querySelectorAll('template');\n      for (let i = 0; i < t$.length; i++) {\n        Path.fixUrlsInTemplate(t$[i], base);\n      }\n    },\n\n    fixUrlsInTemplate: function(template, base) {\n      const content = template.content;\n      if (!content) { // Template not supported.\n        return;\n      }\n      const n$ = content.querySelectorAll(\n        'style, form[action], [src], [href], [url], [style]');\n      for (let i = 0; i < n$.length; i++) {\n        const n = n$[i];\n        if (n.localName == 'style') {\n          Path.resolveUrlsInStyle(n, base);\n        } else {\n          Path.fixUrlAttributes(n, base);\n        }\n      }\n      Path.fixUrlsInTemplates(content, base);\n    },\n\n    resolveUrlsInStyle: function(style, linkUrl) {\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText: function(cssText, linkUrl) {\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls: function(text, linkUrl, regexp) {\n      return text.replace(regexp, function(m, pre, url, post) {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path._resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl: function(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return Path._resolveUrl(text, linkUrl);\n      }\n    },\n\n    _resolveUrl: function(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @param {!function(boolean, ?, string=)} callback\n     * @return {XMLHttpRequest}\n     */\n    load: function(url, callback) {\n      const request = new XMLHttpRequest();\n      if (flags.bust) {\n        url += '?' + Math.random();\n      }\n      request.open('GET', url, Xhr.async);\n      request.addEventListener('readystatechange', (e) => {\n        if (request.readyState === 4) {\n          // Servers redirecting an import can add a Location header to help us\n          // polyfill correctly.\n          let redirectedUrl = undefined;\n          try {\n            const locationHeader = request.getResponseHeader('Location');\n            if (locationHeader) {\n              // Relative or full path.\n              redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\n                location.origin + locationHeader : locationHeader;\n            }\n          } catch (e) {\n            console.error(e.message);\n          }\n          const isOk = ((request.status >= 200 && request.status < 300) ||\n            request.status === 304 || request.status === 0);\n          const resource = (request.response || request.responseText);\n          callback(!isOk, resource, redirectedUrl);\n        }\n      });\n      request.send();\n      return request;\n    }\n  };\n\n  /********************* loader *********************/\n  // This loader supports a dynamic list of urls\n  // and an oncomplete callback that is called when the loader is done.\n  // NOTE: The polyfill currently does *not* need this dynamism or the\n  // onComplete concept. Because of this, the loader could be simplified\n  // quite a bit.\n  class Loader {\n    constructor(onLoad, onComplete) {\n      this.cache = {};\n      this.onload = onLoad;\n      this.oncomplete = onComplete;\n      this.inflight = 0;\n      this.pending = {};\n    }\n\n    addNodes(nodes) {\n      // number of transactions to complete\n      this.inflight += nodes.length;\n      // commence transactions\n      for (let i = 0, l = nodes.length, n;\n        (i < l) && (n = nodes[i]); i++) {\n        this.require(n);\n      }\n      // anything to do?\n      this.checkDone();\n    }\n\n    addNode(node) {\n      // number of transactions to complete\n      this.inflight++;\n      // commence transactions\n      this.require(node);\n      // anything to do?\n      this.checkDone();\n    }\n\n    require(elt) {\n      const url = elt.src || elt.href;\n      // deduplication\n      if (!this.dedupe(url, elt)) {\n        // fetch this resource\n        this.fetch(url, elt);\n      }\n    }\n\n    dedupe(url, elt) {\n      if (this.pending[url]) {\n        // add to list of nodes waiting for inUrl\n        this.pending[url].push(elt);\n        // don't need fetch\n        return true;\n      }\n      let resource;\n      if (this.cache[url]) {\n        this.onload(url, elt, this.cache[url]);\n        // finished this transaction\n        this.tail();\n        // don't need fetch\n        return true;\n      }\n      // first node waiting for inUrl\n      this.pending[url] = [elt];\n      // need fetch (not a dupe)\n      return false;\n    }\n\n    fetch(url, elt) {\n      flags.log && console.log('fetch', url, elt);\n      if (!url) {\n        this.receive(url, elt, true, 'error: href must be specified');\n      } else if (url.match(/^data:/)) {\n        // Handle Data URI Scheme\n        const pieces = url.split(',');\n        const header = pieces[0];\n        let body = pieces[1];\n        if (header.indexOf(';base64') > -1) {\n          body = atob(body);\n        } else {\n          body = decodeURIComponent(body);\n        }\n        this.receive(url, elt, false, body);\n      } else {\n        Xhr.load(url, (error, resource, redirectedUrl) =>\n          this.receive(url, elt, error, resource, redirectedUrl));\n      }\n    }\n\n    /**\n     * @param {!string} url\n     * @param {!Element} elt\n     * @param {boolean} err\n     * @param {string=} resource\n     * @param {string=} redirectedUrl\n     */\n    receive(url, elt, err, resource, redirectedUrl) {\n      this.cache[url] = resource;\n      const $p = this.pending[url];\n      for (let i = 0, l = $p.length, p;\n        (i < l) && (p = $p[i]); i++) {\n        // If url was redirected, use the redirected location so paths are\n        // calculated relative to that.\n        this.onload(url, p, resource, err, redirectedUrl);\n        this.tail();\n      }\n      this.pending[url] = null;\n    }\n\n    tail() {\n      --this.inflight;\n      this.checkDone();\n    }\n\n    checkDone() {\n      if (!this.inflight) {\n        this.oncomplete();\n      }\n    }\n  }\n\n  /********************* importer *********************/\n\n  const stylesSelector = [\n    'style:not([type])',\n    'link[rel=stylesheet][href]:not([type])'\n  ].join(',');\n\n  const stylesInImportsSelector = [\n    `${IMPORT_SELECTOR} style:not([type])`,\n    `${IMPORT_SELECTOR} link[rel=stylesheet][href]:not([type])`\n  ].join(',');\n\n  const importsSelectors = [\n    IMPORT_SELECTOR,\n    stylesSelector,\n    'script:not([type])',\n    'script[type=\"application/javascript\"]',\n    'script[type=\"text/javascript\"]'\n  ].join(',');\n\n  /**\n   * @type {Function}\n   */\n  const MATCHES = Element.prototype.matches ||\n    Element.prototype.matchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.oMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\n  const scriptType = 'import-script';\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    constructor() {\n      this.documents = {};\n      // Make sure to catch any imports that are in the process of loading\n      // when this script is run.\n      const imports = document.querySelectorAll(IMPORT_SELECTOR);\n      for (let i = 0, l = imports.length; i < l; i++) {\n        whenElementLoaded(imports[i]);\n      }\n      // Observe only document head\n      new MutationObserver(this._onMutation.bind(this)).observe(document.head, {\n        childList: true\n      });\n\n      if (!useNative) {\n        this._loader = new Loader(\n          this._onLoaded.bind(this), this._onLoadedAll.bind(this)\n        );\n        whenDocumentReady().then(() => this._loadSubtree(document));\n      }\n    }\n\n    /**\n     * @param {!(HTMLElement|Document)} node\n     */\n    _loadSubtree(node) {\n      const nodes = node.querySelectorAll(IMPORT_SELECTOR);\n      // add these nodes to loader's queue\n      this._loader.addNodes(nodes);\n    }\n\n    _onLoaded(url, elt, resource, err, redirectedUrl) {\n      flags.log && console.log('loaded', url, elt);\n      // We've already seen a document at this url, return.\n      if (this.documents[url] !== undefined) {\n        return;\n      }\n      if (err) {\n        this.documents[url] = null;\n      } else {\n        // Generate a document from data.\n        const doc = this._makeDocument(resource, redirectedUrl || url);\n        // note, we cannot use MO to detect parsed nodes because\n        // SD polyfill does not report these as mutations.\n        this._loadSubtree(doc);\n        this.documents[url] = doc;\n      }\n    }\n\n    /**\n     * Creates a new document containing resource and normalizes urls accordingly.\n     * @param {string=} resource\n     * @param {string=} url\n     * @return {!HTMLElement}\n     */\n    _makeDocument(resource, url) {\n      const content = /** @type {HTMLElement} */\n        (document.createElement('import-content'));\n      content.style.display = 'none';\n      if (url) {\n        content.setAttribute('import-href', url);\n      }\n      if (resource) {\n        content.innerHTML = resource;\n      }\n\n      // Support <base> in imported docs. Resolve url and remove it from the parent.\n      const baseEl = /** @type {HTMLBaseElement} */ (content.querySelector('base'));\n      if (baseEl) {\n        url = Path.replaceAttrUrl(baseEl.getAttribute('href'), url);\n        baseEl.parentNode.removeChild(baseEl);\n      }\n      // This is specific to users of <dom-module> (Polymer).\n      // TODO(valdrin) remove this when importForElement is exposed.\n      const s$ = content.querySelectorAll('dom-module');\n      for (let i = 0, s; i < s$.length && (s = s$[i]); i++) {\n        s.setAttribute('assetpath',\n          Path.replaceAttrUrl(s.getAttribute('assetpath') || '', url));\n      }\n\n      const n$ = content.querySelectorAll(importsSelectors);\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        // Ensure we add load/error listeners before modifying urls or appending\n        // these to the main document.\n        whenElementLoaded(n);\n        Path.fixUrls(n, url);\n        if (n.localName === 'script') {\n          // NOTE: we override the type here, might need to keep track of original\n          // type and apply it to clone when running the script.\n          n.setAttribute('type', scriptType);\n        }\n      }\n      Path.fixUrlsInTemplates(content, url);\n      return content;\n    }\n\n    _onLoadedAll() {\n      Promise.all([\n        this._flatten(),\n        this._waitForStyles(),\n        this._runScripts()\n      ]).then(() => this._fireEvents());\n    }\n\n    /**\n     * @param {(HTMLElement|Document)=} element\n     */\n    _flatten(element) {\n      element = element || document;\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (element.querySelectorAll(IMPORT_SELECTOR));\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        n.import = this.documents[n.href];\n        if (n.import && !n.import.__firstImport) {\n          n.import.__firstImport = n;\n          this._flatten(n.import);\n          // If in the main document, observe for any imports added later.\n          if (element === document) {\n            // In IE/Edge, when imports have link stylesheets/styles, the cascading order\n            // isn't respected https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n            if (isIE || isEdge) {\n              this._cloneAndMoveStyles(n);\n            }\n            this._observe(n.import);\n          }\n          n.appendChild(n.import);\n        }\n      }\n    }\n\n    /**\n     * Replaces all the imported scripts with a clone in order to execute them.\n     * Updates the `currentScript`.\n     * @return {Promise} Resolved when scripts are loaded.\n     */\n    _runScripts() {\n      const s$ = document.querySelectorAll(`script[type=${scriptType}]`);\n      let promise = Promise.resolve();\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        promise = promise.then(() => {\n          const c = document.createElement('script');\n          // Listen for load/error events before adding the clone to the document.\n          // Catch failures, always return c.\n          const whenLoadedPromise = whenElementLoaded(c).catch(() => c);\n          // Update currentScript and replace original with clone script.\n          currentScript = c;\n\n          c.textContent = s.textContent;\n          if (s.src) {\n            c.setAttribute('src', s.getAttribute('src'));\n          }\n          s.parentNode.replaceChild(c, s);\n          // After is loaded, reset currentScript.\n          return whenLoadedPromise.then(() => currentScript = null);\n        });\n      }\n      return promise;\n    }\n\n    /**\n     * Waits for all the imported stylesheets/styles to be loaded.\n     * @return {Promise}\n     */\n    _waitForStyles() {\n      const s$ = document.querySelectorAll(stylesInImportsSelector);\n      const promises = [];\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        // Catch failures, always return s\n        promises.push(whenElementLoaded(s).catch(() => s));\n      }\n      return Promise.all(promises);\n    }\n\n    /**\n     * Clones styles and stylesheets links contained in imports and moves them\n     * as siblings of the root import link.\n     * @param {!HTMLLinkElement} importLink\n     */\n    _cloneAndMoveStyles(importLink) {\n      const n$ = importLink.import.querySelectorAll(stylesSelector);\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        // Cannot use `n.cloneNode(true)` as it won't work for link stylesheets\n        // with a parentNode https://gist.github.com/valdrinkoshi/4a92f97169a6fc41a1852f23211b8c4e\n        const clone = document.createElement(n.localName);\n        // Ensure we listen for load/error for this element.\n        whenElementLoaded(clone);\n        // Copy textContent and attributes.\n        clone.textContent = n.textContent;\n        for (let j = 0, ll = n.attributes.length; j < ll; j++) {\n          clone.setAttribute(n.attributes[j].name, n.attributes[j].value);\n        }\n\n        // Remove old, add new.\n        n.parentNode.removeChild(n);\n        importLink.parentNode.insertBefore(clone, importLink);\n      }\n    }\n\n    /**\n     * Fires load/error events for loaded imports.\n     */\n    _fireEvents() {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (document.querySelectorAll(IMPORT_SELECTOR));\n      // Inverse order to have events firing bottom-up.\n      for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n        // Don't fire twice same event.\n        if (!n.__fired) {\n          n.__fired = true;\n          const eventType = n.import ? 'load' : 'error';\n          flags.log && console.warn('fire', eventType, n.href);\n          // Ensure the load promise is setup before firing the event.\n          whenElementLoaded(n);\n          n.dispatchEvent(new CustomEvent(eventType, {\n            bubbles: false,\n            cancelable: false,\n            detail: undefined\n          }));\n        }\n      }\n    }\n\n    _observe(element) {\n      if (element.__importObserver) {\n        return;\n      }\n      element.__importObserver = new MutationObserver(this._onMutation.bind(this));\n      element.__importObserver.observe(element, {\n        childList: true,\n        subtree: true\n      });\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    _onMutation(mutations) {\n      const promises = [];\n      for (let j = 0, m; j < mutations.length && (m = mutations[j]); j++) {\n        for (let i = 0, l = m.addedNodes ? m.addedNodes.length : 0; i < l; i++) {\n          const n = /** @type {Element} */ (m.addedNodes[i]);\n          if (n && isImportLink(n)) {\n            promises.push(whenElementLoaded(n));\n            if (!useNative) {\n              this._loader.addNode(n);\n            }\n          }\n        }\n      }\n      if (promises.length) {\n        // Ensure we update isImporting.\n        isImporting = true;\n        Promise.all(promises).then(() => isImporting = false);\n      }\n    }\n\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  function isImportLink(node) {\n    return node.nodeType === Node.ELEMENT_NODE && MATCHES.call(node, IMPORT_SELECTOR);\n  }\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!Element} element\n   * @return {Promise}\n   */\n  function whenElementLoaded(element) {\n    if (!element.__loadPromise) {\n      element.__loadPromise = new Promise((resolve, reject) => {\n        if (isElementLoaded(element)) {\n          resolve(element);\n        } else {\n          element.addEventListener('load', () => resolve(element));\n          element.addEventListener('error', () => reject(element));\n        }\n      });\n    }\n    return element.__loadPromise;\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {boolean}\n   */\n  function isElementLoaded(element) {\n    let isLoaded = false;\n    if (useNative && isImportLink(element) && element.import &&\n      element.import.readyState !== 'loading') {\n      isLoaded = true;\n    } else if (isIE && element.localName === 'style') {\n      // NOTE: IE does not fire \"load\" event for styles that have already\n      // loaded. This is in violation of the spec, so we try our hardest to\n      // work around it.\n      // If there's not @import in the textContent, assume it has loaded\n      if (element.textContent.indexOf('@import') == -1) {\n        isLoaded = true;\n        // if we have a sheet, we have been parsed\n      } else if (element.sheet) {\n        isLoaded = true;\n        const csr = element.sheet.cssRules;\n        // search the rules for @import's\n        for (let i = 0, l = csr ? csr.length : 0; i < l && isLoaded; i++) {\n          if (csr[i].type === CSSRule.IMPORT_RULE) {\n            // if every @import has resolved, fake the load\n            isLoaded = Boolean(csr[i].styleSheet);\n          }\n        }\n      }\n    } else if (element.localName === 'script' && !element.src) {\n      // Needed by safari\n      // TODO(valdrin) add more info.\n      isLoaded = true;\n    }\n    return isLoaded;\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n\n  const isIE = /Trident/.test(navigator.userAgent);\n  const isEdge = !isIE && /Edge\\/\\d./i.test(navigator.userAgent);\n  // Used to ensure synchronous callback execution in whenReady. Updated to true\n  // when new imports are found, and to false when all imports are done loading.\n  let isImporting = true;\n\n  /**\n   * Calls the callback when all HTMLImports in the document at call time\n   * (or at least document ready) have loaded.\n   * @param {function()=} callback\n   * @return {Promise}\n   */\n  function whenReady(callback) {\n    // Ensure callback is executed synchronously if HTMLImports is ready.\n    if (!isImporting) {\n      callback && callback();\n      return Promise.resolve();\n    }\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    return whenDocumentReady().then(watchImportsLoad).then(() => {\n      isImporting = false;\n      callback && callback();\n    });\n  }\n\n\n  /**\n   * Resolved when document is in ready state.\n   * @returns {Promise}\n   */\n  function whenDocumentReady() {\n    return new Promise((resolve) => {\n      if (document.readyState !== 'loading') {\n        resolve();\n      } else {\n        document.addEventListener('readystatechange', () => {\n          if (document.readyState !== 'loading') {\n            resolve();\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Resolved when all imports are done loading.\n   * @returns {Promise}\n   */\n  function watchImportsLoad() {\n    let imports = document.querySelectorAll(IMPORT_SELECTOR);\n    const promises = [];\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      // Skip nested imports.\n      if (MATCHES.call(imp, `${IMPORT_SELECTOR} ${IMPORT_SELECTOR}`)) {\n        continue;\n      }\n      // Capture failures, always return imp.\n      promises.push(whenElementLoaded(imp).catch(() => imp));\n    }\n    // Return aggregated info.\n    return Promise.all(promises);\n  }\n\n  new Importer();\n\n  // Fire the 'HTMLImportsLoaded' event when imports in document at load time\n  // have loaded. This event is required to simulate the script blocking\n  // behavior of native imports. A main document script that needs to be sure\n  // imports have loaded should wait for this event.\n  whenReady(() =>\n    document.dispatchEvent(new CustomEvent('HTMLImportsLoaded', {\n      cancelable: true,\n      bubbles: true,\n      detail: undefined\n    })));\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n\n})(window.HTMLImports = (window.HTMLImports || {}));\n"]}