{"version":3,"sources":["src/css-parse.js"," [synthetic:util/global] ","src/style-settings.js","src/common-regex.js","src/unscoped-style-handler.js","src/style-util.js","src/style-transformer.js","src/style-info.js","src/style-properties.js","src/style-placeholder.js","src/style-cache.js","src/document-watcher.js","src/template-map.js","src/apply-shim-utils.js","src/scoping-shim.js","src/common-utils.js","entrypoints/scoping-shim.js"],"names":["$jscomp.global","constructor","StyleNode","parse","text","replace","RX$$module$src$css_parse.comments","RX$$module$src$css_parse.port","parseCss","root","length","n","i","l","OPEN_BRACE","p","previous","push","CLOSE_BRACE","node","t","substring","trim","ss","_expandUnicodeEscapes","RX$$module$src$css_parse.multipleSpaces","lastIndexOf","s","indexOf","AT_START","MEDIA_START","types$$module$src$css_parse.MEDIA_RULE","match","RX$$module$src$css_parse.keyframesRule","types$$module$src$css_parse.KEYFRAMES_RULE","split","pop","VAR_START","types$$module$src$css_parse.MIXIN_RULE","types$$module$src$css_parse.STYLE_RULE","r$","r","code","repeat","stringify","preserveProperties","cssText","rules","RX$$module$src$css_parse.customProp","RX$$module$src$css_parse.mixinProp","RX$$module$src$css_parse.mixinApply","RX$$module$src$css_parse.varApply","STYLE_RULE","KEYFRAMES_RULE","MEDIA_RULE","MIXIN_RULE","comments","port","customProp","mixinProp","mixinApply","varApply","keyframesRule","multipleSpaces","nativeShadow","window","nativeCssVariables_","calcCssVariables","settings","navigator","userAgent","CSS","supports","ShadyCSS","undefined","nativeCss","nativeCssVariables","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","MEDIA_MATCH","BRACKETED","styleTextSet","Set","toCssText","callback","forEachRule","rulesForStyle","style","textContent","isKeyframesSelector","rule","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","type","matchMedia","matches","applyCss","moniker","target","contextNode","document","createElement","setAttribute","applyStyle","lastHeadApplyNode","applyStylePlaceHolder","placeHolder","createComment","scope","head","insertBefore","after","firstChild","nextSibling","compareDocumentPosition","position","Node","DOCUMENT_POSITION_PRECEDING","findMatchingParen","start","level","processVariableAndFallback","str","end","inner","prefix","suffix","comma","value","fallback","setElementClassRaw","element","call","getIsExtends","localName","typeExtension","is","getAttribute","extends","splitSelectorList","selector","parts","part","slice","templateHasBuiltCss","template","_isBuilt","hasAttribute","StyleTransformer","domAddScope","$jscompDefaultExport","_transformDom","fn","startNode","transformer","nodeType","ELEMENT_NODE","c$","childNodes","content","_content","children","shouldRemoveScope","classList","remove","SCOPE_NAME","add","c","CLASS","newValue","domReplaceScope","oldScope","newScope","domRemoveScope","elementStyles","styleRules","cssBuildType","css","ext","hostScope","_calcHostScope","CSS_CLASS_PREFIX","isScoped","transformedSelector","_transformRuleCss","self","_transformComplexSelector","p$","filter","join","COMPLEX_SELECTOR_SEP","_twiddleNthPlus","NTH","m","inside","_preserveMatchesPseudo","MATCHES","index","Error","input","MATCHES_REPLACEMENT","_replaceMatchesPseudo","reduce","acc","cur","idx","stop","isNth","test","isMatches","SLOTTED_START","HOST","SIMPLE_SELECTOR_SEP","info","_transformCompoundSelector","combinator","slottedIndex","SLOTTED","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","DIR_PAREN","before","dir","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","host","typeSelector","SELECTOR_NO_MATCH","normalizeRootSelector","ROOT","_transformDocumentSelector","SCOPE_DOC_SELECTOR","$jscomp.global.Object.defineProperties","RegExp","StyleInfo","ast","placeholder","ownStylePropertyNames","overrideStyleProperties","customStyle","scopeSelector","styleProperties","get","set","styleInfo","_getStyleRules","prototype","matchesSelector","method","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","IS_IE","StyleProperties","decorateStyles","props","keyframes","ruleIndex","decorateRule","propertyInfo","exec","name","onKeyframesRule","_keyframes","names","properties","collectProperties","hasProperties","Object","assign","any","valueForProperty","property","valueForProperties","propertyValue","lastIndex","colon","pp","propertyDataFromStyles","o","selectorToMatch","parseInt","key","whenHostOrRootRule","cssBuild","parsedSelector","isRoot","isHost","hostAndRootPropertiesForScope","hostProps","rootProps","_element","transformStyles","hostSelector","hostRx","HOST_PREFIX","rxHostSelector","HOST_SUFFIX","StyleInfo$$module$src$style_info.get","keyframeTransforms","_elementKeyframeTransforms","output","hasAnimations","keyframeNamesToTransform","keyframe","transform","keyframesRules","keyframesNameRx","transformedKeyframesName","scopeId","_keyframesRuleTransformer","applyCustomStyle","XSCOPE_NAME","placeholderMap","ce","origDefine","wrappedDefine","clazz","options","StyleCache","cache","store","tagname","styleElement","list","typeMax","shift","flush","getCurrentScope","classes","Array","from","getOwnerScope","ownerRoot","getRootNode","ownerDocument","handler","mxns","x","mxn","documentElement","addedNodes","currentScope","ShadowRoot","j","unscopedNodes","unscopedNode","scopeForPreviouslyUnscopedNode","observer","MutationObserver","observe","childList","subtree","delayedStart","body","requestAnimationFrame","readyState","listener","removeEventListener","addEventListener","takeRecords","module$src$document_watcher.flush","templateMap","promise","Promise","resolve","invalidate","elementName","templateIsValid","startValidatingTemplate","_validating","then","styleCache","ScopingShim","_scopeCounter","_documentOwner","_documentOwnerStyleInfo","StyleInfo$$module$src$style_info.set","_elementsHaveApplied","_customStyleInterface","_applyShim","?.prototype","getStyleAst","styleAstToString","prepareTemplate","prepareTemplateDom","prepareTemplateStyles","_prepared","querySelector","styleTextParts","styles","querySelectorAll","scopingAttribute","has","newStyle","cloneNode","appendChild","parentNode","removeChild","__cssBuild","_ensure","hasMixins","_cssBuild","ownPropertyNames","shadowroot","_style","_ownPropertyNames","_domPrepared","_ensureCustomStyleInterface","CustomStyleInterface","transformCustomStyleForDocument","flushCustomStyles","_ensureApplyShim","ApplyShim","customStyles","_revalidateCustomStyleApplyShim","_updateProperties","_applyCustomStyles","styleDocument","overrideProps","_isRootOwner","removeProperty","setProperty","shadowRoot","entry","pn","cachedStyle","cacheEntry","oldScopeSelector","cachedScopeSelector","id","applyElementStyle","v","_styleOwnerForNode","owner","ownerStyleInfo","create","hostAndRootProps","propertiesMatchingHost","propertyData","overrides","reify","getOwnPropertyNames","styleSubtree","shadowChildren","documentRule","_transformRule","getComputedStyleValue","getComputedStyle","getPropertyValue","setElementClass","classString","scopeName","classAttr","k$","_styleInfoForNode","scopeNode","unscopeNode","scopeForNode","currentScopeForNode","defineProperties","scopingShim","elementExtends"],"mappings":"A;;;;;;;;;aAeA,IAAA,CAAA,CC4BAA,GAb2B,WAAlB,EAAC,MAAO,OAAR,EAAiC,MAAjC,GAa0B,IAb1B,CAa0B,IAb1B,CAEe,WAAlB,EAAC,MAAO,OAAR,EAA2C,IAA3C,EAAiC,MAAjC,CAAmD,MAAnD,CAW6B,IDxBjCC,SADIC,EACO,EAAG,CAIZ,IAAA,IAAA,CAFA,IAAA,MAEA,CAFgB,CAQhB,KAAA,MAAA,CAFA,IAAA,OAEA,CAJA,IAAA,SAIA,CAJmB,IAQnB,KAAA,QAAA,CAFA,IAAA,cAEA,CAFwB,EAIxB,KAAA,OAAA,CAAiB,CAAA,CAEjB,KAAA,KAAA,CAAe,CAMf,KAAA,eAAA,CAFA,IAAA,SAEA,CAJA,IAAA,cAIA,CAJwB,EApBZ;AAmCTC,QAASA,EAAK,CAACC,CAAD,CAAO,CAC1BA,CAAA,CAAaA,CAUNC,QAAA,CAAgBC,EAAhB,CAA6B,EAA7B,CAAAD,QAAA,CAAyCE,EAAzC,CAAkD,EAAlD,CATAC,KAAAA,EAAAA,EAAAA,CAAaJ,EAAAA,CAAbI,CAkBHC,EAAO,IAAIP,CACfO,EAAA,MAAA,CAAgB,CAChBA,EAAA,IAAA,CAAcL,CAAAM,OAEd,KADA,IAAIC,EAAIF,CAAR,CACSG,EAAI,CADb,CACgBC,EAAIT,CAAAM,OAApB,CAAiCE,CAAjC,CAAqCC,CAArC,CAAwCD,CAAA,EAAxC,CACE,GAuKeE,GAvKf,GAAIV,CAAA,CAAKQ,CAAL,CAAJ,CAA4B,CACrBD,CAAA,MAAL,GACEA,CAAA,MADF,CACe,EADf,CAGA,KAAII,EAAIJ,CAAR,CACIK,EAAWD,CAAA,MAAA,CAAWA,CAAA,MAAAL,OAAX,CAA+B,CAA/B,CAAXM,EAAgD,IACpDL,EAAA,CAAI,IAAIT,CACRS,EAAA,MAAA,CAAaC,CAAb,CAAiB,CACjBD,EAAA,OAAA,CAAcI,CACdJ,EAAA,SAAA,CAAgBK,CAChBD,EAAA,MAAAE,KAAA,CAAgBN,CAAhB,CAV0B,CAA5B,IAwKgBO,GA7JT,GAAId,CAAA,CAAKQ,CAAL,CAAJ,GACLD,CAAA,IACA,CADWC,CACX,CADe,CACf,CAAAD,CAAA,CAAIA,CAAA,OAAJ,EAAmBF,CAFd,CAlCT,OAAOD,EAAA,CAuCAC,CAvCA,CAAoBL,CAApB,CAFmB;AAkD5BI,QAASA,GAAQ,CAACW,CAAD,CAAOf,CAAP,CAAa,CAC5B,IAAIgB,EAAIhB,CAAAiB,UAAA,CAAeF,CAAA,MAAf,CAA8BA,CAAA,IAA9B,CAA4C,CAA5C,CACRA,EAAA,cAAA,CAAwBA,CAAA,QAAxB,CAA0CC,CAAAE,KAAA,EACtCH,EAAA,OAAJ,GAEEC,CASA,CATIhB,CAAAiB,UAAA,CADKF,CAAA,SAAAI,CAAmBJ,CAAA,SAAA,IAAnBI,CAA6CJ,CAAA,OAAA,MAClD,CAAmBA,CAAA,MAAnB,CAAmC,CAAnC,CASJ,CARAC,CAQA,CARII,EAAA,CAAsBJ,CAAtB,CAQJ,CAPAA,CAOA,CAPIA,CAAAf,QAAA,CAAUoB,EAAV,CAA6B,GAA7B,CAOJ,CAJAL,CAIA,CAJIA,CAAAC,UAAA,CAAYD,CAAAM,YAAA,CAAc,GAAd,CAAZ,CAAiC,CAAjC,CAIJ,CAHIC,CAGJ,CAHQR,CAAA,eAGR,CAHiCA,CAAA,SAGjC,CAHoDC,CAAAE,KAAA,EAGpD,CAFAH,CAAA,OAEA,CAF0C,CAE1C,GAFkBQ,CAAAC,QAAA,CAmJLC,GAnJK,CAElB,CAAIV,CAAA,OAAJ,CACiC,CAA/B,GAAIQ,CAAAC,QAAA,CA+IUE,QA/IV,CAAJ,CACEX,CAAA,KADF,CACiBY,EADjB,CAEWJ,CAAAK,MAAA,CAAQC,EAAR,CAFX,GAGEd,CAAA,KACA,CADee,CACf,CAAAf,CAAA,cAAA,CACEA,CAAA,SAAAgB,MAAA,CAAuBV,EAAvB,CAAAW,IAAA,EALJ,CADF,CAUIjB,CAAA,KAVJ,CAS+B,CAA7B,GAAIQ,CAAAC,QAAA,CAsIQS,IAtIR,CAAJ,CACiBC,EADjB,CAGiBC,EAvBrB,CA4BA,IADIC,CACJ,CADSrB,CAAA,MACT,CACE,IADM,IACGP,EAAI,CADP,CACUC,EAAI2B,CAAA9B,OADd,CACyB+B,CAA/B,CACG7B,CADH,CACOC,CADP,GACc4B,CADd,CACkBD,CAAA,CAAG5B,CAAH,CADlB,EAC0BA,CAAA,EAD1B,CAEEJ,EAAA,CAASiC,CAAT,CAAYrC,CAAZ,CAGJ;MAAOe,EArCqB,CA8C9BK,QAASA,GAAqB,CAACG,CAAD,CAAI,CAChC,MAAOA,EAAAtB,QAAA,CAAU,uBAAV,CAAmC,QAAQ,CAAA,CAAA,CAAA,CAAA,CAAG,CAC/CqC,CAAAA,CAAO,CAEX,KADEC,CACF,CADW,CACX,CADeD,CAAAhC,OACf,CAAOiC,CAAA,EAAP,CAAA,CACED,CAAA,CAAO,GAAP,CAAaA,CAEf,OAAO,IAAP,CAAcA,CANqC,CAA9C,CADyB;AAkB3BE,QAASA,GAAS,CAACzB,CAAD,CAAO0B,CAAP,CAA2BzC,CAA3B,CAAsC,CAAXA,CAAA,CAAA,IAAA,EAAA,GAAAA,CAAA,CAAO,EAAP,CAAAA,CAElD,KAAI0C,EAAU,EACd,IAAI3B,CAAA,QAAJ,EAAuBA,CAAA,MAAvB,CAAsC,CACpC,IAAIqB,EAAKrB,CAAA,MAAT,CACI,CAAA,IAAAqB,CAAA,CAAAA,CAAA,CAgCFC,CAhCQ,CAAAM,CAgCJ,CAAM,CAAN,CAhCI,CAAA,CAAA,CAAA,EAiCGN,CAjCH,EAiCiBA,CAAA,SAjCjB,EAiCwE,CAjCxE,GAiCmCA,CAAA,SAAAb,QAAA,CAuD/BS,IAvD+B,CAjCnC,CAAV,IAAI,CAAJ,CAA+B,CACpBzB,CAAAA,CAAI,CAAb,KAD6B,IACbC,EAAI2B,CAAA9B,OADS,CACE+B,CAA/B,CACG7B,CADH,CACOC,CADP,GACc4B,CADd,CACkBD,CAAA,CAAG5B,CAAH,CADlB,EAC0BA,CAAA,EAD1B,CAEEkC,CAAA,CAAUF,EAAA,CAAUH,CAAV,CAAaI,CAAb,CAAiCC,CAAjC,CAHiB,CAA/B,IAMYD,EAAA,CAAqB,CAArB,CAAqB,CAAA,QAArB,EACR,CAmCN,CAnCM,CAAA,QAmCN,CADAC,CACA,CADqCA,CAS9BzC,QAAA,CACI2C,EADJ,CACmB,EADnB,CAAA3C,QAAA,CAEI4C,EAFJ,CAEkB,EAFlB,CARP,CAAA,CAAA,CAA6BH,CAkBtBzC,QAAA,CACI6C,EADJ,CACmB,EADnB,CAAA7C,QAAA,CAEI8C,EAFJ,CAEiB,EAFjB,CAtDO,CAGV,EADAL,CACA,CAHUA,CAEAxB,KAAA,EACV,IACEwB,CADF,CACY,IADZ,CACmBA,CADnB,CAC6B,IAD7B,CAXkC,CAiBlCA,CAAJ,GACM3B,CAAA,SAIJ,GAHEf,CAGF,EAHUe,CAAA,SAGV,CAHgD,MAGhD,EADAf,CACA,EADQ0C,CACR,CAAI3B,CAAA,SAAJ,GACEf,CADF,EACU,OADV,CALF,CASA,OAAOA,EA7BsD;AAwE7DgD,IAAAA,GAAYA,CAAZA,CACAC,EAAgBA,CADhBD,CAEAE,GAAYA,CAFZF,CAGAG,GAAYA,GAHZH,CAWAI,GAAUA,mCAXVJ,CAYAK,GAAMA,kBAZNL,CAaAM,GAAYA,mDAbZN,CAcAO,GAAWA,4DAdXP,CAeAQ,GAAYA,yCAfZR,CAgBAS,GAAUA,2CAhBVT,CAiBAU,GAAeA,mBAjBfV,CAkBAW,GAAgBA,M,CEtPX,IAAMC,EAAe,EAAEC,MAAA,SAAF,EAAwBA,MAAA,SAAA,MAAxB,CAArB,CACHC,CAKJC,SAASA,GAAgB,CAACC,CAAD,CAAW,CAEhCF,CAAA,CADEE,CAAJ,EAAgBA,CAAA,kBAAhB,CACwB,CAAA,CADxB,CASwBJ,CATxB,EASwC,EAASK,SAAAC,UAAAtC,MAAA,CAA0B,2BAA1B,CAAT,EACpCuC,CAAAN,MAAAM,IADoC,EACtBC,CAAAD,GAAAC,SADsB,EACN,CAAAD,GAAAC,SAAA,CAAa,YAAb,CAA2B,kBAA3B,CADM,CAVN,CAehCP,MAAAQ,SAAJ,EAAqDC,IAAAA,EAArD,GAAuBT,MAAAQ,SAAAE,UAAvB,CACET,CADF,CACwBD,MAAAQ,SAAAE,UADxB,CAEWV,MAAAQ,SAAJ,EACLN,EAAA,CAAiBF,MAAAQ,SAAjB,CAEA,CAAAR,MAAAQ,SAAA,CAAkBC,IAAAA,EAHb,EAKLP,EAAA,CAAiBF,MAAA,cAAjB,EAA4CA,MAAA,cAAA,MAA5C,CAMK,KAAMW,EAA4CV,C,CCpClD,IAAMW,EAAa,yHAAnB,CACMC,EAAc,sCADpB,CAEMC,GAAe,2BAFrB,CAGMC,GAAkB,sCAHxB,CAIMC,GAAc,cAJpB,CAMMC,GAAY,Y,CCHzB,IAAMC,GAAe,IAAIC,G,CCSlBC,QAASA,EAAU,CAACtC,CAAD,CAAQuC,CAAR,CAAkB,CAC1C,GAAI,CAACvC,CAAL,CACE,MAAO,EAEY,SAArB,GAAI,MAAOA,EAAX,GACEA,CADF,CL4Bc5C,CK3BJ,CAAM4C,CAAN,CADV,CAGIuC,EAAJ,EACEC,CAAA,CAAYxC,CAAZ,CAAmBuC,CAAnB,CAEF,OLwIc1C,GKxIP,CAAUG,CAAV,CHcI6B,CGdJ,CAVmC,CAiBrCY,QAASA,EAAa,CAACC,CAAD,CAAQ,CAC/B,CAACA,CAAA,WAAL,EAA4BA,CAAAC,YAA5B,GACED,CAAA,WADF,CLcctF,CKbU,CAAMsF,CAAAC,YAAN,CADxB,CAGA,OAAOD,EAAA,WAAP,EAA8B,IAJK,CAc9BE,QAASA,GAAmB,CAACC,CAAD,CAAO,CACxC,MAAO,CAAA,CAAQA,CAAA,OAAf,EACAA,CAAA,OAAA,KADA,GAC2B1D,CAFa,CAWnCqD,QAASA,EAAW,CAACpE,CAAD,CAAO0E,CAAP,CAA0BC,CAA1B,CAAiDC,CAAjD,CAAkE,CAC3F,GAAK5E,CAAL,CAAA,CAGA,IAAI6E,EAAY,CAAA,CAAhB,CACIC,EAAO9E,CAAA,KACX,IAAI4E,CAAJ,EACME,CADN,GACelE,EADf,CACiC,CAC7B,IAAImE,EAAa/E,CAAA,SAAAa,MAAA,CF1DViD,EE0DU,CACbiB,EAAJ,GAEOjC,MAAAiC,WAAA,CAAkBA,CAAA,CAAW,CAAX,CAAlB,CAAAC,QAFP,GAGIH,CAHJ,CAGgB,CAAA,CAHhB,EAF6B,CAU7BC,CAAJ,GAAa1D,EAAb,CACEsD,CAAA,CAAkB1E,CAAlB,CADF,CAEW2E,CAAJ,EACLG,CADK,GACI/D,CADJ,CAEL4D,CAAA,CAAsB3E,CAAtB,CAFK,CAGI8E,CAHJ,GAGa3D,EAHb,GAIL0D,CAJK,CAIO,CAAA,CAJP,CAOP,KADIxD,CACJ,CADSrB,CAAA,MACT,GAAU,CAAC6E,CAAX,CAAsB,CACXpF,CAAAA,CAAE,CAAGC,EAAAA,CAAE2B,CAAA9B,OAAhB,KAAK,IAAsB+B,CAA3B,CAA+B7B,CAA/B,CAAiCC,CAAjC,GAAwC4B,CAAxC,CAA0CD,CAAA,CAAG5B,CAAH,CAA1C,EAAkDA,CAAA,EAAlD,CACE2E,CAAA,CAAY9C,CAAZ,CAAeoD,CAAf,CAAkCC,CAAlC,CAAyDC,CAAzD,CAFkB,CAzBtB,CAD2F;AAyCtFK,QAASA,EAAQ,CAACtD,CAAD,CAAUuD,CAAV,CAAmBC,CAAnB,CAA2BC,CAA3B,CAAwC,CAY9D,IAAId,EAAwCe,QAAAC,cAAA,CAAuB,OAAvB,CAXNJ,EAYtC,EACEZ,CAAAiB,aAAA,CAAmB,OAAnB,CAboCL,CAapC,CAEFZ,EAAAC,YAAA,CAf6B5C,CAC7B6D,GAAA,CAeOlB,CAfP,CAAkBa,CAAlB,CAA0BC,CAA1B,CACA,OAcOd,EAjBuD,CAwBhE,IAAImB,EAAoB,IAOjBC,SAASA,GAAqB,CAACR,CAAD,CAAU,CACzCS,CAAAA,CAAcN,QAAAO,cAAA,CAAuB,wBAAvB,CAChBV,CADgB,CACN,GADM,CAIlB,KAAIW,EAAQR,QAAAS,KACZD,EAAAE,aAAA,CAAmBJ,CAAnB,EAHYF,CAAAO,CACVP,CAAA,YADUO,CACyB,IAErC,GAAyCH,CAAAI,WAAzC,CAEA,OADAR,EACA,CADoBE,CAPyB,CAgBxCH,QAASA,GAAU,CAAClB,CAAD,CAAQa,CAAR,CAAgBC,CAAhB,CAA6B,CACrDD,CAAA,CAASA,CAAT,EAAmBE,QAAAS,KAGnBX,EAAAY,aAAA,CAAoBzB,CAApB,CAFac,CAEb,EAF4BA,CAAAc,YAE5B,EADEf,CAAAc,WACF,CACKR,EAAL,CAIiBnB,CAAA6B,wBAAAC,CAA8BX,CAA9BW,CAJjB,GAKmBC,IAAAC,4BALnB,GAMIb,CANJ,CAMwBnB,CANxB,EACEmB,CADF,CACsBnB,CAN+B;AAuChDiC,QAASA,EAAiB,CAACtH,CAAD,CAAOuH,CAAP,CAAc,CAE7C,IADA,IAAIC,EAAQ,CAAZ,CACkB/G,EAAET,CAAAM,OAApB,CAAiCE,CAAjC,CAAqCC,CAArC,CAAwCD,CAAA,EAAxC,CACE,GAAgB,GAAhB,GAAIR,CAAA,CAAKQ,CAAL,CAAJ,CACEgH,CAAA,EADF,KAEO,IAAgB,GAAhB,GAAIxH,CAAA,CAAKQ,CAAL,CAAJ,EACW,CADX,GACD,EAAEgH,CADD,CAEH,MAAOhH,EAIb,OAAQ,EAXqC,CAkBxCiH,QAASA,GAA0B,CAACC,CAAD,CAAMxC,CAAN,CAAgB,CAExD,IAAIqC,EAAQG,CAAAlG,QAAA,CAAY,MAAZ,CACZ,IAAe,EAAf,GAAI+F,CAAJ,CAEE,MAAOrC,EAAA,CAASwC,CAAT,CAAc,EAAd,CAAkB,EAAlB,CAAsB,EAAtB,CAGT,KAAIC,EAAML,CAAA,CAAkBI,CAAlB,CAAuBH,CAAvB,CAA+B,CAA/B,CAAV,CACIK,EAAQF,CAAAzG,UAAA,CAAcsG,CAAd,CAAsB,CAAtB,CAAyBI,CAAzB,CACRE,EAAAA,CAASH,CAAAzG,UAAA,CAAc,CAAd,CAAiBsG,CAAjB,CAETO,EAAAA,CAASL,EAAA,CAA2BC,CAAAzG,UAAA,CAAc0G,CAAd,CAAoB,CAApB,CAA3B,CAAmDzC,CAAnD,CACT6C,EAAAA,CAAQH,CAAApG,QAAA,CAAc,GAAd,CAEZ,OAAe,EAAf,GAAIuG,CAAJ,CAES7C,CAAA,CAAS2C,CAAT,CAAiBD,CAAA1G,KAAA,EAAjB,CAA+B,EAA/B,CAAmC4G,CAAnC,CAFT,CAOO5C,CAAA,CAAS2C,CAAT,CAFKD,CAAA3G,UAAA,CAAgB,CAAhB,CAAmB8G,CAAnB,CAAA7G,KAAA8G,EAEL,CADQJ,CAAA3G,UAAA,CAAgB8G,CAAhB,CAAwB,CAAxB,CAAA7G,KAAA+G,EACR,CAAkCH,CAAlC,CAtBiD,CA6BnDI,QAASA,EAAkB,CAACC,CAAD,CAAUH,CAAV,CAAiB,CHlOtCpE,CGoOX,CACEuE,CAAA7B,aAAA,CAAqB,OAArB,CAA8B0B,CAA9B,CADF,CAGEnE,MAAA,SAAA,cAAA,aAAAuE,KAAA,CAAyDD,CAAzD,CAAkE,OAAlE,CAA2EH,CAA3E,CAL+C;AAa5CK,QAASA,EAAY,CAACF,CAAD,CAAU,CACpC,IAAIG,EAAYH,CAAA,UAAhB,CACaI,EAAgB,EAKzBD,EAAJ,CACgC,EADhC,CACMA,CAAA9G,QAAA,CAAkB,GAAlB,CADN,GAII+G,CACA,CADgBD,CAChB,CAAAE,CAAA,CAAML,CAAAM,aAAN,EAA8BN,CAAAM,aAAA,CAAqB,IAArB,CAA9B,EAA6D,EALjE,GAQED,CACA,CADsBL,CAADK,GACrB,CAAAD,CAAA,CAAiCJ,CAADO,QATlC,CAWA,OAAO,CAACF,GAAAA,CAAD,CAAKD,EAAAA,CAAL,CAlB6B,CAiD/BI,QAASA,GAAiB,CAACC,CAAD,CAAW,CAG1C,IAFA,IAAMC,EAAQ,EAAd,CACIC,EAAO,EADX,CAEStI,EAAI,CAAb,CAAqB,CAArB,EAAgBA,CAAhB,EAA0BA,CAA1B,CAA8BoI,CAAAtI,OAA9B,CAA+CE,CAAA,EAA/C,CAEE,GAAoB,GAApB,GAAIoI,CAAA,CAASpI,CAAT,CAAJ,CAAyB,CAEvB,IAAMmH,EAAML,CAAA,CAAkBsB,CAAlB,CAA4BpI,CAA5B,CAEZsI,EAAA,EAAQF,CAAAG,MAAA,CAAevI,CAAf,CAAkBmH,CAAlB,CAAwB,CAAxB,CAERnH,EAAA,CAAImH,CANmB,CAAzB,IAO2B,GAApB,GAAIiB,CAAA,CAASpI,CAAT,CAAJ,EACLqI,CAAAhI,KAAA,CAAWiI,CAAX,CACA,CAAAA,CAAA,CAAO,EAFF,EAILA,CAJK,EAIGF,CAAA,CAASpI,CAAT,CAIRsI,EAAJ,EACED,CAAAhI,KAAA,CAAWiI,CAAX,CAEF,OAAOD,EAvBmC,CA8BrCG,QAASA,EAAmB,CAACC,CAAD,CAAW,CAClB3E,IAAAA,EAA1B,GAAI2E,CAAAC,EAAJ,GACED,CAAAC,EADF,CACsBD,CAAAE,aAAA,CAAsB,WAAtB,CADtB,CAGA,OAAOF,EAAAC,EAJqC,C,CCpS9C,QAAME,EAAN,EAAA,EA6BEC,QAAA,GAAW,CAACtI,CAAD,CAAO6F,CAAP,CAAc,CAAzByC,IAAAA,EA+ZaC,CA7ZPvI,EAAA,cAAJ,CACEA,CAAA,cADF,CAC0B,IAD1B,CAMEwI,CAAA,CAAAA,CAAA,CAAmBxI,CAAnB,CAHWyI,QAAA,CAACzI,CAAD,CAAU,CACnBoH,CAAA,CAAapH,CAAb,CAAmB6F,CAAnB,EAA4B,EAA5B,CADmB,CAGrB,CARqB,CAgBzB2C,QAAA,EAAa,CAAbA,CAAa,CAACE,CAAD,CAAYC,CAAZ,CAAyB,CAChCD,CAAAE,SAAJ,GAA2BvC,IAAAwC,aAA3B,EACEF,CAAA,CAAYD,CAAZ,CAOF,IALII,CAKJ,CALkC,UAAzB,GAACJ,CAAAnB,UAAD,CAGPwB,CAACL,CAAAM,QAADD,EAAsBL,CAAAO,EAAtBF,EAA4CL,CAA5CK,YAHO,CAIPL,CAAAQ,SAJO,EAIeR,CAAAK,WACxB,CACE,IAAK,IAAItJ,EAAE,CAAX,CAAcA,CAAd,CAAgBqJ,CAAAvJ,OAAhB,CAA2BE,CAAA,EAA3B,CACE+I,CAAA,CAAAA,CAAA,CAAmBM,CAAA,CAAGrJ,CAAH,CAAnB,CAA0BkJ,CAA1B,CAXgC;AAqBtCvB,QAAA,EAAO,CAACA,CAAD,CAAUvB,CAAV,CAAiBsD,CAAjB,CAAoC,CAIzC,GAAItD,CAAJ,CAEE,GAAIuB,CAAAgC,UAAJ,CACMD,CAAJ,EACE/B,CAAAgC,UAAAC,OAAA,CA5ESC,aA4ET,CACA,CAAAlC,CAAAgC,UAAAC,OAAA,CAAyBxD,CAAzB,CAFF,GAIEuB,CAAAgC,UAAAG,IAAA,CA/ESD,aA+ET,CACA,CAAAlC,CAAAgC,UAAAG,IAAA,CAAsB1D,CAAtB,CALF,CADF,KAQO,IAAIuB,CAAAM,aAAJ,CAA0B,CAC/B,IAAI8B,EAAIpC,CAAAM,aAAA,CAAqB+B,EAArB,CACJN,EAAJ,CACMK,CADN,GAEQE,CACJ,CADeF,CAAAtK,QAAA,CAtFRoK,aAsFQ,CAAsB,EAAtB,CAAApK,QAAA,CAAkC2G,CAAlC,CAAyC,EAAzC,CACf,CDmHIsB,CCnHJ,CAA6BC,CAA7B,CAAsCsC,CAAtC,CAHJ,EDsHQvC,CC/GN,CAA6BC,CAA7B,EADgBoC,CAAA,CAAIA,CAAJ,CAAQ,GAAR,CAAc,EAC9B,EADiD,cACjD,CADuD3D,CACvD,CAT6B,CAdM,CAmC3C8D,QAAA,GAAe,CAAC3J,CAAD,CAAO4J,CAAP,CAAiBC,CAAjB,CAA2B,CAA1CF,IAAAA,EAuVapB,CArVPvI,EAAA,cAAJ,CACEA,CAAA,cADF,CAC0B,IAD1B,CAOEwI,CAAA,CAAAA,CAAA,CAAmBxI,CAAnB,CAJWyI,QAAA,CAACzI,CAAD,CAAU,CACnBoH,CAAA,CAAapH,CAAb,CAAmB4J,CAAnB,CAA6B,CAAA,CAA7B,CACAxC,EAAA,CAAapH,CAAb,CAAmB6J,CAAnB,CAFmB,CAIrB,CATsC,CAiB1CC,QAAA,GAAc,CAAC9J,CAAD,CAAO4J,CAAP,CAAiB,CAA/BE,IAAAA,EAsUavB,CApUPvI,EAAA,cAAJ,CACEA,CAAA,cADF,CAC0B,IAD1B,CAMEwI,CAAA,CAAAA,CAAA,CAAmBxI,CAAnB,CAHWyI,QAAA,CAACzI,CAAD,CAAU,CACnBoH,CAAA,CAAapH,CAAb,CAAmB4J,CAAnB,EAA+B,EAA/B,CAAmC,CAAA,CAAnC,CADmB,CAGrB,CAR2B;AAiB/BG,QAAA,EAAa,CAAC3C,CAAD,CAAU4C,CAAV,CAAsB7F,CAAtB,CAAgC,CAA7C4F,IAAAA,EAqTaxB,CArTbwB,CACME,EAAe7C,CAAA,WJlKVvE,EI0KT,EAAqC,OAArC,GAAoBoH,CAApB,CACEtI,CADF,CDhKYuC,CCiKA,CAAoB8F,CAApB,CAAgC7F,CAAhC,CADZ,EAGM,CACJ,CDiEUmD,CClEgB,CAAuBF,CAAvB,CAC1B,CAAAzF,CAAA,CAAUuI,EAAA,CAAAA,CAAA,CAASF,CAAT,CADL,CAAAvC,GACK,CADD,CAAAD,EACC,CAAwCrD,CAAxC,CAAV,CAA8D,MAJhE,CAMA,OAAOxC,EAAAxB,KAAA,EAfoC,CAsB7C+J,QAAA,GAAG,CAAHA,CAAG,CAACtI,CAAD,CAAQiE,CAAR,CAAesE,CAAf,CAAoBhG,CAApB,CAA8B,CAC/B,IAAIiG,EAAYC,EAAA,CAAoBxE,CAApB,CAA2BsE,CAA3B,CAChBtE,EAAA,CAA+BA,CAc/B,CACSyE,EADT,CAd+BzE,CAc/B,CAGS,EAfT,ODjLY3B,ECiLL,CAAoBtC,CAApB,CAA2B,QAAQ,CAAiB6C,CAAjB,CAAuB,CAC1DA,CAAA8F,EAAL,GACY9F,CAqCd,SApCI,CADUA,CAqCK+F,EApCf,CAqCFC,EAAA,CAzCSC,CAyCT,CAtCYjG,CAsCZ,CAzCSiG,CAyBeC,EAgBxB,CAtCkB9E,CAsClB,CAtCyBuE,CAsCzB,CArCE,CAAA3F,CAAA8F,EAAA,CAAgB,CAAA,CAFlB,CAIIpG,EAAJ,EACEA,CAAA,CAASM,CAAT,CAAeoB,CAAf,CAAsBuE,CAAtB,CAN6D,CAA1D,CAJwB,CAuBjCC,QAAA,GAAc,CAACxE,CAAD,CAAQsE,CAAR,CAAa,CACzB,MAAOA,EAAA,CAAM,MAAN,CAAatE,CAAb,CAAkB,GAAlB,CAAwBA,CADN,CA8B3B4E,QAAA,GAAiB,CAAjBA,CAAiB,CAAChG,CAAD,CAAOkE,CAAP,CAAoB9C,CAApB,CAA2BuE,CAA3B,CAAsC,CACrD,IAAIQ,EDmDQhD,ECnDH,CAA4BnD,CAAA,SAA5B,CAGT,IAAI,CDvMQD,ECuMP,CAA8BC,CAA9B,CAAL,CAA0C,CAC/BhF,CAAAA,CAAE,CAAX,KADwC,IAC1BC,EAAEkL,CAAArL,OADwB,CACbK,CAA3B,CAA+BH,CAA/B,CAAiCC,CAAjC,GAAwCE,CAAxC,CAA0CgL,CAAA,CAAGnL,CAAH,CAA1C,EAAkDA,CAAA,EAAlD,CACEmL,CAAA,CAAGnL,CAAH,CAAA,CAAQkJ,CAAAtB,KAAA,CAAiB,CAAjB,CAAuBzH,CAAvB,CAA0BiG,CAA1B,CAAiCuE,CAAjC,CAF8B,CAK1C,MAAOQ,EAAAC,OAAA,CAAU,QAAA,CAAC9C,CAAD,CAAU,CAAA,MAAA,CAAA,CAAQA,CAAR,CAApB,CAAA+C,KAAA,CAAwCC,EAAxC,CAT8C;AAgBvDC,QAAA,GAAe,CAACnD,CAAD,CAAW,CACxB,MAAOA,EAAA3I,QAAA,CAAiB+L,EAAjB,CAAsB,QAAA,CAACC,CAAD,CAAIpG,CAAJ,CAAUqG,CAAV,CAAqB,CACrB,EAA3B,CAAIA,CAAA1K,QAAA,CAAe,GAAf,CAAJ,CACE0K,CADF,CACWA,CAAAjM,QAAA,CAAe,KAAf,CAAsB,KAAtB,CADX,CAEoC,EAFpC,CAEWiM,CAAA1K,QAAA,CAAe,KAAf,CAFX,GAGE0K,CAHF,CAGWA,CAAAjM,QAAA,CAAe,MAAf,CAAuB,GAAvB,CAHX,CAKA,OAAO,GAAP,CAAW4F,CAAX,CAAe,GAAf,CAAmBqG,CAAnB,CAAyB,GANuB,CAA3C,CADiB,CAmB1BC,QAAA,GAAsB,CAACvD,CAAD,CAAW,CAI/B,IAFA,IAAM7C,EAAU,EAAhB,CACInE,CACJ,CAAQA,CAAR,CAAgBgH,CAAAhH,MAAA,CAAewK,EAAf,CAAhB,CAAA,CAA0C,CACxC,IAAM7E,EAAQ3F,CAAAyK,MAAd,CACM1E,EDlGIL,CCkGE,CAA4BsB,CAA5B,CAAsCrB,CAAtC,CACZ,IAAa,EAAb,GAAII,CAAJ,CACE,KAAU2E,MAAJ,CAAa1K,CAAA2K,MAAb,CAAwB,uBAAxB,CAAN,CAEIzD,CAAAA,CAAOF,CAAAG,MAAA,CAAexB,CAAf,CAAsBI,CAAtB,CAA4B,CAA5B,CACbiB,EAAA,CAAWA,CAAA3I,QAAA,CAAiB6I,CAAjB,CA0LW0D,QA1LX,CACXzG,EAAAlF,KAAA,CAAaiI,CAAb,CARwC,CAU1C,MAAO,CAACF,EAAAA,CAAD,CAAW7C,QAAAA,CAAX,CAdwB,CAyBjC0G,QAAA,GAAqB,CAAC7D,CAAD,CAAW7C,CAAX,CAAoB,CACvC,IAAM8C,EAAQD,CAAA7G,MAAA,CA2KUyK,QA3KV,CACd,OAAOzG,EAAA2G,OAAA,CAAe,QAAA,CAACC,CAAD,CAAMC,CAAN,CAAWC,CAAX,CAAmB,CAAA,MAAAF,EAAA,CAAMC,CAAN,CAAY/D,CAAA,CAAMgE,CAAN,CAAY,CAAZ,CAAZ,CAAlC,CAA8DhE,CAAA,CAAM,CAAN,CAA9D,CAFgC;AAUzC,CAAA,UAAA,EAAA,CAAA6C,QAAyB,CAAC9C,CAAD,CAAWhC,CAAX,CAAkBuE,CAAlB,CAA6B,CACpD,IAAI2B,EAAO,CAAA,CACXlE,EAAA,CAAWA,CAAA1H,KAAA,EAEX,KAAI6L,EAAQf,EAAAgB,KAAA,CAASpE,CAAT,CACRmE,EAAJ,GACEnE,CACA,CADWA,CAAA3I,QAAA,CAAiB+L,EAAjB,CAAsB,QAAA,CAACC,CAAD,CAAIpG,CAAJ,CAAU+B,CAAV,CAAoB,CAAA,MAAA,GAAA,CAAI/B,CAAJ,CAAQ,GAAR,CAAY+B,CAAA3H,QAAA,CAAc,KAAd,CAAqB,EAArB,CAAZ,CAAoC,GAApC,CAA1C,CACX,CAAA2I,CAAA,CAAWmD,EAAA,CAAqBnD,CAArB,CAFb,CAMA,KAAMqE,EAAYb,EAAAY,KAAA,CAAapE,CAAb,CAGlB,IAAIqE,CAAJ,CAAe,CACZ,IAAA,EAAsBd,EAAA,CAA4BvD,CAA5B,CAArBA,EAAA,CAAA,CAAA,EAAU7C,EAAA,CAAA,CAAA,QADC,CAGf6C,CAAA,CAAWA,CAAA3I,QAAA,CAAiBiN,EAAjB,CAAmCC,CAAnC,CAAuC,KAAvC,CACXvE,EAAA,CAAWA,CAAA3I,QAAA,CAAiBmN,EAAjB,CAAsC,QAAA,CAACnB,CAAD,CAAI1B,CAAJ,CAAOhJ,CAAP,CAAa,CACvDuL,CAAL,GACMO,CAGJ,CAHWC,EAAA,CAAgC/L,CAAhC,CAAmCgJ,CAAnC,CAAsC3D,CAAtC,CAA6CuE,CAA7C,CAGX,CAFA2B,CAEA,CAFOA,CAEP,EAFeO,CAAAP,KAEf,CADAvC,CACA,CADI8C,CAAAE,EACJ,CAAAhM,CAAA,CAAI8L,CAAArF,MAJN,CAMA,OAAOuC,EAAP,CAAWhJ,CAPiD,CAAnD,CAUP0L,EAAJ,GACErE,CADF,CACa6D,EAAA,CAA2B7D,CAA3B,CAAqC7C,CAArC,CADb,CAGIgH,EAAJ,GACEnE,CADF,CACamD,EAAA,CAAqBnD,CAArB,CADb,CAGA,OAAOA,EAlC6C,CAqCtD0E;QAAA,GAA0B,CAAC1E,CAAD,CAAW2E,CAAX,CAAuB3G,CAAvB,CAA8BuE,CAA9B,CAAyC,CAEjE,IAAIqC,EAAe5E,CAAApH,QAAA,CAAiBiM,EAAjB,CACW,EAA9B,EAAI7E,CAAApH,QAAA,CAAiB2L,CAAjB,CAAJ,CACEvE,CADF,CACa8E,EAAA,CAA4B9E,CAA5B,CAAsCuC,CAAtC,CADb,CAG4B,CAH5B,GAGWqC,CAHX,GAIE5E,CAJF,CAIahC,CAAA,CAAQ+G,EAAA,CAA8B/E,CAA9B,CAAwChC,CAAxC,CAAR,CACTgC,CALJ,CASIgF,EAAAA,CAAU,CAAA,CACM,EAApB,EAAIJ,CAAJ,GACED,CACA,CADa,EACb,CAAAK,CAAA,CAAU,CAAA,CAFZ,CAMA,IAAIA,CAAJ,CAAa,CACX,IAAAd,EAAO,CAAA,CACHc,EAAJ,GAEEhF,CAFF,CAEaA,CAAA3I,QAAA,CAAiB4N,EAAjB,CAAgC,QAAA,CAAC5B,CAAD,CAAI6B,CAAJ,CAAc,CAAA,MAAA,KAAA,CAAMA,CAAN,CAA9C,CAFb,CAFW,CAOblF,CAAA,CAAWA,CAAA3I,QAAA,CAAiB8N,EAAjB,CAA4B,QAAA,CAAC9B,CAAD,CAAI+B,CAAJ,CAAYC,CAAZ,CACrC,CAAA,MAAA,QAAA,CAASA,CAAT,CAAY,KAAZ,CAAkBD,CAAlB,CAAwB,IAAxB,CAA6BA,CAA7B,CAAmC,QAAnC,CAA4CC,CAA5C,CAA+C,IAA/C,CADS,CAEX,OAAO,CAACjG,MAAOY,CAAR,CAAkB2E,EAAAA,CAAlB,CAA8BT,KAAAA,CAA9B,CA5B0D,CA+BnEa,QAAA,GAAwB,CAAC/E,CAAD,CAAWhC,CAAX,CAAkB,CACpC+E,CAAAA,CAAK/C,CAAA7G,MAAA,CAAemM,EAAf,CACTvC,EAAA,CAAG,CAAH,CAAA,EAAS/E,CACT,OAAO+E,EAAAE,KAAA,CAAQqC,EAAR,CAHiC;AAO1CR,QAAA,GAAsB,CAAC9E,CAAD,CAAWuC,CAAX,CAAsB,CAC1C,IAAIc,EAAIrD,CAAAhH,MAAA,CAAeuM,EAAf,CAER,OAAA,CADIL,CACJ,CADY7B,CACZ,EADiBA,CAAA,CAAE,CAAF,CAAA/K,KAAA,EACjB,EADgC,EAChC,EACO4M,CAAA,CAAM,CAAN,CAAAlM,MAAA,CAAewM,EAAf,CAAL,CAcSxF,CAAA3I,QAAA,CAAiBkO,EAAjB,CAA6B,QAAQ,CAAClC,CAAD,CAAIoC,CAAJ,CAAUP,CAAV,CAAiB,CAC3D,MAAO3C,EAAP,CAAmB2C,CADwC,CAAtD,CAdT,CAEqBA,CAAA/L,MAAA,CAAYqM,EAAZ,CAAAE,CAAoC,CAApCA,CAEnB,GAAqBnD,CAArB,CACS2C,CADT,CAKSS,EAVb,CAyBS3F,CAAA3I,QAAA,CAAiBkN,CAAjB,CAAuBhC,CAAvB,CA5BiC,CA6C5CqD,QAAA,GAAqB,CAAChJ,CAAD,CAAO,CACtBA,CAAA,SAAJ,GAAyBiJ,EAAzB,GACEjJ,CAAA,SADF,CACqB,MADrB,CAD0B,CAS5B,CAAA,UAAA,EAAA,CAAAkJ,QAA0B,CAAC9F,CAAD,CAAW,CACnC,MAAIA,EAAAhH,MAAA,CAAeuL,CAAf,CAAJ,CAES,EAFT,CAGWvE,CAAAhH,MAAA,CAAe6L,EAAf,CAAJ,CACE,IAAA/B,EAAA,CAA+B9C,CAA/B,CAAyC+F,EAAzC,CADF,CAGEhB,EAAA,CAA8B/E,CAAA1H,KAAA,EAA9B,CAA+CyN,EAA/C,CAP0B,CAzZvCC,GAAA,OAAA,iBAAA,CAAA,CAAA,UAAA,CAAA,CAAA,EACM,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAavE,QAAA,EAAA,CACf,MAJeA,aAGA,CAAb,CADN,CAAA,CAqaA;IAAI2B,GAAM,yBAAV,CACI2C,GAAqB,oBADzB,CAEI7C,GAAuB,GAF3B,CAGIsB,GAAsB,wCAH1B,CAIIgB,GAAyB,SAJ7B,CAKIjB,EAAO,OALX,CAMIsB,GAAO,OANX,CAOIhB,GAAU,WAPd,CAQIP,GAAgB,IAAI2B,MAAJ,CAAW,IAAX,CAAgBpB,EAAhB,CAAuB,GAAvB,CARpB,CAYIU,GAAa,0CAZjB,CAcIN,GAAgB,gDAdpB,CAeIE,GAAY,2BAfhB,CAgBI1C,GAAmB,GAhBvB,CAiBI6C,GAAgB,GAjBpB,CAkBI1D,GAAQ,OAlBZ,CAmBI+D,GAAoB,kBAnBxB,CAoBMnC,GAAU,sCApBhB,CAuBA9C,EAAe,IAAIF,C,CCpbjBvJ,QA7BmBiP,EA6BR,CAACC,CAAD,CAAMC,CAAN,CAAmBC,CAAnB,CAAuD1G,CAAvD,CAAgF,CAEzF,IAAAwC,EAAA,CAAkBgE,CAAlB,EAAyB,IAEzB,KAAAC,EAAA,CAAmBA,CAAnB,EAAkC,IAElC,KAAAC,EAAA,CAA6BA,CAA7B,EAAsD,EAEtD,KAAAC,EAAA,CAA+B,IAM/B,KAAA3G,EAAA,CAAqBA,CAArB,EAAsC,EAMtC,KAAA4G,EAAA,CAFA,IAAAC,EAEA,CAJA,IAAAC,EAIA,CAJuB,IAhBkE,CAxB3FC,QAAO,EAAG,CAACvO,CAAD,CAAO,CACf,MAAIA,EAAJ,CACSA,CAAA,YADT,CAGS,IAJM,CAYjBwO,QAAO,GAAG,CAACxO,CAAD,CAAOyO,CAAP,CAAkB,CAE1B,MADAzO,EAAA,YACA,CADgByO,CADU,CAkC5B,CAAA,UAAA,EAAA,CAAAC,QAAc,EAAG,CACf,MAAO,KAAA1E,EADQ,CAKnB+D,EAAAY,UAAA,eAAA,CAAwCZ,CAAAY,UAAAD,E,CChDhBE,QAAA,GAAQ,CAAC/G,CAAD,CAAW,CACzC,IAAMgH,EAAS,IAAA7J,QAAT6J,EAAyB,IAAAD,gBAAzBC,EACJ,IAAAC,mBADID,EACuB,IAAAE,kBADvBF,EAEJ,IAAAG,iBAFIH,EAEqB,IAAAI,sBAC3B,OAAOJ,EAAP,EAAiBA,CAAAxH,KAAA,CAAY,IAAZ,CAAkBQ,CAAlB,CAJwB,CAO3C,IAAMqH,GAAQhM,SAAAC,UAAAtC,MAAA,CAA0B,SAA1B,CAId,SAAMsO,GAAN,EAAA,EAUEC,QAAA,GAAc,CAACxN,CAAD,CAAQ,CAAA,IACHyN,EAAQ,EADL,CACSC,EAAY,EADrB,CACyBC,EAAY,CHiB7CnL,EGhBZ,CAAsBxC,CAAtB,CAA6B,QAAQ,CAAC6C,CAAD,CAAO,CAC1C+K,CAAA,CAAkB/K,CAAlB,CAEAA,EAAA6G,MAAA,CAAaiE,CAAA,EACmB5N,EAAAA,CAAA8C,CAAAgL,EAAA9N,QAwElC,KADA,IAAIuJ,CACJ,CAAQA,CAAR,CLhHStH,EKgHG8L,KAAA,CAAqB/N,CAArB,CAAZ,CAAA,CAA4C,CAC1C,IAAIgO,EAAOzE,CAAA,CAAE,CAAF,CAGE,IAAb,GAAIA,CAAA,CAAE,CAAF,CAAJ,GA5E2DmE,CA6EzD,CAAMM,CAAN,CADF,CACgB,CAAA,CADhB,CAJ0C,CA5EA,CAA5C,CAKGC,QAAwB,CAACnL,CAAD,CAAO,CAChC6K,CAAAxP,KAAA,CAAe2E,CAAf,CADgC,CALlC,CASA7C,EAAAiO,EAAA,CAAmBP,CAEfQ,EAAAA,CAAQ,EACZ,KAAKrQ,IAAIA,CAAT,GAAc4P,EAAd,CACES,CAAAhQ,KAAA,CAAWL,CAAX,CAEF,OAAOqQ,EAjBa;AAqBtBN,QAAA,EAAY,CAAC/K,CAAD,CAAO,CACjB,GAAIgL,CAAAhL,CAAAgL,EAAJ,CAAA,CADiB,IAIbnD,EAAO,EAJM,CAIFyD,EAAa,EACRC,EAAAC,CAAuBxL,CAAvBwL,CAA6BF,CAA7BE,CACpB,GACE3D,CAAAyD,EAEA,CAFkBA,CAElB,CAAAtL,CAAA,MAAA,CAAgB,IAHlB,CAKA6H,EAAA3K,QAAA,CAAmC8C,CAkCC9C,cAM7BzC,QAAA,CLtGE6E,EKsGF,CAA8B,EAA9B,CAAA7E,QAAA,CL5GEwE,CK4GF,CACmB,EADnB,CAvCPe,EAAAgL,EAAA,CAAoBnD,CAXpB,CADiB,CAiBnB0D,QAAA,EAAiB,CAACvL,CAAD,CAAOsL,CAAP,CAAmB,CAClC,IAAIzD,EAAO7H,CAAAgL,EACX,IAAInD,CAAJ,CACE,IAAIA,CAAAyD,EAAJ,CAEE,MADAG,OAAAC,OAAA,CAAcJ,CAAd,CAA0BzD,CAAAyD,EAA1B,CACO,CAAA,CAAA,CAFT,CADF,IAKO,CAEDpO,CAAAA,CAAU8C,CAAA,cAGd,KAFA,IAAIwC,CAEJ,CAAQiE,CAAR,CLtFOxH,CKsFKgM,KAAA,CAAQ/N,CAAR,CAAZ,CAAA,CAA+B,CAE7BsF,CAAA,CAAQ9G,CAAC+K,CAAA,CAAE,CAAF,CAAD/K,EAAS+K,CAAA,CAAE,CAAF,CAAT/K,MAAA,EAER,IAAc,SAAd,GAAI8G,CAAJ,EAAqC,OAArC,GAA2BA,CAA3B,CACE8I,CAAA,CAAW7E,CAAA,CAAE,CAAF,CAAA/K,KAAA,EAAX,CAAA,CAA0B8G,CAE5BmJ,EAAA,CAAM,CAAA,CAPuB,CAS/B,MAAOA,EAdF,CAP2B;AAoEpCC,QAAA,EAAgB,CAAhBA,CAAgB,CAACC,CAAD,CAAWjB,CAAX,CAAkB,CAG5BiB,CAAJ,GAEIA,CAFJ,CAC8B,CAA5B,EAAIA,CAAA7P,QAAA,CAAiB,GAAjB,CAAJ,CACa8P,EAAA,CAAAA,CAAA,CAAwBD,CAAxB,CAAkCjB,CAAlC,CADb,CHqDU3I,EG9BG,CAAqC4J,CAArC,CAlBF7H,QAAQ,CAAC3B,CAAD,CAASG,CAAT,CAAgBC,CAAhB,CAA0BH,CAA1B,CAAkC,CACjD,GAAI,CAACE,CAAL,CACE,MAAOH,EAAP,CAAgBC,CAIlB,EAFIyJ,CAEJ,CAFoBH,CAAA,CALX3F,CAKW,CAAsB2E,CAAA,CAAMpI,CAAN,CAAtB,CAAoCoI,CAApC,CAEpB,GAAwC,SAAxC,GAAsBmB,CAAtB,CAI6B,oBAJ7B,GAIWA,CAJX,GAQEA,CARF,CAQkB,SARlB,EAEEA,CAFF,CAEkBH,CAAA,CATT3F,CASS,CAAsB2E,CAAA,CAAMnI,CAAN,CAAtB,EAAyCA,CAAzC,CAAmDmI,CAAnD,CAFlB,EAGEnI,CAOF,OAAOJ,EAAP,EAAiB0J,CAAjB,EAAkC,EAAlC,EAAwCzJ,CAhBS,CAkBxC,CAxBf,CA2BA,OAAOuJ,EAAP,EAAmBA,CAAAnQ,KAAA,EAAnB,EAAsC,EA9BN;AAkClCoQ,QAAA,GAAkB,CAAlBA,CAAkB,CAACD,CAAD,CAAWjB,CAAX,CAAkB,CAC9BvH,CAAAA,CAAQwI,CAAAtP,MAAA,CAAe,GAAf,CACZ,KAFkC,IAEzBvB,EAAE,CAFuB,CAEpBG,CAFoB,CAEjBsL,CAAjB,CAAoBzL,CAApB,CAAsBqI,CAAAvI,OAAtB,CAAoCE,CAAA,EAApC,CACE,GAAKG,CAAL,CAASkI,CAAA,CAAMrI,CAAN,CAAT,CAAoB,CLlLbkE,CKmLL8M,UAAA,CAA2B,CAE3B,IADAvF,CACA,CLrLKvH,CKoLD+L,KAAA,CAAoB9P,CAApB,CACJ,CACEA,CAAA,CAAIyQ,CAAA,CAAAA,CAAA,CAAsBhB,CAAA,CAAMnE,CAAA,CAAE,CAAF,CAAN,CAAtB,CAAmCmE,CAAnC,CADN,KAIE,IADIqB,CACA,CADQ9Q,CAAAa,QAAA,CAAU,GAAV,CACR,CAAW,EAAX,GAAAiQ,CAAJ,CAAkB,CAChB,IAAIC,EAAK/Q,CAAAM,UAAA,CAAYwQ,CAAZ,CACTC,EAAA,CAAKA,CAAAxQ,KAAA,EACLwQ,EAAA,CAAKN,CAAA,CAAAA,CAAA,CAAsBM,CAAtB,CAA0BtB,CAA1B,CAAL,EAAyCsB,CACzC/Q,EAAA,CAAIA,CAAAM,UAAA,CAAY,CAAZ,CAAewQ,CAAf,CAAJ,CAA4BC,CAJZ,CAOpB7I,CAAA,CAAMrI,CAAN,CAAA,CAAYG,CAAD,EAAMA,CAAAW,YAAA,CAAc,GAAd,CAAN,GAA6BX,CAAAL,OAA7B,CAAwC,CAAxC,CAETK,CAAAoI,MAAA,CAAQ,CAAR,CAAY,EAAZ,CAFS,CAGTpI,CAHS,EAGJ,EAjBW,CAoBtB,MAAOkI,EAAAgD,KAAA,CAAW,GAAX,CAvB2B;AAoFpC8F,QAAA,GAAsB,CAAChP,CAAD,CAAQwF,CAAR,CAAiB,CAAA,IACjCiI,EAAQ,EADyB,CAGjCwB,EAAI,EHjNIzM,EGmNZ,CAAsBxC,CAAtB,CAA6B,QAAQ,CAAC6C,CAAD,CAAO,CAGrCA,CAAAgL,EAAL,EACED,CAAA,CAAkB/K,CAAlB,CAKF,KAAIqM,EAAkBrM,CAAA+F,EAAlBsG,EAA8CrM,CAAA,eAC9C2C,EAAJ,EAAe3C,CAAAgL,EAAAM,EAAf,EAA+Ce,CAA/C,EACMlC,EAAAvH,KAAA,CAAqBD,CAArB,CAA8B0J,CAA9B,CADN,GAEId,CAAA,CAAuBvL,CAAvB,CAA6B4K,CAA7B,CAiUR,CA/TqB/D,CA+TrB,CA/TqB7G,CAAA6G,MA+TrB,CAFIuF,CAEJ,CAFQE,QAAA,CAASvR,CAAT,CAAa,EAAb,CAAiB,EAAjB,CAER,CA/TiCqR,CA+TjC,CAAKA,CAAL,CAAA,EA/TiCA,CA+TtB,CAAKA,CAAL,CAAX,EAAsB,CAAtB,EADQ,CACR,EADcrR,CACd,CADkB,EAlUd,CAV0C,CAA5C,CAiBG,IAjBH,CAiBS,CAAA,CAjBT,CAkBA,OAAO,CAACuQ,EAAYV,CAAb,CAAoB2B,IAAKH,CAAzB,CAvB8B;AAgCvCI,QAAA,GAAkB,CAACpL,CAAD,CAAQpB,CAAR,CAAcyM,CAAd,CAAwB/M,CAAxB,CAAkC,CAC7CM,CAAAgL,EAAL,EACED,CAAA,CAAkB/K,CAAlB,CAEF,IAAKA,CAAAgL,EAAAM,EAAL,CAAA,CAGI,IAAA,EH1DQzI,CG0Dc,CAAuBzB,CAAvB,CAArB4B,EAAAA,CAAA,CAAA,GAAID,EAAAA,CAAA,CAAA,EACL4C,EAAAA,CAAY3C,CAAA,CACd4C,EAAA,CAAgC5C,CAAhC,CAAoCD,CAApC,CADc,CAEd,MACF,KAAI2J,EAAiB1M,CAAA,eAArB,CACI2M,EAA6B,WAA7BA,GAAUD,CAAVC,EAA+D,MAA/DA,GAA4CD,CADhD,CAEIE,EAA6C,CAA7CA,GAASF,CAAA1Q,QAAA,CAAuB,OAAvB,CAAT4Q,EAAkD,CAACD,CAItC,QAAjB,GAAIF,CAAJ,GAEEE,CAEA,CAFSD,CAET,GAF6B/G,CAE7B,CAFyC,OAEzC,CAFmDA,CAEnD,EAFqG,EAErG,GAFiE+G,CAAA1Q,QAAA,CAAuB,MAAvB,CAEjE,CAAA4Q,CAAA,CAAS,CAACD,CAAV,EAA0D,CAA1D,GAAoBD,CAAA1Q,QAAA,CAAuB2J,CAAvB,CAJtB,CAMiB,SAAjB,GAAI8G,CAAJ,GACEE,CACA,CAD4B,WAC5B,GADSD,CACT,EAD8D,MAC9D,GAD2CA,CAC3C,CAAAE,CAAA,CAASA,CAAT,EAAmB,CAACD,CAFtB,CAIA,IAAKA,CAAL,EAAgBC,CAAhB,CAGIP,CAeJ,CAfsB1G,CAetB,CAdIiH,CAcJ,GAZO5M,CAAA+F,EAUL,GARE/F,CAAA+F,EAQF,CAPEC,EAAA,CFgJOlC,CEhJP,CACE9D,CADF,CFgJO8D,CE9ILoC,EAFF,CAGqClD,CFlIzC,CACS6C,EADT,CEkIyC7C,CFlIzC,CAGS,EE4HL,CAIE2C,CAJF,CAOF,EAAA0G,CAAA,CAAkBrM,CAAA+F,EAAlB,EAA8CJ,CAEhD,EAAAjG,CAAA,CAAS,CACP0D,EAAUiJ,CADH,CAEPO,EAAQA,CAFD,CAGPD,EAAQA,CAHD,CAAT,CAzCA,CAJkD;AAwDpDE,QAAA,GAA6B,CAACzL,CAAD,CAAQjE,CAAR,CAAe,CAAA,IACtC2P,EAAY,EAD0B,CACtBC,EAAY,EADU,CAGtCN,EAAWtP,CAAXsP,EAAoBtP,CAAA,WHzSZwC,EG0SZ,CAAsBxC,CAAtB,CAA6B,QAAQ,CAAC6C,CAAD,CAAO,CAE1CwM,EAAA,CAAwBpL,CAAxB,CAA+BpB,CAA/B,CAAqCyM,CAArC,CAA+C,QAAQ,CAAC5E,CAAD,CAAO,CAExDsC,EAAAvH,KAAA,CADUxB,CAAA4L,EACV,EAD4B5L,CAC5B,CAA8ByG,CAAAzE,EAA9B,CAAJ,GACMyE,CAAA+E,EAAJ,CACErB,CAAA,CAAuBvL,CAAvB,CAA6B8M,CAA7B,CADF,CAGEvB,CAAA,CAAuBvL,CAAvB,CAA6B+M,CAA7B,CAJJ,CAF4D,CAA9D,CAF0C,CAA5C,CAYG,IAZH,CAYS,CAAA,CAZT,CAaA,OAAO,CAACA,EAAWA,CAAZ,CAAuBD,EAAWA,CAAlC,CAjBmC;AAyB5CG,QAAA,GAAe,CAAfA,CAAe,CAACtK,CAAD,CAAU2I,CAAV,CAAsB1B,CAAtB,CAAqC,CAE9C,IAAA,EHtIQ/G,CGsIc,CAAuBF,CAAvB,CAAtB,CACAuK,EAAetH,EAAA,CADd,CAAA5C,GACc,CADV,CAAAD,EACU,CADf,CAMAoK,EAAS,IAAI9D,MAAJ,CLtXU+D,eKsXV,EAHQzK,CAAAO,QAAAmK,CACnB,IADmBA,CACZH,CAAA3J,MAAA,CAAmB,CAAnB,CAAuB,EAAvB,CADY8J,CACgB,KADhBA,CAEnBH,CACW,ELrXUI,iBKqXV,CAETnQ,EAAAA,CAAQoQ,CAAA,CAAc5K,CAAd,CAAA4C,EACZ,KAAIiI,EACFC,EAAA,CAAyCtQ,CAAzC,CAAgDyM,CAAhD,CACF,OAAOtE,EAAA,CAA+B3C,CAA/B,CAAwCxF,CAAxC,CAA+C,QAAQ,CAAC6C,CAAD,CAAO,CAvLrE,IAAI0N,EAAS,EAwLU1N,EAtLlBgL,EAAL,EACED,CAAA,CAqLqB/K,CArLrB,CAqLqBA,EAnLnBgL,EAAA9N,QAAJ,GACEwQ,CADF,CACW5B,EAAA,CAqKA7F,CArKA,CAkLYjG,CAlLYgL,EAAA9N,QAAxB,CAkLkBoO,CAlLlB,CADX,CAmLuBtL,EAhLvB,QAAA,CAAkB0N,CAiLhB,IAAI,CNlYGtP,CMkYP,EACI,CH1VM2B,EG0VL,CAA8BC,CAA9B,CADL,EAEIA,CAAA,QAFJ,CAEqB,CA3KvB,IAAI0N,EADA3G,CACA2G,CA8K6B1N,CA/KrB,QAEc,KAA1B,EA6KiCA,CA7K7B2N,EAAJ,GA6KiC3N,CA3K/B2N,EAFF,CLzNSvO,EK2NcoI,KAAA,CAAwBT,CAAxB,CAFvB,CAKA,IAwKiC/G,CAxK7B2N,EAAJ,CAIE,GAAqC,IAArC,EAoK+B3N,CApK3B4N,EAAJ,CAA2C,CAoKZ5N,CAnK7B4N,EAAA,CAAgC,EAChC,KAAKC,IAAIA,CAAT,GAkKmCL,EAlKnC,CACEM,CAIA,CA6JiCN,CAjKrB,CAAmBK,CAAnB,CAIZ,CAHAH,CAGA,CAHSI,CAAA,CAAU/G,CAAV,CAGT,CAAIA,CAAJ,GAAc2G,CAAd,GACE3G,CACA,CADQ2G,CACR,CA2JyB1N,CA3JzB4N,EAAAvS,KAAA,CAAmCwS,CAAnC,CAFF,CAPuC,CAA3C,IAYO,CAGL,IAAS7S,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAqJ6BgF,CArJT4N,EAAA9S,OAApB,CAA0D,EAAEE,CAA5D,CACE8S,CACA,CAmJiCN,CApJrB,CAoJexN,CApJI4N,EAAA,CAA8B5S,CAA9B,CAAnB,CACZ,CAAA+L,CAAA,CAAQ+G,CAAA,CAAU/G,CAAV,CAEV2G,EAAA,CAAS3G,CAPJ,CAwJwB/G,CA9IjC,QAAA,CAAkB0N,CA+IM1N,EA4ExB+F,EAAA,CA5EwB/F,CA4EG+F,EAA3B,EA5EwB/F,CA4E+B,SAEnDoB,EAAAA,CAAQ,GAARA,CA9EgDwI,CA+EhDvG,EAAAA,CHvLQF,EGuLA,CA/EYnD,CA6ET+F,EAEH,CACH/K;CAAAA,CAAE,CAAX,KALkD,IAKpCC,GAAEoI,CAAAvI,OALkC,CAKpBK,CAA9B,CAAkCH,CAAlC,CAAoCC,EAApC,GAA2CE,CAA3C,CAA6CkI,CAAA,CAAMrI,CAAN,CAA7C,EAAwDA,CAAA,EAAxD,CACEqI,CAAA,CAAMrI,CAAN,CAAA,CAAWG,CAAAiB,MAAA,CAjFiB+Q,CAiFjB,CAAA,CACThS,CAAAV,QAAA,CAlFkCyS,CAkFlC,CAAwB9L,CAAxB,CADS,CAETA,CAFS,CAED,GAFC,CAEKjG,CAnFM6E,EAqFxB,SAAA,CAAmBqD,CAAAgD,KAAA,CAAW,GAAX,CAzFI,CAJ8C,CAA9D,CAb2C,CAgCpDoH,QAAA,GAA0B,CAAUtQ,CAAV,CAAiByM,CAAjB,CAAgC,CACpDmE,CAAAA,CAAiB5Q,CAAAiO,EACrB,KAAIoC,EAAqB,EACzB,IAAI,CNtZKpP,CMsZT,EAAqB2P,CAArB,CAIE,IAJmC,IAI1B/S,EAAI,CAJsB,CAInBkD,EAAgB6P,CAAA,CAAe/S,CAAf,CAAhC,CACKA,CADL,CACS+S,CAAAjT,OADT,CAEKoD,CAFL,CAEqB6P,CAAA,CAAe,EAAE/S,CAAjB,CAFrB,CAE0C,CACnBkD,IAAAA,EAAAA,CAAAA,CAAe0L,EAAAA,CAiCxC5J,EAAAgO,EAAA,CAAuB,IAAI3E,MAAJ,CAAW,KAAX,CAAiBrJ,CAAA,cAAjB,CAAsC,WAAtC,CAAmD,GAAnD,CACvBA,EAAAiO,EAAA,CAAgCjO,CAAA,cAAhC,CAAwD,GAAxD,CAA8DkO,CAC9DlO,EAAA+F,EAAA,CAA2B/F,CAAA+F,EAA3B,EAAuD/F,CAAA,SACvDA,EAAA,SAAA,CAAmBA,CAAA+F,EAAAtL,QAAA,CACfuF,CAAA,cADe,CACQA,CAAAiO,EADR,CAnCfT,EAAA,CAAmBtP,CAAA,cAAnB,CAAA,CACIiQ,EAAA,CAA+BjQ,CAA/B,CAHoC,CAM5C,MAAOsP,EAfiD,CAwB1DW,QAAA,GAAyB,CAACjQ,CAAD,CAAgB,CACvC,MAAO,SAAQ,CAAChB,CAAD,CAAU,CACvB,MAAOA,EAAAzC,QAAA,CACHyD,CAAA8P,EADG,CAEH9P,CAAA+P,EAFG,CADgB,CADc;AA4IzCG,QAAA,GAAgB,CAACvO,CAAD,CAAQyL,CAAR,CAAoB,CAApC8C,IAAAA,EAgCatK,CAhCbsK,CACMjR,EH7hBQyC,CG6hBA,CAAwDC,CAAxD,CAEZA,EAAAC,YAAA,CHhjBYL,CGgjBQ,CAAoBtC,CAApB,CAA2B,QAAQ,CAAiB6C,CAAjB,CAAuB,CAC5E,IAAIyF,EAAMzF,CAAA,QAANyF,CAAwBzF,CAAA,cACxBA,EAAAgL,EAAJ,EAAyBhL,CAAAgL,EAAA9N,QAAzB,GASEuI,CAEA,CAFuDA,CRlXtDhL,QAAA,CACI2C,EADJ,CACmB,EADnB,CAAA3C,QAAA,CAEI4C,EAFJ,CAEkB,EAFlB,CQoXD,CAAA2C,CAAA,QAAA,CAAkB8L,EAAA,CAdX7F,CAcW,CAAwBR,CAAxB,CAA6B6F,CAA7B,CAXpB,CAF4E,CAA1D,CAHc,CA/hBtClC,EAAA,OAAA,iBAAA,CAAA,EAAA,UAAA,CAAA,CAAA,EACM,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAciF,QAAA,EAAA,CAChB,MAJgBA,SAGA,CAAd,CADN,CAAA,CA+jBA,KAAAvK,EAAe,IAAI4G,E,CCnlBnB,IAAM4D,EAAiB,EAAvB,CAsBMC,EAAKlQ,MAAA,eACX,IAAIkQ,CAAJ,EAAU,CP3BGnQ,CO2Bb,CAAyB,CAIvB,IAAMoQ,GAAaD,CAAA,OAUnBA,EAAA,OAAA,CAJsBE,QAAA,CAACvD,CAAD,CAAOwD,CAAP,CAAcC,CAAd,CAA0B,CAnB3CL,CAAA,CAoBoBpD,CApBpB,CAAL,GACEoD,CAAA,CAmBuBpD,CAnBvB,CADF,CJ0GcjK,EIzGkB,CAmBPiK,CAnBO,CADhC,CAqBEsD,GAAA5L,KAAA,CAAsD2L,CAAtD,CAA2DrD,CAA3D,CAAiEwD,CAAjE,CAAwEC,CAAxE,CAF8C,CAVzB,C,CC3BvBtU,QADmBuU,GACR,EAAgB,CAEzB,IAAAC,MAAA,CAAa,EAFY,CAgB3B,EAAA,UAAA,MAAA,CAAAC,QAAK,CAACC,CAAD,CAAUzD,CAAV,CAAsB0D,CAAtB,CAAoCpF,CAApC,CAAmD,CACtD,IAAIqF,EAAO,IAAAJ,MAAA,CAAWE,CAAX,CAAPE,EAA8B,EAClCA,EAAA5T,KAAA,CAAU,CAACiQ,EAAAA,CAAD,CAAa0D,aAAAA,CAAb,CAA2BpF,EAAAA,CAA3B,CAAV,CAlBoBsF,IAmBpB,CAAID,CAAAnU,OAAJ,EACEmU,CAAAE,MAAA,EAEF,KAAAN,MAAA,CAAWE,CAAX,CAAA,CAAsBE,CANgC,C,CCZvCG,QAAA,GAAQ,EAAG,EAoBvBC,QAASA,GAAe,CAAC1M,CAAD,CAAU,CAbvC,IAAI2M,EAAU,EAcW3M,EAbrBgC,UAAJ,CACE2K,CADF,CACYC,KAAAC,KAAA,CAYa7M,CAZFgC,UAAX,CADZ,CAayBhC,CAbzB,WAE8BtE,OAAA,WAF9B,EAayBsE,CAX6BgB,aAAA,CAAqB,OAArB,CAFtD,GAGE2L,CAHF,CAayB3M,CAVbM,aAAA,CAAqB,OAArB,CAAA1G,MAAA,CAAoC,KAApC,CAHZ,CAKA,EAAA,CAAO+S,CASHjI,EAAAA,CAAMiI,CAAAtT,QAAA,CL4bG8H,CK5bae,EAAhB,CACV,OAAW,EAAX,CAAIwC,CAAJ,CACSiI,CAAA,CAAQjI,CAAR,CAAc,CAAd,CADT,CAGO,EANgC,CAYlCoI,QAASA,GAAa,CAAClU,CAAD,CAAO,CAClC,IAAMmU,EAAYnU,CAAAoU,YAAA,EAClB,OAAID,EAAJ,GAAkBnU,CAAlB,EAA0BmU,CAA1B,GAAwCnU,CAAAqU,cAAxC,CACS,EADT,CAIA,CADM/G,CACN,CADwC6G,CAAD7G,KACvC,ENqMchG,CMjMP,CAAagG,CAAb,CAAA7F,GAJP,CAES,EARyB;AA8DpC6M,QAASA,GAAO,CAACC,CAAD,CAAO,CACrB,IAAK,IAAIC,EAAE,CAAX,CAAcA,CAAd,CAAkBD,CAAAhV,OAAlB,CAA+BiV,CAAA,EAA/B,CAAoC,CAClC,IAAIC,EAAMF,CAAA,CAAKC,CAAL,CACV,IAAIC,CAAAtP,OAAJ,GAAmBE,QAAAqP,gBAAnB,EACED,CAAAtP,OADF,GACiBE,QAAAS,KADjB,CAIA,IAAK,IAAIrG,EAAE,CAAX,CAAcA,CAAd,CAAkBgV,CAAAE,WAAApV,OAAlB,CAAyCE,CAAA,EAAzC,CAA8C,CAC5C,IAAID,EAAIiV,CAAAE,WAAA,CAAelV,CAAf,CACR,IAAID,CAAAoJ,SAAJ,GAAmBvC,IAAAwC,aAAnB,CAAA,CAIA,IAAIvJ,EAAOE,CAAA4U,YAAA,EAAX,CACIQ,EAAed,EAAA,CAAgBtU,CAAhB,CAEnB,IAAIoV,CAAJ,EAAoBtV,CAApB,GAA6BE,CAAA6U,cAA7B,GAAwE7U,CNwNxEoJ,SMxNA,GNwNkBvC,IAAAwC,aMxNlB,ENwN0D,UMxN1D,GAAwErJ,CNwNjC+H,UMxNvC,ENyNK,CAAAU,CAAA,CMzNmEzI,CNyNnE,CMzNL,EACEsK,EAAA,CAAgCtK,CAAhC,CAAmCoV,CAAnC,CADF,KAEO,IAAItV,CAAJ,WAAoBuV,WAApB,CAtCX,IAuCYhL,CAvCHiL,CAuCcZ,EAAA,CAAc1U,CAAd,CAvCdsV,CAyCCjL,CAzCDiL,GAyCcF,CAzCdE,EA0CDnL,EAAA,CAAiCnK,CAAjC,CAAoCoV,CAApC,CAAkD/K,CAAlD,CA1CCiL,CAHHC,CAGGD,CAHahS,MAAA,SAAA,cAAA,iBAAAuE,KAAA,CAgDY7H,CAhDZ,CACX,QADW,CL2YT+I,CK1YOe,EADE,CACyB,GADzB,CAGbwL,CAAAA,CAAAA,CAAI,CAAb,CAAgBA,CAAhB,CAAoBC,CAAAxV,OAApB,CAA0CuV,CAAA,EAA1C,CAA+C,CASvCE,CAAAA;AAAeD,CAAA,CAAcD,CAAd,CACrB,KAAMG,EAAiCf,EAAA,CAAcc,CAAd,CACnCC,EAAJ,EACE7N,CAAA,CAAyB4N,CAAzB,CAAuCC,CAAvC,CAZ2C,CA6B3C,CAF4C,CANZ,CADf;AAgCvB,GAAI,ETlISpS,CSkIT,EAAmBC,MAAA,SAAnB,EAAyCA,MAAA,SAAA,sBAAzC,CAAJ,CAA2F,CACzF,IAAIoS,GAAW,IAAIC,gBAAJ,CAAqBb,EAArB,CAAf,CACI9N,GAAQA,QAAA,CAACxG,CAAD,CAAU,CACpBkV,EAAAE,QAAA,CAAiBpV,CAAjB,CAAuB,CAACqV,UAAW,CAAA,CAAZ,CAAkBC,QAAS,CAAA,CAA3B,CAAvB,CADoB,CAStB,IAN4BxS,MAAA,eAM5B,EALE,CAACA,MAAA,eAAA,0BAKH,CACE0D,EAAA,CAAMnB,QAAN,CADF,KAEO,CACL,IAAIkQ,GAAeA,QAAA,EAAM,CACvB/O,EAAA,CAAMnB,QAAAmQ,KAAN,CADuB,CAIrB1S,OAAA,YAAJ,CACEA,MAAA,YAAA,UAAA,CAAmCyS,EAAnC,CADF,CAKEE,qBAAA,CAAsB,QAAQ,EAAG,CAC/B,GAA4B,SAA5B,GAAIpQ,QAAAqQ,WAAJ,CAAuC,CACrC,IAAIC,EAAWA,QAAQ,EAAG,CACxBJ,EAAA,EACAlQ,SAAAuQ,oBAAA,CAA6B,kBAA7B,CAAiDD,CAAjD,CAFwB,CAI1BtQ,SAAAwQ,iBAAA,CAA0B,kBAA1B;AAA8CF,CAA9C,CALqC,CAAvC,IAOEJ,GAAA,EAR6B,CAAjC,CAVG,CAwBP1B,EAAA,CAAQA,QAAQ,EAAG,CACjBS,EAAA,CAAQY,EAAAY,YAAA,EAAR,CADiB,CArCsE,CA9HhFjC,IAAAkC,GAAAlC,E,CCDX,IAAMmC,EAAc,E,CCkBpB,IAAMC,GAAUC,OAAAC,QAAA,EAKTC,SAASA,GAAU,CAACC,CAAD,CAAa,CAErC,GADInO,CACJ,CDxBa8N,CCuBE,CAAYK,CAAZ,CACf,CACqBnO,CAerB,yBAIA,CAnBqBA,CAeO,yBAI5B,EAJyD,CAIzD,CAnBqBA,CAiBrB,4BAEA,CAnBqBA,CAiBU,4BAE/B,EAF+D,CAE/D,CAnBqBA,CAmBrB,sBAAA,EAnBqBA,CAmBK,sBAA1B,EAAoD,CAApD,EAAyD,CAtBpB,CAyChCoO,QAASA,GAAe,CAACpO,CAAD,CAAW,CACxC,MAAOA,EAAA,yBAAP,GAAqCA,CAAA,sBADG,CA4CnCqO,QAASA,GAAuB,CAACrO,CAAD,CAAW,CAEhDA,CAAA,4BAAA,CAA+BA,CAAA,sBAE1BA,EAAAsO,EAAL,GACEtO,CAAAsO,EACA,CADuB,CAAA,CACvB,CAAAP,EAAAQ,KAAA,CAAa,QAAQ,EAAG,CAEtBvO,CAAA,yBAAA,CAA4BA,CAAA,sBAC5BA,EAAAsO,EAAA,CAAuB,CAAA,CAHD,CAAxB,CAFF,CAJgD,C,CC9FlD,IAAME,GAAa,IJlBJrD,EIqBbvU,SADmB6X,EACR,EAAG,CACZ,IAAAC,EAAA,CAAqB,EACrB,KAAAC,EAAA,CAAkDxR,QAAAqP,gBAClD,KAAI1G,EAAM,IdYNjP,CcXJiP,EAAA,MAAA,CAAe,EACf,KAAA8I,EAAA,CAA+BC,EAAA,CAAc,IAAAF,EAAd,CAAmC,IPpBvD9I,COoBuD,CAAcC,CAAd,CAAnC,CAC/B,KAAAgJ,EAAA,CAA4B,CAAA,CAG5B,KAAAC,EAAA,CAFA,IAAAC,EAEA,CAFkB,IAPN,CAWd,CAAA,CAAA,CAAA,UAAAC,EAAAtD,MAAA,CAAAA,QAAK,EAAG,CACNkC,EAAA,EADM,CAORoB,EAAAC,EAAA,CAAAA,QAAW,CAAC9S,CAAD,CAAQ,CACjB,MTZYD,ESYL,CAAwBC,CAAxB,CADU,CAGnB6S,EAAAE,EAAA,CAAAA,QAAgB,CAACrJ,CAAD,CAAM,CACpB,MThCY9J,ESgCL,CAAoB8J,CAApB,CADa,CAoBtBmJ,EAAAG,gBAAA,CAAAA,QAAe,CAACpP,CAAD,CAAWmO,CAAX,CAAwB7O,CAAxB,CAAuC,CACpD,IAAA+P,mBAAA,CAAwBrP,CAAxB,CAAkCmO,CAAlC,CACA,KAAAmB,sBAAA,CAA2BtP,CAA3B,CAAqCmO,CAArC,CAAkD7O,CAAlD,CAFoD,CAUtD2P;CAAAK,sBAAA,CAAAA,QAAqB,CAACtP,CAAD,CAAWmO,CAAX,CAAwB7O,CAAxB,CAAuC,CAC1D,GAAIiQ,CAAAvP,CAAAuP,EAAJ,CAAA,CZxES5U,CY4ET,EL1DGkQ,CAAA,CK2DsBsD,CL3DtB,CK0DH,GLzDAtD,CAAA,CK0DyBsD,CL1DzB,CKyDA,CTgDY3Q,EIzGkB,CK0DL2Q,CL1DK,CKyD9B,CAGAnO,EAAAuP,EAAA,CAAqB,CAAA,CACrBvP,EAAAyH,KAAA,CAAgB0G,CAChBnO,EAAAP,QAAA,CAAmBH,CF7ERwO,EE8EX,CAAYK,CAAZ,CAAA,CAA2BnO,CAjC3B,KAAA,EAAA,CADI5D,CACJ,CAkCiC4D,CAnCrBc,QAAA0O,cAAA,CAA+B,OAA/B,CACZ,EAGOpT,CAAAoD,aAAA,CAAmB,WAAnB,CAHP,EAG0C,EAH1C,CACS,ETwNLiQ,KAAAA,EAAiB,EAEvB,KADA,IAAMC,ESvL6B1P,CAvCAc,QT8NwB6O,iBAAA,CAAyB,OAAzB,CAA3D,CACSpY,EAAI,CAAb,CAAgBA,CAAhB,CAAoBmY,CAAArY,OAApB,CAAmCE,CAAA,EAAnC,CAAwC,CACtC,IAAM6E,EAAQsT,CAAA,CAAOnY,CAAP,CACd,IAAoB6E,CDpPf8D,aAAA,CAvBuB0P,gBAuBvB,CCoPL,CACE,IAAI,CH/QGjV,CG+QP,CAAmB,CDnQvB,IAAM5D,ECoQqBqF,CDpQdC,YACRP,GAAA+T,IAAA,CAAiB9Y,CAAjB,CAAL,GACE+E,EAAAuF,IAAA,CAAiBtK,CAAjB,CAEA,CADM+Y,CACN,CCgQyB1T,CDjQR2T,UAAA,CAAgB,CAAA,CAAhB,CACjB,CAAA5S,QAAAS,KAAAoS,YAAA,CAA0BF,CAA1B,CAHF,CCoQM1T,EAAA6T,WAAAC,YAAA,CAA6B9T,CAA7B,CAFiB,CAAnB,CADF,IAMEqT,EAAA7X,KAAA,CAAoBwE,CAAAC,YAApB,CACA,CAAAD,CAAA6T,WAAAC,YAAA,CAA6B9T,CAA7B,CAToC,CAYxC,CAAA,CAAOqT,CAAA7M,KAAA,CAAoB,EAApB,CAAA3K,KAAA,ESnMDmM;CAAAA,CAAO,CACT7E,GAAI4O,CADK,CAET1O,QAASH,CAFA,CAGT6Q,EAAYnH,CAHH,CAMXoH,EAAA,CAAAA,IAAA,CACgB,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CCnDZP,CAGN,CZ7CWpU,CY0CCsI,KAAA,CDmDkDtK,CCnDlD,CAGZ,EZ9CW+B,CY2C8BuI,KAAA,CDmDqBtK,CCnDrB,CAGzC,CZ7CWgC,CY4CX8M,UACA,CADwB,CACxB,CZ9CW/M,CY8CX+M,UAAA,CAAuB,CDiDjBzC,EAAAA,CdnDQhP,CcmDF,CAAM2C,CAAN,CAEN4W,EAAJ,EZ7DS9U,CY6DT,EAAuC,IAAAyT,EAAvC,EACE,IAAAA,EAAA,eAAA,CAAkClJ,CAAlC,CAAuCqI,CAAvC,CAEFnO,EAAA,UAAA,CAAwB8F,CACxB9F,EAAAsQ,EAAA,CAAqBtH,CAEjBuH,EAAAA,CAAmB,EZnEdhV,EYoET,GACEgV,CADF,CACqBrJ,EAAA,CAA+BlH,CAAA,UAA/B,CADrB,CAGA,IAAI,CAACuQ,CAAAlZ,OAAL,EZvESkE,CYuET,CACanE,CAGX,CZ7GOuD,CY0GIvD,CAAe4I,CAAAc,QAAf1J,CAAkCA,IAG7C,CAFkB2O,CAElB,CLlGG8E,CAAA,CKgGmCsD,CLhGnC,CKkGH,ELlGkC,IKkGlC,CAgBE1U,CAhBF,CAgBYoI,CAAA,CAjB0BuC,CAiB1B,CAjBgCpE,CAAAtG,UAiBhC,CAhBZ,CAkBA,CAlBA,CAiBED,CAAApC,OAAJ,CTjCY0F,CSkCH,CAAmBtD,CAAnB,CAnB+B2K,CAmBH7E,GAA5B,CAAqCiR,CAArC,CAAiDzK,CAAjD,CADT,CAFyD,IAAA,EAfvD,CAAA/F,CAAAyQ,EAAA,CAAkBrU,CAEpB4D,EAAA0Q,EAAA,CAA6BH,CAvC7B,CAD0D,CA+C5DtB,EAAAI,mBAAA,CAAAA,QAAkB,CAACrP,CAAD,CAAWmO,CAAX,CAAwB,CZtH/BxT,CYuHT,EAAsBqF,CAAA2Q,EAAtB,GACE3Q,CAAA2Q,EACA,CADwB,CAAA,CACxB,CAAAvQ,EAAA,CAA6BJ,CAAAc,QAA7B,CAA+CqN,CAA/C,CAFF,CADwC,CA8C1CyC;QAAA,GAA2B,CAA3BA,CAA2B,CAAG,CACxB7B,CAAA,CAAAA,EAAJ,EAEWnU,MAAAQ,SAFX,EAE8BR,MAAAQ,SAAAyV,qBAF9B,GAGE,CAAA9B,EAGA,CAH2EnU,MAAAQ,SAAAyV,qBAG3E,CADA,CAAA9B,EAAA,kBACA,CADkD,QAAA,CAAC3S,CAAD,CAAW,CANnC,CAMoC0U,EAAA,CAAqC1U,CAArC,CAAD,CAC7D,CAAA,CAAA2S,EAAA,iBAAA,CAAiD,QAAA,EAAM,CACrDxB,qBAAA,CAAsB,QAAA,EAAM,CAC1B,CATsB,CASlBwB,EAAA,SAAJ,EATsB,CASwBD,EAA9C,GATsB,CAUpBiC,kBAAA,EAFwB,CAA5B,CADqD,CANzD,CAD4B,CAgB9BX,QAAA,EAAO,CAAPA,CAAO,CAAG,CAvBJpB,CAwBJgC,CAxBIhC,EAAJ,EAEWpU,MAAAQ,SAFX,EAE8BR,MAAAQ,SAAA6V,UAF9B,GAwBAD,CArBEhC,EACA,CADkBpU,MAAAQ,SAAA6V,UAClB,CAoBFD,CApBEhC,EAAA,gBAAA,CDvIUd,ECmIZ,CAyBA0C,GAAA,CAAAA,CAAA,CAFQ;AAOV3B,CAAA8B,kBAAA,CAAAA,QAAiB,EAAG,CAClBX,CAAA,CAAAA,IAAA,CACA,IAAK,IAAArB,EAAL,CAAA,CAGA,IAAImC,EAAe,IAAAnC,EAAA,cAAA,EAEnB,IAAK,IAAAA,EAAA,SAAL,CAAA,CAGA,GZnKSxT,CYmKT,CA2KA,IAAK,IAAIhE,EAAI,CAAb,CAAgBA,CAAhB,CAvKuC2Z,CAuKnB7Z,OAApB,CAAyCE,CAAA,EAAzC,CAA8C,CAE5C,IAAIe,EAzKJ6Y,IAyKQpC,EAAA,uBAAA,CAzK6BmC,CAwK7B5P,CAAa/J,CAAb+J,CACA,CACR,IAAIhJ,CAAJ,EZjVOiD,CYiVP,EA1KA4V,IA4MwBnC,EAlCxB,CAkCyC,CACzC,IAAIlJ,ET3XM3J,CS2XA,CAAwBC,CAAxB,CACVgU,EAAA,CA9MAe,IA8MA,CA9MAA,KA+MAnC,EAAA,eAAA,CAAkClJ,CAAlC,CACA1J,EAAAC,YAAA,CT/YUL,CS+YU,CAAoB8J,CAApB,CAJqB,CArCG,CA3K9C,IAoLA,KAnLEsL,EAAA,CAAAA,IAAA,CAAuB,IAAAzC,EAAvB,CAA4C,IAAAC,EAA5C,CAmLOrX,CAAAA,CAAAA,CAAI,CAAb,CAAgBA,CAAhB,CAlL0B2Z,CAkLN7Z,OAApB,CAAyCE,CAAA,EAAzC,CAGE,CADIe,CACJ,CArLA+Y,IAoLQtC,EAAA,uBAAA,CApLgBmC,CAmLhB5P,CAAa/J,CAAb+J,CACA,CACR,GACEqJ,EAAA,CAAiCrS,CAAjC,CAtLF+Y,IAsLsCzC,EAAAxI,EAApC,CAlLJ,KAAA2I,EAAA,SAAA,CAAyC,CAAA,CAErC,KAAAD,EAAJ,EAAiC,CZ3KxBvT,CY2KT,EACE,IAAA+V,cAAA,EAZF,CALA,CAFkB,CA4BpBrC;CAAA1D,aAAA,CAAAA,QAAY,CAACnG,CAAD,CAAOmM,CAAP,CAAsB,CAC3B,IAAAhS,ETuBOH,CSvBD,CAAuBgG,CAAvB,CAAN,GAAA,CACDmB,EAAYuD,CAAA,CAAc1E,CAAd,CAChB,IAAKmB,CAAAA,CAAL,CAAA,CAvFI,IAAA,ET4GQnH,CS5Gc,CAwFMgG,CAxFN,CAArB7F,EAAAA,CAAA,CAAA,GAAID,EAAAA,CAAA,CAAA,EACT,KAAIyG,ELzHC8E,CAAA,CKyHiCtL,CLzHjC,CKyHDwG,ELzHgC,IK0HhC/F,EAAAA,CFjIO8N,CEiII,CAAYvO,CAAZ,CAIf,IAAIS,CAAJ,CAAc,CACZ,IAAA8F,EAAM9F,CAAA,UACN,KAAAgG,EAAwBhG,CAAA0Q,EAFZ,CAKRnK,CAAAA,CAAY,IPzIPV,COyIO,CAChBC,CADgB,CAEhBC,CAFgB,CAGhBC,CAHgB,CAKhB1G,CALgB,CASdU,EAAJ,EACE6O,EAAA,CAmE8BzJ,CAnE9B,CAAoBmB,CAApB,CAEF,EAAA,CAAOA,CAgEP,CAIuBnB,CAAvB,GAAKoM,IA4DY7C,EA5DjB,GACE,IAAAG,EADF,CAC8B,CAAA,CAD9B,CAGIyC,EAAJ,GACEhL,CAAAN,EAEA,CADEM,CAAAN,EACF,EADuC,EACvC,CAAA+B,MAAAC,OAAA,CAAc1B,CAAAN,EAAd,CAAiDsL,CAAjD,CAHF,CAKA,IZpMShW,CYoMT,CAMO,CACL,GAAIgL,CAAAN,EAAJ,CAAA,CAC+BA,CAAAA,CAAAM,CAAAN,ECtOnC,KAAKvO,IAAIA,CAAT,GAAcmQ,EAAd,CAEY,IAAV,GAAInQ,CAAJ,CDoO2B0N,CCnOzBhJ,MAAAqV,eAAA,CAA6B/Z,CAA7B,CADF,CDoO2B0N,CCjOzBhJ,MAAAsV,YAAA,CAA0Bha,CAA1B,CAA6BmQ,CAAA,CAAWnQ,CAAX,CAA7B,CDgOA,CAGIsI,CAAAA,CF5OK8N,CE4OM,CAAYvO,CAAZ,CAMf,IAAI,EAJA,CAACS,CAID,EAJgCoF,CAIhC,GAJcoM,IAwCH7C,EApCX,EAAA3O,CAAA,ETwEMD,CSxEM,CAA8BC,CAA9B,CAAZ,CAAJ,EAGIA,CAHJ,EAGgBA,CAAAyQ,EAHhB,EAGmC,CDtLzBrC,ECsL0B,CAA+BpO,CAA/B,CAHpC,CAG8E,CAE5E,GDjKEoO,EAAA,CCiKuCpO,CDjKvC,CCiKF,EAAyCA,CDjKV,4BCiK/B,GAAyCA,CDjKuB,sBCiKhE,CACEoQ,CAAA,CAAAA,IAAA,CAGA,CAFA,IAAApB,EAEA,EAFmB,IAAAA,EAAA,eAAA,CAAkChP,CAAA,UAAlC;AAAyDT,CAAzD,CAEnB,CADAS,CAAAyQ,EAAApU,YACA,CAD8BwF,CAAA,CAA+BuD,CAA/B,CAAqCmB,CAAAzE,EAArC,CAC9B,CDhJMuM,ECgJN,CAAuCrO,CAAvC,CZ/PGrF,EYkQL,GACMvD,CADN,CACagO,CAAAuM,WADb,IAGgBva,CAAAoY,cAAApT,CAAmB,OAAnBA,CACZC,YAJJ,CAIwBwF,CAAA,CAA+BuD,CAA/B,CAAqCmB,CAAAzE,EAArC,CAJxB,CAOAyE,EAAAzE,EAAA,CAAuB9B,CAAA,UAhBqD,CAbzE,CANP,IAGE,IAFA,IAAA2L,MAAA,EAEI,CADJyF,EAAA,CAAAA,IAAA,CAAuBhM,CAAvB,CAA6BmB,CAA7B,CACI,CAAAA,CAAAP,EAAA,EAAmCO,CAAAP,EAAA3O,OAAvC,CAAA,CACmCkP,CAAAA,CAAAA,CAmDjChH,EAAAA,CT9CQH,CS8CH,CAnDsBgG,CAmDtB,CAAA7F,GJpQkC,EAAA,CAAA,CAE3C,GADIiM,CACJ,CImQiBgD,EJpQNpD,MAAA,CIoQuB7L,CJpQvB,CACX,CAIA,IAASqE,CAAT,CAAe4H,CAAAnU,OAAf,CAA6B,CAA7B,CAAuC,CAAvC,EAAgCuM,CAAhC,CAA0CA,CAAA,EAA1C,CAAiD,CAC3CgO,CAAAA,CAAQpG,CAAA,CAAK5H,CAAL,CA1BoC,EAAA,CAAA,CIwReoC,CAAAA,CAAAO,CAAAP,EJvRjE,KAASpC,CAAT,CAAe,CAAf,CAAkBA,CAAlB,CAAwB2M,CAAAlZ,OAAxB,CAAiDuM,CAAA,EAAjD,CAEE,GADIiO,CACA,CADKtB,CAAA,CAAiB3M,CAAjB,CACL,CAwBegO,CAxBf/J,EAAA,CAAsBgK,CAAtB,CAAA,GIqRgCtL,CAAAH,EJrRF,CAAWyL,CAAX,CAAlC,CAAkD,CAChD,CAAA,CAAO,CAAA,CAAP,OAAA,CADgD,CAIpD,CAAA,CAAO,CAAA,CAP2C,CA2BhD,GAAI,CAAJ,CAAyD,CACvD,CAAA,CAAOD,CAAP,OAAA,CADuD,CAFV,CANN,CAAA,CAAA,IAAA,EAAA,CIuQvCE,CAAAA,CAAcC,CAAA,CAAaA,CAAAxG,aAAb,CAAuC,IACrDyG,EAAAA,CAAmBzL,CAAAJ,EAEG,EAJA8L,CAIA,CAJAA,CAIA,EAJAA,CAAAA,EAIA,IAhQtBC,CACJ,CA+PiD,IAhQxCxD,EAAA,CAgQwCjH,CAhQxC,CACT,EA+PiD,IAhQZiH,EAAA,CAgQYjH,CAhQZ,CACrC,EADiE,CACjE,EADsE,CACtE,CAAA,CAAA,CA+PiDA,CA/PjD,CAAc,GAAd,CAAkByK,CA+PQ,CAA1B3L,EAAAJ,EAAA,CAA0B,CACqDA,EAAAA,CAAAI,CAAAJ,ENqNjFgM,EAAAA,CA8Fa9R,CA5FP5G,EAAAA,CAAU2C,CAAA,CAAQA,CAAAC,YAAR,EAA6B,EAA7B,CACZmN,EAAA,CAAAA,CAAA,CMlR6BpE,CNkR7B,CMxNkDmB,CAAAH,ENwNlD,CAA0CzG,CAA1C,CAEE4G,EAAAA,CAAYuD,CAAA,CMpRe1E,CNoRf,CAChB,KAAI9M,EAAIiO,CAAAL,EACJ5N,EAAJ,EAAS,CNhgBAqC,CMggBT;AAA2BrC,CAA3B,GAAiC8D,CAAjC,GACE9D,CAAA,UAAA,EACA,CAAsB,CAAtB,EAAIA,CAAA,UAAJ,EAA2BA,CAAA2X,WAA3B,EACE3X,CAAA2X,WAAAC,YAAA,CAAyB5X,CAAzB,CAHJ,CNhgBSqC,EMwgBT,CAEM4L,CAAAL,EAAJ,EACEK,CAAAL,EAAA7J,YACA,CADoC5C,CACpC,CAAA2C,CAAA,CAAQmK,CAAAL,EAFV,EAIWzM,CAJX,GAOE2C,CAPF,CH7aUW,CGobA,CAAmBtD,CAAnB,CAA4BkG,CAA5B,CMvSmByF,CNuSmBuM,WAAtC,CACNpL,CAAAR,EADM,CAPV,CAFF,CAcO3J,CAAL,CAQYA,CAAA6T,WARZ,GASMjJ,EAKJ,EAL0C,EAK1C,CALavN,CAAAlB,QAAA,CAAgB,QAAhB,CAKb,GAFE6D,CAAAC,YAEF,CAFsB5C,CAEtB,EHxZQ6D,EGwZR,CAAqBlB,CAArB,CAA4B,IAA5B,CAAkCmK,CAAAR,EAAlC,CAdF,EAGMtM,CAHN,GAII2C,CAJJ,CHzbUW,CG6bE,CAAmBtD,CAAnB,CAA4BkG,CAA5B,CAAsC,IAAtC,CACN4G,CAAAR,EADM,CAJZ,CAkBE3J,EAAJ,GACEA,CAAA,UAKA,CALqBA,CAAA,UAKrB,EAL2C,CAK3C,CAHImK,CAAAL,EAGJ,EAH6B9J,CAG7B,EAFEA,CAAA,UAAA,EAEF,CAAAmK,CAAAL,EAAA,CAAwB9J,CAN1B,CAQA,EAAA,CAAOA,CNhjBEzB,EYqST,GACkDwL,CNuMlD,CMvMkDI,CAAAJ,ENuMlD,CANIiM,CAMJ,CAPI9Q,CAOJ,CMnQ+B8D,CN4PvB5F,aAAA,CAAqB,OAArB,CAOR,EAPyC,EAOzC,CMvM2EwS,CNuM3E,GAJEI,CAIF,CAJM9Q,CAAAtK,QAAA,CACF,IAAI4O,MAAJ,CAAW,iBAAX,CMpMuEoM,CNoMvE,CAAiD,MAAjD,CAAyD,GAAzD,CADE,CAC6D,GAD7D,CAIN,EADAI,CACA,GADMA,CAAA,CAAI,GAAJ,CAAU,EAChB,EADoC,UACpC,CAD0CzS,CAC1C,CAAI2B,CAAJ,GAAU8Q,CAAV,EH3QYnT,CG4QV,CMpQ6BmG,CNoQ7B,CAAsCgN,CAAtC,CMzMF,CAGKL,EAAL,EACEvD,EAAAnD,MAAA,CAAiB9L,CAAjB,CAAqBgH,CAAAH,EAArB,CAAgDhK,CAAhD,CAAuDmK,CAAAJ,EAAvD,CAhEA,CAlB8B,CAsDlCkM;QAAA,GAAkB,CAAlBA,CAAkB,CAACva,CAAD,CAAO,CAGvB,MAAA,CADIsN,CACJ,CAFWtN,CAAAoU,YAAA9U,EACAgO,KACX,EACM0E,CAAA,CAAc1E,CAAd,CAAJ,CACSA,CADT,CAGSiN,EAAA,CAAAA,CAAA,CAAwBjN,CAAxB,CAJX,CAOO,CAAAuJ,EAVgB,CAgCzByC,QAAA,GAAiB,CAAjBA,CAAiB,CAAChM,CAAD,CAAOmB,CAAP,CAAkB,CAC7B+L,CAAAA,CAAQD,EAAA,CAAAA,CAAA,CAAwBjN,CAAxB,CACZ,KAAImN,EAAiBzI,CAAA,CAAcwI,CAAd,CAEjBnL,EAAAA,CAAQa,MAAAwK,OAAA,CADUD,CAAAnM,EACV,EAAiC,IAAjC,CACZ,KAAIqM,EAAmBrJ,EAAA,CAA8ChE,CAA9C,CAAoDmB,CAAAzE,EAApD,CAEnB4Q,EAAAA,CADehK,EAAAiK,CAAuCJ,CAAAzQ,EAAvC6Q,CAAkEvN,CAAlEuN,CACU9K,EAC7BG,OAAAC,OAAA,CACEd,CADF,CAEEsL,CAAApJ,EAFF,CAGEqJ,CAHF,CAIED,CAAAnJ,EAJF,CAMiCrD,EAAAA,CAAAM,CAAAN,EAKjC,KAAKvO,IAAIA,CAAT,GAAckb,EAAd,CAIE,IAHIR,CAGJ,CAHQQ,CAAA,CAAUlb,CAAV,CAGR,GAAe,CAAf,GAAS0a,CAAT,CATwBjL,CAUtB,CAAMzP,CAAN,CAAA,CAAW0a,CN1MjBS,EAAAA,CA4daxS,CAzdPuH,EAAAA,CAAQI,MAAA8K,oBAAA,CM8LU3L,CN9LV,CACZ,KAAS5P,CAAT,CAAW,CAAX,CAAiBA,CAAjB,CAAqBqQ,CAAAvQ,OAArB,CAAmCE,CAAA,EAAnC,CACED,CACA,CADIsQ,CAAA,CAAMrQ,CAAN,CACJ,CM2LoB4P,CN3LpB,CAAM7P,CAAN,CAAA,CAAW6Q,CAAA,CAAAA,CAAA,CM2LShB,CN3La,CAAM7P,CAAN,CAAtB,CM2LS6P,CN3LT,CM4LbZ,EAAAH,EAAA,CAA4Be,CAhBK,CAiCnC8H,CAAAqC,cAAA,CAAAA,QAAa,CAACzJ,CAAD,CAAa,CACxB,IAAAkL,aAAA,CAAkB,IAAApE,EAAlB,CAAuC9G,CAAvC,CADwB,CAS1BoH;CAAA8D,aAAA,CAAAA,QAAY,CAAC3N,CAAD,CAAOyC,CAAP,CAAmB,CAC7B,IAAIzQ,EAAOgO,CAAAuM,WACX,EAAIva,CAAJ,EAA8BgO,CAA9B,GAAYoM,IA/DK7C,EA+DjB,GACE,IAAApD,aAAA,CAAkBnG,CAAlB,CAAwByC,CAAxB,CAIF,IADImL,CACJ,CADqB5b,CACrB,GAD8BA,CAAA4J,SAC9B,EAD+C5J,CAAAyJ,WAC/C,EACE,IAAStJ,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoByb,CAAA3b,OAApB,CAA2CE,CAAA,EAA3C,CAEE,IAAAwb,aAAA,CADoCC,CAAA1R,CAAe/J,CAAf+J,CACpC,CAHJ,KAQE,IADIN,CACJ,CADeoE,CAAApE,SACf,EADgCoE,CAAAvE,WAChC,CACE,IAAStJ,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoByJ,CAAA3J,OAApB,CAAqCE,CAAA,EAArC,CAEE,IAAAwb,aAAA,CADoC/R,CAAAM,CAAS/J,CAAT+J,CACpC,CAlBuB,CA0C/B2N,EAAA6B,EAAA,CAAAA,QAA+B,CAAC1U,CAAD,CAAQ,CAAA,IAAA,EAAA,IAAA,CACjC0J,ETvWQ3J,CSuWF,CAAwBC,CAAxB,CT9UEF,ES+UZ,CAAsB4J,CAAtB,CAA2B,QAAA,CAACvJ,CAAD,CAAU,CACnC,GZpYO5B,CYoYP,CACE4K,EAAA,CAAuChJ,CAAvC,CADF,KAAA,CR4BJ0W,IAAAA,EAsDa5S,CQ/EuB9D,ER2BlC,SAAA,CQ3BkCA,CR2Bf,eACnBgJ,GAAA,CQ5BkChJ,CR4BlC,CQ5BkCA,ERrKlC,SAAA,CQqKkCA,CRrKf+F,EAAnB,CACEC,EAAA,CAiMF2Q,CAjME,CQoKgC3W,CRpKhC,CAiMwB,CAAAkJ,EAjMxB,CAiMF9H,IAAA,EAjME,CAiMFuE,IAAA,EAjME,CQiKA,CZlWO3G,CYuWP,GACE6U,CAAA,CAAAA,CAAA,CACA,CAAA,CAAApB,EAAA,EAAmB,CAAAA,EAAA,cAAA,CAAiCzS,CAAjC,CAFrB,CANmC,CAArC,CZjWShB,EY4WT,CACEa,CAAAC,YADF,CTpYYL,CSqYU,CAAoB8J,CAApB,CADtB,CAGE,IAAA8I,EAAA9M,EAAA,MAAAlK,KAAA,CAAsDkO,CAAtD,CAhBmC,CA2BvCmJ;CAAAkE,sBAAA,CAAAA,QAAqB,CAACjU,CAAD,CAAUkJ,CAAV,CAAoB,CACvC,IAAIrJ,CZ3XKxD,EY4XT,GAGEwD,CAHF,CAGUqH,CADQ0D,CAAA,CAAc5K,CAAd,CACRkH,EADkC0D,CAAA,CAAcuI,EAAA,CAAAA,IAAA,CAAwBnT,CAAxB,CAAd,CAClCkH,GAAA,CAA0BgC,CAA1B,CAHV,CASA,OAAO,CAHPrJ,CAGO,CAHCA,CAGD,EAHUnE,MAAAwY,iBAAA,CAAwBlU,CAAxB,CAAAmU,iBAAA,CAAkDjL,CAAlD,CAGV,EAAQrJ,CAAA9G,KAAA,EAAR,CAAuB,EAXS,CAgBzCgX,EAAAqE,EAAA,CAAAA,QAAe,CAACpU,CAAD,CAAUqU,CAAV,CAAuB,CACpC,IAAInc,EAAO8H,CAAAgN,YAAA,EACPL,EAAAA,CAAU0H,CAAA,CAAcA,CAAAza,MAAA,CAAkB,IAAlB,CAAd,CAAwC,EAClD0a,EAAAA,CAAYpc,CAAAgO,KAAZoO,EAAyBpc,CAAAgO,KAAA/F,UAI7B,IAAI,CAACmU,CAAL,CAAgB,CACd,IAAIC,EAAYvU,CAAAM,aAAA,CAAqB,OAArB,CAChB,IAAIiU,CAAJ,CAAe,CACTC,CAAAA,CAAKD,CAAA3a,MAAA,CAAgB,IAAhB,CACT,KAAK,IAAIvB,EAAE,CAAX,CAAcA,CAAd,CAAkBmc,CAAArc,OAAlB,CAA6BE,CAAA,EAA7B,CACE,GAAImc,CAAA,CAAGnc,CAAH,CAAJ,GR8BK8I,CQ9BSe,EAAd,CAA2C,CACzCoS,CAAA,CAAYE,CAAA,CAAGnc,CAAH,CAAK,CAAL,CACZ,MAFyC,CAHhC,CAFD,CAYZic,CAAJ,EACE3H,CAAAjU,KAAA,CRsBSyI,CQtBIe,EAAb,CAA0CoS,CAA1C,CZ9ZOjY,EYgaT,GACMgL,CADN,CACkBuD,CAAA,CAAc5K,CAAd,CADlB,GAEmBqH,CAAAJ,EAFnB,EAGI0F,CAAAjU,KAAA,CNkJOyI,CMlJMuK,EAAb,CAA0CrE,CAAAJ,EAA1C,CTnOQlH,ESsOZ,CAA6BC,CAA7B,CAAsC2M,CAAAjJ,KAAA,CAAa,GAAb,CAAtC,CA5BoC,CA8BtCqM,EAAA0E,EAAA,CAAAA,QAAiB,CAAC7b,CAAD,CAAO,CACtB,MAAOgS,EAAA,CAAchS,CAAd,CADe,CAOxBmX,EAAA2E,EAAA,CAAAA,QAAS,CAAC9b,CAAD,CAAO6F,CAAP,CAAc,CACrBuB,CAAA,CAAyBpH,CAAzB,CAA+B6F,CAA/B,CADqB,CAOvBsR;CAAA4E,EAAA,CAAAA,QAAW,CAAC/b,CAAD,CAAO6F,CAAP,CAAc,CACvBuB,CAAA,CAAyBpH,CAAzB,CAA+B6F,CAA/B,CAAsC,CAAA,CAAtC,CADuB,CAOzBsR,EAAA6E,EAAA,CAAAA,QAAY,CAAChc,CAAD,CAAO,CACjB,MH5bYkU,GG4bL,CAAclU,CAAd,CADU,CAOnBmX,EAAA8E,EAAA,CAAAA,QAAmB,CAACjc,CAAD,CAAO,CACxB,MH/cY8T,GG+cL,CAAgB9T,CAAhB,CADiB,CAM5B2W,EAAAhI,UAAA,MAAA,CAAiCgI,CAAAhI,UAAAkF,MACjC8C,EAAAhI,UAAA,gBAAA,CAA2CgI,CAAAhI,UAAA2I,gBAC3CX,EAAAhI,UAAA,aAAA,CAAwCgI,CAAAhI,UAAA8E,aACxCkD,EAAAhI,UAAA,cAAA,CAAyCgI,CAAAhI,UAAA6K,cACzC7C,EAAAhI,UAAA,aAAA,CAAwCgI,CAAAhI,UAAAsM,aACxCtE,EAAAhI,UAAA,sBAAA,CAAiDgI,CAAAhI,UAAA0M,sBACjD1E,EAAAhI,UAAA,gBAAA,CAA2CgI,CAAAhI,UAAA6M,EAC3C7E,EAAAhI,UAAA,kBAAA,CAA6CgI,CAAAhI,UAAAkN,EAC7ClF;CAAAhI,UAAA,gCAAA,CAA2DgI,CAAAhI,UAAAqK,EAC3DrC,EAAAhI,UAAA,YAAA,CAAuCgI,CAAAhI,UAAAyI,EACvCT,EAAAhI,UAAA,iBAAA,CAA4CgI,CAAAhI,UAAA0I,EAC5CV,EAAAhI,UAAA,kBAAA,CAA6CgI,CAAAhI,UAAAsK,kBAC7CtC,EAAAhI,UAAA,UAAA,CAAqCgI,CAAAhI,UAAAmN,EACrCnF,EAAAhI,UAAA,YAAA,CAAuCgI,CAAAhI,UAAAoN,EACvCpF,EAAAhI,UAAA,aAAA,CAAwCgI,CAAAhI,UAAAqN,EACxCrF,EAAAhI,UAAA,oBAAA,CAA+CgI,CAAAhI,UAAAsN,EAC/C/L,OAAAgM,iBAAA,CAAwBvF,CAAAhI,UAAxB,CAA+C,CAC7C,aAAgB,CACd,IAAAJ,QAAG,EAAG,CACJ,MZ/fO1L,EY8fH,CADQ,CAD6B,CAM7C,UAAa,CACX,IAAA0L,QAAG,EAAG,CACJ,MZleO9K,EYieH,CADK,CANgC,CAA/C,C,CExfA,IAAM0Y,EAAc,IFeLxF,CEff,CAEIwC,EAFJ,CAEeJ,EAEXjW,OAAA,SAAJ,GACEqW,EACA,CADYrW,MAAA,SAAA,UACZ,CAAAiW,EAAA,CAAuBjW,MAAA,SAAA,qBAFzB,CAKAA;MAAAQ,SAAA,CAAkB,CAChBqT,YAAawF,CADG,CAOhB,gBAAA7E,QAAe,CAACpP,CAAD,CAAWmO,CAAX,CAAwB+F,CAAxB,CAAwC,CACrDD,CAAAlD,kBAAA,EACAkD,EAAA7E,gBAAA,CAA4BpP,CAA5B,CAAsCmO,CAAtC,CAAmD+F,CAAnD,CAFqD,CAPvC,CAYhB,mBAAA7E,QAAkB,CAACrP,CAAD,CAAWmO,CAAX,CAAwB,CACxC8F,CAAA5E,mBAAA,CAA+BrP,CAA/B,CAAyCmO,CAAzC,CADwC,CAZ1B,CAgBhB,sBAAAmB,QAAqB,CAACtP,CAAD,CAAWmO,CAAX,CAAwB+F,CAAxB,CAAwC,CAC3DD,CAAAlD,kBAAA,EACAkD,EAAA3E,sBAAA,CAAkCtP,CAAlC,CAA4CmO,CAA5C,CAAyD+F,CAAzD,CAF2D,CAhB7C,CAwBhB,aAAAnB,QAAY,CAAC7T,CAAD,CAAU2I,CAAV,CAAsB,CAChCoM,CAAAlD,kBAAA,EACAkD,EAAAlB,aAAA,CAAyB7T,CAAzB,CAAkC2I,CAAlC,CAFgC,CAxBlB,CAgChB,aAAA0D,QAAY,CAACrM,CAAD,CAAU,CACpB+U,CAAAlD,kBAAA,EACAkD,EAAA1I,aAAA,CAAyBrM,CAAzB,CAFoB,CAhCN,CAwChB,cAAAoS,QAAa,CAACzJ,CAAD,CAAa,CACxBoM,CAAAlD,kBAAA,EACAkD,EAAA3C,cAAA,CAA0BzJ,CAA1B,CAFwB,CAxCV,CA6ChB,kBAAAkJ,QAAiB,EAAG,CAClBkD,CAAAlD,kBAAA,EADkB,CA7CJ;AAsDhB,sBAAAoC,QAAqB,CAACjU,CAAD,CAAUkJ,CAAV,CAAoB,CACvC,MAAO6L,EAAAd,sBAAA,CAAkCjU,CAAlC,CAA2CkJ,CAA3C,CADgC,CAtDzB,CA0DhB9M,UdrCWC,CcrBK,CA4DhBZ,adzEWA,CcaK,CA+DdsW,GAAJ,GACErW,MAAAQ,SAAA6V,UADF,CAC8BA,EAD9B,CAIIJ,GAAJ,GACEjW,MAAAQ,SAAAyV,qBADF,CACyCA,EADzC","file":"scoping-shim.min.js","sourcesContent":["/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n/** @unrestricted */\nclass StyleNode {\n  constructor() {\n    /** @type {number} */\n    this['start'] = 0;\n    /** @type {number} */\n    this['end'] = 0;\n    /** @type {StyleNode} */\n    this['previous'] = null;\n    /** @type {StyleNode} */\n    this['parent'] = null;\n    /** @type {Array<StyleNode>} */\n    this['rules'] = null;\n    /** @type {string} */\n    this['parsedCssText'] = '';\n    /** @type {string} */\n    this['cssText'] = '';\n    /** @type {boolean} */\n    this['atRule'] = false;\n    /** @type {number} */\n    this['type'] = 0;\n    /** @type {string} */\n    this['keyframesName'] = '';\n    /** @type {string} */\n    this['selector'] = '';\n    /** @type {string} */\n    this['parsedSelector'] = '';\n  }\n}\n\nexport {StyleNode}\n\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n  let root = new StyleNode();\n  root['start'] = 0;\n  root['end'] = text.length\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n['rules']) {\n        n['rules'] = [];\n      }\n      let p = n;\n      let previous = p['rules'][p['rules'].length - 1] || null;\n      n = new StyleNode();\n      n['start'] = i + 1;\n      n['parent'] = p;\n      n['previous'] = previous;\n      p['rules'].push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n['end'] = i + 1;\n      n = n['parent'] || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n  let t = text.substring(node['start'], node['end'] - 1);\n  node['parsedCssText'] = node['cssText'] = t.trim();\n  if (node['parent']) {\n    let ss = node['previous'] ? node['previous']['end'] : node['parent']['start'];\n    t = text.substring(ss, node['start'] - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node['parsedSelector'] = node['selector'] = t.trim();\n    node['atRule'] = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node['atRule']) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node['type'] = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node['type'] = types.KEYFRAMES_RULE;\n        node['keyframesName'] =\n          node['selector'].split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node['type'] = types.MIXIN_RULE;\n      } else {\n        node['type'] = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node['rules'];\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n/**\n * stringify parsed css.\n * @param {StyleNode} node\n * @param {boolean=} preserveProperties\n * @param {string=} text\n * @return {string}\n */\nexport function stringify(node, preserveProperties, text = '') {\n  // calc rule cssText\n  let cssText = '';\n  if (node['cssText'] || node['rules']) {\n    let r$ = node['rules'];\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node['cssText'] :\n        removeCustomProps(node['cssText']);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node['selector']) {\n      text += node['selector'] + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node['selector']) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\n/**\n * @param {Array<StyleNode>} rules\n * @return {boolean}\n */\nfunction _hasMixinRules(rules) {\n  let r = rules[0];\n  return Boolean(r) && Boolean(r['selector']) && r['selector'].indexOf(VAR_START) === 0;\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\n/** @enum {number} */\nexport const types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nconst OPEN_BRACE = '{';\nconst CLOSE_BRACE = '}';\n\n// helper regexp's\nconst RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nconst VAR_START = '--';\nconst MEDIA_START = '@media';\nconst AT_START = '@';\n",null,"/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport const nativeShadow = !(window['ShadyDOM'] && window['ShadyDOM']['inUse']);\nlet nativeCssVariables_;\n\n/**\n * @param {(ShadyCSSOptions | ShadyCSSInterface)=} settings\n */\nfunction calcCssVariables(settings) {\n  if (settings && settings['shimcssproperties']) {\n    nativeCssVariables_ = false;\n  } else {\n    // chrome 49 has semi-working css vars, check if box-shadow works\n    // safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\n    // However, shim css custom properties are only supported with ShadyDOM enabled,\n    // so fall back on native if we do not detect ShadyDOM\n    // Edge 15: custom properties used in ::before and ::after will also be used in the parent element\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12414257/\n    nativeCssVariables_ = nativeShadow || Boolean(!navigator.userAgent.match(/AppleWebKit\\/601|Edge\\/15/) &&\n      window.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n  }\n}\n\nif (window.ShadyCSS && window.ShadyCSS.nativeCss !== undefined) {\n  nativeCssVariables_ = window.ShadyCSS.nativeCss;\n} else if (window.ShadyCSS) {\n  calcCssVariables(window.ShadyCSS);\n  // reset window variable to let ShadyCSS API take its place\n  window.ShadyCSS = undefined;\n} else {\n  calcCssVariables(window['WebComponents'] && window['WebComponents']['flags']);\n}\n\n// Hack for type error under new type inference which doesn't like that\n// nativeCssVariables is updated in a function and assigns the type\n// `function(): ?` instead of `boolean`.\nexport const nativeCssVariables = /** @type {boolean} */(nativeCssVariables_);\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const VAR_ASSIGN = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gi;\nexport const MIXIN_MATCH = /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi;\nexport const VAR_CONSUMED = /(--[\\w-]+)\\s*([:,;)]|$)/gi;\nexport const ANIMATION_MATCH = /(animation\\s*:)|(animation-name\\s*:)/;\nexport const MEDIA_MATCH = /@media\\s(.*)/;\nexport const IS_VAR = /^--/;\nexport const BRACKETED = /\\{[^}]*\\}/g;\nexport const HOST_PREFIX = '(?:^|[^.#[:])';\nexport const HOST_SUFFIX = '($|[.:[\\\\s>+~])';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {!Set<string>} */\nconst styleTextSet = new Set();\n\nexport const scopingAttribute = 'shady-unscoped';\n\n/**\n * Add a specifically-marked style to the document directly, and only one copy of that style.\n *\n * @param {!HTMLStyleElement} style\n * @return {undefined}\n */\nexport function processUnscopedStyle(style) {\n  const text = style.textContent;\n  if (!styleTextSet.has(text)) {\n    styleTextSet.add(text);\n    const newStyle = style.cloneNode(true);\n    document.head.appendChild(newStyle);\n  }\n}\n\n/**\n * Check if a style is supposed to be unscoped\n * @param {!HTMLStyleElement} style\n * @return {boolean} true if the style has the unscoping attribute\n */\nexport function isUnscopedStyle(style) {\n  return style.hasAttribute(scopingAttribute);\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables} from './style-settings.js';\nimport {parse, stringify, types, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {MEDIA_MATCH} from './common-regex.js';\nimport {processUnscopedStyle, isUnscopedStyle} from './unscoped-style-handler.js';\n\n/**\n * @param {string|StyleNode} rules\n * @param {function(StyleNode)=} callback\n * @return {string}\n */\nexport function toCssText (rules, callback) {\n  if (!rules) {\n    return '';\n  }\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @return {StyleNode}\n */\nexport function rulesForStyle(style) {\n  if (!style['__cssRules'] && style.textContent) {\n    style['__cssRules'] = parse(style.textContent);\n  }\n  return style['__cssRules'] || null;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\n/**\n * @param {StyleNode} rule\n * @return {boolean}\n */\nexport function isKeyframesSelector(rule) {\n  return Boolean(rule['parent']) &&\n  rule['parent']['type'] === types.KEYFRAMES_RULE;\n}\n\n/**\n * @param {StyleNode} node\n * @param {Function=} styleRuleCallback\n * @param {Function=} keyframesRuleCallback\n * @param {boolean=} onlyActiveRules\n */\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  let type = node['type'];\n  if (onlyActiveRules) {\n    if (type === types.MEDIA_RULE) {\n      let matchMedia = node['selector'].match(MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node['rules'];\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @param {Node} target\n * @param {Node} contextNode\n * @return {HTMLStyleElement}\n */\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  applyStyle(style, target, contextNode);\n  return style;\n}\n\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @return {HTMLStyleElement}\n */\nexport function createScopeStyle(cssText, moniker) {\n  let style = /** @type {HTMLStyleElement} */(document.createElement('style'));\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\n/**\n * Track the position of the last added style for placing placeholders\n * @type {Node}\n */\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\n/**\n * @param {string} moniker\n * @return {!Comment}\n */\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode['nextSibling'] : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @param {?Node} target\n * @param {?Node} contextNode\n */\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n    target.firstChild;\n  target.insertBefore(style, after);\n  if (!lastHeadApplyNode) {\n    lastHeadApplyNode = style;\n  } else {\n    // only update lastHeadApplyNode if the new style is inserted after the old lastHeadApplyNode\n    let position = style.compareDocumentPosition(lastHeadApplyNode);\n    if (position === Node.DOCUMENT_POSITION_PRECEDING) {\n      lastHeadApplyNode = style;\n    }\n  }\n}\n\n/**\n * @param {string} buildType\n * @return {boolean}\n */\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n/**\n * @param {Element} element\n * @return {?string}\n */\nexport function getCssBuildType(element) {\n  return element.getAttribute('css-build');\n}\n\n/**\n * Walk from text[start] matching parens and\n * returns position of the outer end paren\n * @param {string} text\n * @param {number} start\n * @return {number}\n */\nexport function findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * @param {string} str\n * @param {function(string, string, string, string)} callback\n */\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\n/**\n * @param {Element} element\n * @param {string} value\n */\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (nativeShadow) {\n    element.setAttribute('class', value);\n  } else {\n    window['ShadyDOM']['nativeMethods']['setAttribute'].call(element, 'class', value);\n  }\n}\n\n/**\n * @param {Element | {is: string, extends: string}} element\n * @return {{is: string, typeExtension: string}}\n */\nexport function getIsExtends(element) {\n  let localName = element['localName'];\n  let is = '', typeExtension = '';\n  /*\n  NOTE: technically, this can be wrong for certain svg elements\n  with `-` in the name like `<font-face>`\n  */\n  if (localName) {\n    if (localName.indexOf('-') > -1) {\n      is = localName;\n    } else {\n      typeExtension = localName;\n      is = (element.getAttribute && element.getAttribute('is')) || '';\n    }\n  } else {\n    is = /** @type {?} */(element).is;\n    typeExtension = /** @type {?} */(element).extends;\n  }\n  return {is, typeExtension};\n}\n\n/**\n * @param {Element|DocumentFragment} element\n * @return {string}\n */\nexport function gatherStyleText(element) {\n  /** @type {!Array<string>} */\n  const styleTextParts = [];\n  const styles = /** @type {!NodeList<!HTMLStyleElement>} */(element.querySelectorAll('style'));\n  for (let i = 0; i < styles.length; i++) {\n    const style = styles[i];\n    if (isUnscopedStyle(style)) {\n      if (!nativeShadow) {\n        processUnscopedStyle(style);\n        style.parentNode.removeChild(style);\n      }\n    } else {\n      styleTextParts.push(style.textContent);\n      style.parentNode.removeChild(style);\n    }\n  }\n  return styleTextParts.join('').trim();\n}\n\n/**\n * Split a selector separated by commas into an array in a smart way\n * @param {string} selector\n * @return {!Array<string>}\n */\nexport function splitSelectorList(selector) {\n  const parts = [];\n  let part = '';\n  for (let i = 0; i >= 0 && i < selector.length; i++) {\n    // A selector with parentheses will be one complete part\n    if (selector[i] === '(') {\n      // find the matching paren\n      const end = findMatchingParen(selector, i);\n      // push the paren block into the part\n      part += selector.slice(i, end + 1);\n      // move the index to after the paren block\n      i = end;\n    } else if (selector[i] === ',') {\n      parts.push(part);\n      part = '';\n    } else {\n      part += selector[i];\n    }\n  }\n  // catch any pieces after the last comma\n  if (part) {\n    parts.push(part);\n  }\n  return parts;\n}\n\n/**\n * @param {!HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateHasBuiltCss(template) {\n  if (template._isBuilt === undefined) {\n    template._isBuilt = template.hasAttribute('css-build');\n  }\n  return template._isBuilt;\n}\n\n/**\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isTemplateWithBuiltCss(node) {\n  if (node.nodeType === Node.ELEMENT_NODE && node.localName === 'template') {\n    return templateHasBuiltCss(/** @type {!HTMLTemplateElement} */(node));\n  }\n  return false;\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport * as StyleUtil from './style-util.js';\nimport {nativeShadow} from './style-settings.js';\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  /**\n   * Given a node and scope name, add a scoping class to each node\n   * in the tree. This facilitates transforming css into scoped rules.\n   * @param {!Node} node\n   * @param {string} scope\n   * @param {boolean=} shouldRemoveScope\n   * @deprecated\n   */\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node['__styleScoped']) {\n      node['__styleScoped'] = null;\n    } else {\n      const fn = (node) => {\n        this.element(node, scope || '', shouldRemoveScope);\n      };\n      this._transformDom(node, fn);\n    }\n  }\n\n  /**\n   * Given a node and scope name, add a scoping class to each node in the tree.\n   * @param {!Node} node\n   * @param {string} scope\n   */\n  domAddScope(node, scope) {\n    // one time optimization to skip scoping...\n    if (node['__styleScoped']) {\n      node['__styleScoped'] = null;\n    } else {\n      const fn = (node) => {\n        this.element(node, scope || '');\n      };\n      this._transformDom(node, fn);\n    }\n  }\n\n  /**\n   * @param {!Node} startNode\n   * @param {!function(!Node)} transformer\n   */\n  _transformDom(startNode, transformer) {\n    if (startNode.nodeType === Node.ELEMENT_NODE) {\n      transformer(startNode)\n    }\n    let c$ = (startNode.localName === 'template') ?\n      // In case the template is in svg context, fall back to the node\n      // since it won't be an HTMLTemplateElement with a .content property\n      (startNode.content || startNode._content || startNode).childNodes :\n      startNode.children || startNode.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], transformer);\n      }\n    }\n  }\n\n  /**\n   * @param {?} element\n   * @param {?} scope\n   * @param {?=} shouldRemoveScope\n   */\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            StyleUtil.setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          StyleUtil.setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  /**\n   * Given a node, replace the scoping class to each subnode in the tree.\n   * @param {!Node} node\n   * @param {string} oldScope\n   * @param {string} newScope\n   */\n  domReplaceScope(node, oldScope, newScope) {\n    // one time optimization to skip scoping...\n    if (node['__styleScoped']) {\n      node['__styleScoped'] = null;\n    } else {\n      const fn = (node) => {\n        this.element(node, oldScope, true);\n        this.element(node, newScope);\n      };\n      this._transformDom(node, fn);\n    }\n  }\n  /**\n   * Given a node, remove the scoping class to each subnode in the tree.\n   * @param {!Node} node\n   * @param {string} oldScope\n   */\n  domRemoveScope(node, oldScope) {\n    // one time optimization to skip scoping...\n    if (node['__styleScoped']) {\n      node['__styleScoped'] = null;\n    } else {\n      const fn = (node) => {\n        this.element(node, oldScope || '', true);\n      };\n      this._transformDom(node, fn);\n    }\n  }\n\n  /**\n   * @param {?} element\n   * @param {?} styleRules\n   * @param {?=} callback\n   */\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element['__cssBuild'];\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = '';\n    if (nativeShadow || cssBuildType === 'shady') {\n      cssText = StyleUtil.toCssText(styleRules, callback);\n    } else {\n      let {is, typeExtension} = StyleUtil.getIsExtends(element);\n      cssText = this.css(styleRules, is, typeExtension, callback) + '\\n\\n';\n    }\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? `[is=${scope}]` : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  /**\n   * transforms a css rule to a scoped rule.\n   *\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule['selector'] = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = StyleUtil.splitSelectorList(rule['selector']);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.filter((part) => Boolean(part)).join(COMPLEX_SELECTOR_SEP);\n  }\n\n  /**\n   * @param {string} selector\n   * @return {string}\n   */\n  _twiddleNthPlus(selector) {\n    return selector.replace(NTH, (m, type, inside) => {\n      if (inside.indexOf('+') > -1) {\n        inside = inside.replace(/\\+/g, '___');\n      } else if (inside.indexOf('___') > -1) {\n        inside = inside.replace(/___/g, '+');\n      }\n      return `:${type}(${inside})`;\n    });\n  }\n\n  /**\n   * Preserve `:matches()` selectors by replacing them with MATCHES_REPLACMENT\n   * and returning an array of `:matches()` selectors.\n   * Use `_replacesMatchesPseudo` to replace the `:matches()` parts\n   *\n   * @param {string} selector\n   * @return {{selector: string, matches: !Array<string>}}\n   */\n  _preserveMatchesPseudo(selector) {\n    /** @type {!Array<string>} */\n    const matches = [];\n    let match;\n    while ((match = selector.match(MATCHES))) {\n      const start = match.index;\n      const end = StyleUtil.findMatchingParen(selector, start);\n      if (end === -1) {\n        throw new Error(`${match.input} selector missing ')'`)\n      }\n      const part = selector.slice(start, end + 1);\n      selector = selector.replace(part, MATCHES_REPLACEMENT);\n      matches.push(part);\n    }\n    return {selector, matches};\n  }\n\n  /**\n   * Replace MATCHES_REPLACMENT character with the given set of `:matches()`\n   * selectors.\n   *\n   * @param {string} selector\n   * @param {!Array<string>} matches\n   * @return {string}\n   */\n  _replaceMatchesPseudo(selector, matches) {\n    const parts = selector.split(MATCHES_REPLACEMENT);\n    return matches.reduce((acc, cur, idx) => acc + cur + parts[idx + 1], parts[0]);\n  }\n\n/**\n * @param {string} selector\n * @param {string} scope\n * @param {string=} hostScope\n */\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    let isNth = NTH.test(selector);\n    if (isNth) {\n      selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`)\n      selector = this._twiddleNthPlus(selector);\n    }\n    // Preserve selectors like `:-webkit-any` so that SIMPLE_SELECTOR_SEP does\n    // not get confused by spaces inside the pseudo selector\n    const isMatches = MATCHES.test(selector);\n    /** @type {!Array<string>} */\n    let matches;\n    if (isMatches) {\n      ({selector, matches} = this._preserveMatchesPseudo(selector));\n    }\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    // replace `:matches()` selectors\n    if (isMatches) {\n      selector = this._replaceMatchesPseudo(selector, matches);\n    }\n    if (isNth) {\n      selector = this._twiddleNthPlus(selector);\n    }\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule['selector'] = rule['parsedSelector'];\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  normalizeRootSelector(rule) {\n    if (rule['selector'] === ROOT) {\n      rule['selector'] = 'html';\n    }\n  }\n\n/**\n * @param {string} selector\n */\n  _transformDocumentSelector(selector) {\n    if (selector.match(HOST)) {\n      // remove ':host' type selectors in document rules\n      return '';\n    } else if (selector.match(SLOTTED)) {\n      return this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR)\n    } else {\n      return this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n    }\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\nconst MATCHES = /:(?:matches|any|-(?:webkit|moz)-any)/;\nconst MATCHES_REPLACEMENT = '\\u{e000}';\n\nexport default new StyleTransformer()\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/** @const {string} */\nconst infoKey = '__styleInfo';\n\nexport default class StyleInfo {\n  /**\n   * @param {Element} node\n   * @return {StyleInfo}\n   */\n  static get(node) {\n    if (node) {\n      return node[infoKey];\n    } else {\n      return null;\n    }\n  }\n  /**\n   * @param {!Element} node\n   * @param {StyleInfo} styleInfo\n   * @return {StyleInfo}\n   */\n  static set(node, styleInfo) {\n    node[infoKey] = styleInfo;\n    return styleInfo;\n  }\n  /**\n   * @param {StyleNode} ast\n   * @param {Node=} placeholder\n   * @param {Array<string>=} ownStylePropertyNames\n   * @param {string=} elementName\n   * @param {string=} typeExtension\n   * @param {string=} cssBuild\n   */\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    /** @type {StyleNode} */\n    this.styleRules = ast || null;\n    /** @type {Node} */\n    this.placeholder = placeholder || null;\n    /** @type {!Array<string>} */\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    /** @type {Array<Object>} */\n    this.overrideStyleProperties = null;\n    /** @type {string} */\n    this.elementName = elementName || '';\n    /** @type {string} */\n    this.cssBuild = cssBuild || '';\n    /** @type {string} */\n    this.typeExtension = typeExtension || '';\n    /** @type {Object<string, string>} */\n    this.styleProperties = null;\n    /** @type {?string} */\n    this.scopeSelector = null;\n    /** @type {HTMLStyleElement} */\n    this.customStyle = null;\n  }\n  _getStyleRules() {\n    return this.styleRules;\n  }\n}\n\nStyleInfo.prototype['_getStyleRules'] = StyleInfo.prototype._getStyleRules;","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport * as RX from './common-regex.js';\nimport StyleInfo from './style-info.js';\n\n// TODO: dedupe with shady\n/**\n * @param {string} selector\n * @return {boolean}\n * @this {Element}\n */\nconst matchesSelector = function(selector) {\n  const method = this.matches || this.matchesSelector ||\n    this.mozMatchesSelector || this.msMatchesSelector ||\n    this.oMatchesSelector || this.webkitMatchesSelector;\n  return method && method.call(this, selector);\n};\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n/**\n * decorates styles with rule info and returns an array of used style property names\n *\n * @param {StyleNode} rules\n * @return {Array<string>}\n */\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule['rules'] = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = RX.VAR_ASSIGN;\n      let cssText = rule['parsedCssText'];\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule['parsedCssText']);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(RX.BRACKETED, '')\n      .replace(RX.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = RX.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        RX.MIXIN_MATCH.lastIndex = 0;\n        m = RX.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule['cssText'] = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule['cssText'];\n    let output = rule['cssText'];\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = RX.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule['cssText'] = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  /**\n   * @param {StyleNode} rules\n   * @param {Element} element\n   */\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule['parsedSelector'];\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  /**\n   * @param {Element} scope\n   * @param {StyleNode} rule\n   * @param {string|undefined} cssBuild\n   * @param {function(Object)} callback\n   */\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let {is, typeExtension} = StyleUtil.getIsExtends(scope);\n    let hostScope = is ?\n      StyleTransformer._calcHostScope(is, typeExtension) :\n      'html';\n    let parsedSelector = rule['parsedSelector'];\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host because `:host` does not work with `matches`\n      if (!rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n/**\n * @param {Element} scope\n * @param {StyleNode} rules\n * @return {Object}\n */\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules['__cssBuild'];\n    StyleUtil.forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  /**\n   * @param {Element} element\n   * @param {Object} properties\n   * @param {string} scopeSelector\n   */\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let {is, typeExtension} = StyleUtil.getIsExtends(element);\n    let hostSelector = StyleTransformer\n      ._calcHostScope(is, typeExtension);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(RX.HOST_PREFIX + rxHostSelector +\n      RX.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule['cssText']) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  /**\n   * @param {Element} element\n   * @param {StyleNode} rules\n   * @param {string} scopeSelector\n   * @return {Object}\n   */\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule['keyframesName']] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  /**\n   * @param {StyleNode} keyframesRule\n   * @return {function(string):string}\n   */\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n/**\n * Transforms `@keyframes` names to be unique for the current host.\n * Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n *\n * @param {StyleNode} rule\n * @param {string} scopeId\n */\n  _scopeKeyframes(rule, scopeId) {\n    // Animation names are of the form [\\w-], so ensure that the name regex does not partially apply\n    // to similarly named keyframe names by checking for a word boundary at the beginning and\n    // a non-word boundary or `-` at the end.\n    rule.keyframesNameRx = new RegExp(`\\\\b${rule['keyframesName']}(?!\\\\B|-)`, 'g');\n    rule.transformedKeyframesName = rule['keyframesName'] + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    rule['selector'] = rule.transformedSelector.replace(\n        rule['keyframesName'], rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  /**\n   * @param {StyleNode} rule\n   * @param {RegExp} hostRx\n   * @param {string} hostSelector\n   * @param {string} scopeId\n   */\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = StyleUtil.splitSelectorList(selector);\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule['selector'] = parts.join(',');\n  }\n\n  /**\n   * @param {Element} element\n   * @param {string} selector\n   * @param {string} old\n   */\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      StyleUtil.setElementClassRaw(element, v);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element\n   * @param {Object} properties\n   * @param {string} selector\n   * @param {HTMLStyleElement} style\n   * @return {HTMLStyleElement}\n   */\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s['_useCount']--;\n      if (s['_useCount'] <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        if (IS_IE && cssText.indexOf('@media') > -1) {\n            // @media rules may be stale in IE 10 and 11\n            // refresh the text content of the style to revalidate them.\n          style.textContent = cssText;\n        }\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style['_useCount'] = style['_useCount'] || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style['_useCount']++;\n      }\n      styleInfo.customStyle = style;\n    }\n    return style;\n  }\n\n  /**\n   * @param {Element} style\n   * @param {Object} properties\n   */\n  applyCustomStyle(style, properties) {\n    let rules = StyleUtil.rulesForStyle(/** @type {HTMLStyleElement} */(style));\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      let css = rule['cssText'] = rule['parsedCssText'];\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(/** @type {string} */(css));\n        // replace with reified properties, scenario is same as mixin\n        rule['cssText'] = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\n/**\n * @param {number} n\n * @param {Array<number>} bits\n */\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32, 10);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexport default new StyleProperties();","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util.js';\nimport {nativeShadow} from './style-settings.js';\n\n/** @type {!Object<string, !Node>} */\nconst placeholderMap = {};\n\n/**\n * @param {string} elementName\n * @return {Node}\n */\nexport function getStylePlaceholder(elementName) {\n  return placeholderMap[elementName] || null;\n}\n\n/**\n * @param {string} elementName\n */\nexport function ensureStylePlaceholder(elementName) {\n  if (!placeholderMap[elementName]) {\n    placeholderMap[elementName] = applyStylePlaceHolder(elementName);\n  }\n}\n\n/**\n * @const {CustomElementRegistry}\n */\nconst ce = window['customElements'];\nif (ce && !nativeShadow) {\n  /**\n   * @const {function(this:CustomElementRegistry, string,function(new:HTMLElement),{extends: string}=)}\n   */\n  const origDefine = ce['define'];\n  /**\n   * @param {string} name\n   * @param {function(new:HTMLElement)} clazz\n   * @param {{extends: string}=} options\n   */\n  const wrappedDefine = (name, clazz, options) => {\n    ensureStylePlaceholder(name);\n    origDefine.call(/** @type {!CustomElementRegistry} */(ce), name, clazz, options);\n  };\n  ce['define'] = wrappedDefine;\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\nexport default class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport {getIsExtends, isTemplateWithBuiltCss} from './style-util.js';\n\nexport let flush = function() {};\n\n/**\n * @param {!Element} element\n * @return {!Array<string>}\n */\nfunction getClasses(element) {\n  let classes = [];\n  if (element.classList) {\n    classes = Array.from(element.classList);\n  } else if (element instanceof window['SVGElement'] && element.hasAttribute('class')) {\n    classes = element.getAttribute('class').split(/\\s+/);\n  }\n  return classes;\n}\n\n/**\n * @param {!Element} element\n * @return {string}\n */\nexport function getCurrentScope(element) {\n  let classes = getClasses(element);\n  let idx = classes.indexOf(StyleTransformer.SCOPE_NAME);\n  if (idx > -1) {\n    return classes[idx + 1];\n  }\n  return '';\n}\n\n/**\n * @param {!Node} node\n */\nexport function getOwnerScope(node) {\n  const ownerRoot = node.getRootNode();\n  if (ownerRoot === node || ownerRoot === node.ownerDocument) {\n    return '';\n  }\n  const host = /** @type {!ShadowRoot} */(ownerRoot).host;\n  if (!host) {\n    // this may actually be a document fragment\n    return '';\n  }\n  return getIsExtends(host).is;\n}\n\n/**\n * @param {!Element} element\n */\nexport function ensureCorrectScope(element) {\n  const currentScope = getCurrentScope(element);\n  const ownerRoot = element.getRootNode();\n  if (ownerRoot === element) {\n    return;\n  }\n  if (currentScope && ownerRoot === element.ownerDocument) {\n    // node was scoped, but now is in document\n    StyleTransformer.domRemoveScope(element, currentScope);\n  } else if (ownerRoot instanceof ShadowRoot) {\n    const ownerScope = getOwnerScope(element);\n    if (ownerScope !== currentScope) {\n      // node was scoped, but not by its current owner\n      StyleTransformer.domReplaceScope(element, currentScope, ownerScope);\n    }\n  }\n}\n\n/**\n * @param {!HTMLElement|!HTMLDocument} element\n */\nexport function ensureCorrectSubtreeScoping(element) {\n  // find unscoped subtree nodes\n  const unscopedNodes = window['ShadyDOM']['nativeMethods']['querySelectorAll'].call(\n    element, `:not(.${StyleTransformer.SCOPE_NAME})`);\n\n  for (let j = 0; j < unscopedNodes.length; j++) {\n    // it's possible, during large batch inserts, that nodes that aren't\n    // scoped within the current scope were added.\n    // To make sure that any unscoped nodes that were inserted in the current batch are correctly styled,\n    // query all unscoped nodes and force their style-scope to be applied.\n    // This could happen if a sub-element appended an unscoped node in its shadowroot and this function\n    // runs on a parent element of the host of that unscoped node:\n    // parent-element -> element -> unscoped node\n    // Here unscoped node should have the style-scope element, not parent-element.\n    const unscopedNode = unscopedNodes[j];\n    const scopeForPreviouslyUnscopedNode = getOwnerScope(unscopedNode);\n    if (scopeForPreviouslyUnscopedNode) {\n      StyleTransformer.element(unscopedNode, scopeForPreviouslyUnscopedNode);\n    }\n  }\n}\n\n/**\n * @param {Array<MutationRecord|null>|null} mxns\n */\nfunction handler(mxns) {\n  for (let x=0; x < mxns.length; x++) {\n    let mxn = mxns[x];\n    if (mxn.target === document.documentElement ||\n      mxn.target === document.head) {\n      continue;\n    }\n    for (let i=0; i < mxn.addedNodes.length; i++) {\n      let n = mxn.addedNodes[i];\n      if (n.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      n = /** @type {HTMLElement} */(n); // eslint-disable-line no-self-assign\n      let root = n.getRootNode();\n      let currentScope = getCurrentScope(n);\n      // node was scoped, but now is in document\n      if (currentScope && root === n.ownerDocument && !isTemplateWithBuiltCss(n)) {\n        StyleTransformer.domRemoveScope(n, currentScope);\n      } else if (root instanceof ShadowRoot) {\n        const newScope = getOwnerScope(n);\n        // rescope current node and subtree if necessary\n        if (newScope !== currentScope) {\n          StyleTransformer.domReplaceScope(n, currentScope, newScope);\n        }\n        // make sure all the subtree elements are scoped correctly\n        ensureCorrectSubtreeScoping(n);\n      }\n    }\n  }\n}\n\n// if native Shadow DOM is being used, or ShadyDOM handles dynamic scoiping, do not activate the MutationObserver\nif (!nativeShadow && !(window['ShadyDOM'] && window['ShadyDOM']['handlesDynamicScoping'])) {\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window['customElements'] &&\n    !window['customElements']['polyfillWrapFlushCallback']);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window['HTMLImports']) {\n      window['HTMLImports']['whenReady'](delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/**\n * @const {!Object<string, !HTMLTemplateElement>}\n */\nconst templateMap = {};\nexport default templateMap;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\nimport templateMap from './template-map.js';\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/*\n * Utilities for handling invalidating apply-shim mixins for a given template.\n *\n * The invalidation strategy involves keeping track of the \"current\" version of a template's mixins, and updating that count when a mixin is invalidated.\n * The template\n */\n\n/** @const {string} */\nconst CURRENT_VERSION = '_applyShimCurrentVersion';\n\n/** @const {string} */\nconst NEXT_VERSION = '_applyShimNextVersion';\n\n/** @const {string} */\nconst VALIDATING_VERSION = '_applyShimValidatingVersion';\n\n/**\n * @const {Promise<void>}\n */\nconst promise = Promise.resolve();\n\n/**\n * @param {string} elementName\n */\nexport function invalidate(elementName){\n  let template = templateMap[elementName];\n  if (template) {\n    invalidateTemplate(template);\n  }\n}\n\n/**\n * This function can be called multiple times to mark a template invalid\n * and signal that the style inside must be regenerated.\n *\n * Use `startValidatingTemplate` to begin an asynchronous validation cycle.\n * During that cycle, call `templateIsValidating` to see if the template must\n * be revalidated\n * @param {HTMLTemplateElement} template\n */\nexport function invalidateTemplate(template) {\n  // default the current version to 0\n  template[CURRENT_VERSION] = template[CURRENT_VERSION] || 0;\n  // ensure the \"validating for\" flag exists\n  template[VALIDATING_VERSION] = template[VALIDATING_VERSION] || 0;\n  // increment the next version\n  template[NEXT_VERSION] = (template[NEXT_VERSION] || 0) + 1;\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValid(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValid(template);\n  }\n  return true;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValid(template) {\n  return template[CURRENT_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValidating(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValidating(template);\n  }\n  return false;\n}\n\n/**\n * Returns true if the template is currently invalid and `startValidating` has been called since the last invalidation.\n * If false, the template must be validated.\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValidating(template) {\n  return !templateIsValid(template) && template[VALIDATING_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * the template is marked as `validating` for one microtask so that all instances\n * found in the tree crawl of `applyStyle` will update themselves,\n * but the template will only be updated once.\n * @param {string} elementName\n*/\nexport function startValidating(elementName) {\n  let template = templateMap[elementName];\n  startValidatingTemplate(template);\n}\n\n/**\n * Begin an asynchronous invalidation cycle.\n * This should be called after every validation of a template\n *\n * After one microtask, the template will be marked as valid until the next call to `invalidateTemplate`\n * @param {HTMLTemplateElement} template\n */\nexport function startValidatingTemplate(template) {\n  // remember that the current \"next version\" is the reason for this validation cycle\n  template[VALIDATING_VERSION] = template[NEXT_VERSION];\n  // however, there only needs to be one async task to clear the counters\n  if (!template._validating) {\n    template._validating = true;\n    promise.then(function() {\n      // sync the current version to let future invalidations cause a refresh cycle\n      template[CURRENT_VERSION] = template[NEXT_VERSION];\n      template._validating = false;\n    });\n  }\n}\n\n/**\n * @return {boolean}\n */\nexport function elementsAreInvalid() {\n  for (let elementName in templateMap) {\n    let template = templateMap[elementName];\n    if (!templateIsValid(template)) {\n      return true;\n    }\n  }\n  return false;\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse, StyleNode} from './css-parse.js';\nimport {nativeShadow, nativeCssVariables} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport StyleProperties from './style-properties.js';\nimport {ensureStylePlaceholder, getStylePlaceholder} from './style-placeholder.js';\nimport StyleInfo from './style-info.js';\nimport StyleCache from './style-cache.js';\nimport {flush as watcherFlush, getOwnerScope, getCurrentScope} from './document-watcher.js';\nimport templateMap from './template-map.js';\nimport * as ApplyShimUtils from './apply-shim-utils.js';\nimport {updateNativeProperties, detectMixin} from './common-utils.js';\nimport {CustomStyleInterfaceInterface} from './custom-style-interface.js'; // eslint-disable-line no-unused-vars\n\n/**\n * @const {StyleCache}\n */\nconst styleCache = new StyleCache();\n\nexport default class ScopingShim {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = /** @type {!HTMLElement} */(document.documentElement);\n    let ast = new StyleNode();\n    ast['rules'] = [];\n    this._documentOwnerStyleInfo = StyleInfo.set(this._documentOwner, new StyleInfo(ast));\n    this._elementsHaveApplied = false;\n    this._applyShim = null;\n    /** @type {?CustomStyleInterfaceInterface} */\n    this._customStyleInterface = null;\n  }\n  flush() {\n    watcherFlush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  }\n  _gatherStyles(template) {\n    return StyleUtil.gatherStyleText(template.content);\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  /**\n   * Prepare the styling and template for the given element type\n   *\n   * @param {HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplate(template, elementName, typeExtension) {\n    this.prepareTemplateDom(template, elementName);\n    this.prepareTemplateStyles(template, elementName, typeExtension);\n  }\n  /**\n   * Prepare styling for the given element type\n   * @param {HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplateStyles(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    // style placeholders are only used when ShadyDOM is active\n    if (!nativeShadow) {\n      ensureStylePlaceholder(elementName);\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    // check if the styling has mixin definitions or uses\n    this._ensure();\n    let hasMixins = !StyleUtil.templateHasBuiltCss(template) && detectMixin(cssText);\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && nativeCssVariables && this._applyShim) {\n      this._applyShim['transformRules'](ast, elementName);\n    }\n    template['_styleAst'] = ast;\n    template._cssBuild = cssBuild;\n\n    let ownPropertyNames = [];\n    if (!nativeCssVariables) {\n      ownPropertyNames = StyleProperties.decorateStyles(template['_styleAst']);\n    }\n    if (!ownPropertyNames.length || nativeCssVariables) {\n      let root = nativeShadow ? template.content : null;\n      let placeholder = getStylePlaceholder(elementName);\n      let style = this._generateStaticStyle(info, template['_styleAst'], root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  /**\n   * Prepare template for the given element type\n   * @param {HTMLTemplateElement} template\n   * @param {string} elementName\n   */\n  prepareTemplateDom(template, elementName) {\n    if (!nativeShadow && !template._domPrepared) {\n      template._domPrepared = true;\n      StyleTransformer.domAddScope(template.content, elementName);\n    }\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer.elementStyles(info, rules);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let {is, typeExtension} = StyleUtil.getIsExtends(host);\n    let placeholder = getStylePlaceholder(is)\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template['_styleAst'];\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    const styleInfo = new StyleInfo(\n      ast,\n      placeholder,\n      ownStylePropertyNames,\n      is,\n      typeExtension,\n      cssBuild\n    );\n    // only set the style info after this element has registered its template\n    if (template) {\n      StyleInfo.set(host, styleInfo);\n    }\n    return styleInfo;\n  }\n  _ensureApplyShim() {\n    if (this._applyShim) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.ApplyShim) {\n      this._applyShim = window.ShadyCSS.ApplyShim;\n      this._applyShim['invalidCallback'] = ApplyShimUtils.invalidate;\n    }\n  }\n  _ensureCustomStyleInterface() {\n    if (this._customStyleInterface) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.CustomStyleInterface) {\n      this._customStyleInterface = /** @type {!CustomStyleInterfaceInterface} */(window.ShadyCSS.CustomStyleInterface);\n      /** @type {function(!HTMLStyleElement)} */\n      this._customStyleInterface['transformCallback'] = (style) => {this.transformCustomStyleForDocument(style)};\n      this._customStyleInterface['validateCallback'] = () => {\n        requestAnimationFrame(() => {\n          if (this._customStyleInterface['enqueued'] || this._elementsHaveApplied) {\n            this.flushCustomStyles();\n          }\n        })\n      };\n    }\n  }\n  _ensure() {\n    this._ensureApplyShim();\n    this._ensureCustomStyleInterface();\n  }\n  /**\n   * Flush and apply custom styles to document\n   */\n  flushCustomStyles() {\n    this._ensure();\n    if (!this._customStyleInterface) {\n      return;\n    }\n    let customStyles = this._customStyleInterface['processStyles']();\n    // early return if custom-styles don't need validation\n    if (!this._customStyleInterface['enqueued']) {\n      return;\n    }\n    if (!nativeCssVariables) {\n      this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n      this._applyCustomStyles(customStyles);\n    } else {\n      this._revalidateCustomStyleApplyShim(customStyles);\n    }\n    this._customStyleInterface['enqueued'] = false;\n    // if custom elements have upgraded and there are no native css variables, we must recalculate the whole tree\n    if (this._elementsHaveApplied && !nativeCssVariables) {\n      this.styleDocument();\n    }\n  }\n  /**\n   * Apply styles for the given element\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} overrideProps\n   */\n  styleElement(host, overrideProps) {\n    let {is} = StyleUtil.getIsExtends(host);\n    let styleInfo = StyleInfo.get(host);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (!nativeCssVariables) {\n      this.flush();\n      this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    } else {\n      if (styleInfo.overrideStyleProperties) {\n        updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      // bail early if the template was built with polymer-css-build\n      if (template && StyleUtil.templateHasBuiltCss(template)) {\n        return;\n      }\n      if (template && template._style && !ApplyShimUtils.templateIsValid(template)) {\n        // update template\n        if (!ApplyShimUtils.templateIsValidating(template)) {\n          this._ensure();\n          this._applyShim && this._applyShim['transformRules'](template['_styleAst'], is);\n          template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          ApplyShimUtils.startValidatingTemplate(template);\n        }\n        // update instance if native shadowdom\n        if (nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template['_styleAst'];\n      }\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = StyleUtil.getIsExtends(host).is;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  /**\n   * Update styles of the whole document\n   *\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    this.styleSubtree(this._documentOwner, properties);\n  }\n  /**\n   * Update styles of a subtree\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} properties\n   */\n  styleSubtree(host, properties) {\n    let root = host.shadowRoot;\n    if (root || this._isRootOwner(host)) {\n      this.styleElement(host, properties);\n    }\n    // process the shadowdom children of `host`\n    let shadowChildren = root && (root.children || root.childNodes);\n    if (shadowChildren) {\n      for (let i = 0; i < shadowChildren.length; i++) {\n        let c = /** @type {!HTMLElement} */(shadowChildren[i]);\n        this.styleSubtree(c);\n      }\n    } else {\n      // process the lightdom children of `host`\n      let children = host.children || host.childNodes;\n      if (children) {\n        for (let i = 0; i < children.length; i++) {\n          let c = /** @type {!HTMLElement} */(children[i]);\n          this.styleSubtree(c);\n        }\n      }\n    }\n  }\n  /* Custom Style operations */\n  _revalidateCustomStyleApplyShim(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        this._revalidateApplyShim(s);\n      }\n    }\n  }\n  _applyCustomStyles(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        StyleProperties.applyCustomStyle(s, this._documentOwnerStyleInfo.styleProperties);\n      }\n    }\n  }\n  transformCustomStyleForDocument(style) {\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (nativeCssVariables) {\n        this._ensure();\n        this._applyShim && this._applyShim['transformRule'](rule);\n      }\n    });\n    if (nativeCssVariables) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules['rules'].push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (nativeCssVariables && this._applyShim) {\n      let ast = StyleUtil.rulesForStyle(style);\n      this._ensure();\n      this._applyShim['transformRules'](ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!nativeCssVariables) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value ? value.trim() : '';\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!nativeCssVariables) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n  /**\n   * @param {!Element} node\n   * @param {string} scope\n   */\n  scopeNode(node, scope) {\n    StyleTransformer.element(node, scope);\n  }\n  /**\n   * @param {!Element} node\n   * @param {string} scope\n   */\n  unscopeNode(node, scope) {\n    StyleTransformer.element(node, scope, true);\n  }\n  /**\n   * @param {!Node} node\n   * @return {string}\n   */\n  scopeForNode(node) {\n    return getOwnerScope(node);\n  }\n  /**\n   * @param {!Element} node\n   * @return {string}\n   */\n  currentScopeForNode(node) {\n    return getCurrentScope(node);\n  }\n}\n\n/* exports */\nScopingShim.prototype['flush'] = ScopingShim.prototype.flush;\nScopingShim.prototype['prepareTemplate'] = ScopingShim.prototype.prepareTemplate;\nScopingShim.prototype['styleElement'] = ScopingShim.prototype.styleElement;\nScopingShim.prototype['styleDocument'] = ScopingShim.prototype.styleDocument;\nScopingShim.prototype['styleSubtree'] = ScopingShim.prototype.styleSubtree;\nScopingShim.prototype['getComputedStyleValue'] = ScopingShim.prototype.getComputedStyleValue;\nScopingShim.prototype['setElementClass'] = ScopingShim.prototype.setElementClass;\nScopingShim.prototype['_styleInfoForNode'] = ScopingShim.prototype._styleInfoForNode;\nScopingShim.prototype['transformCustomStyleForDocument'] = ScopingShim.prototype.transformCustomStyleForDocument;\nScopingShim.prototype['getStyleAst'] = ScopingShim.prototype.getStyleAst;\nScopingShim.prototype['styleAstToString'] = ScopingShim.prototype.styleAstToString;\nScopingShim.prototype['flushCustomStyles'] = ScopingShim.prototype.flushCustomStyles;\nScopingShim.prototype['scopeNode'] = ScopingShim.prototype.scopeNode;\nScopingShim.prototype['unscopeNode'] = ScopingShim.prototype.unscopeNode;\nScopingShim.prototype['scopeForNode'] = ScopingShim.prototype.scopeForNode;\nScopingShim.prototype['currentScopeForNode'] = ScopingShim.prototype.currentScopeForNode;\nObject.defineProperties(ScopingShim.prototype, {\n  'nativeShadow': {\n    get() {\n      return nativeShadow;\n    }\n  },\n  'nativeCss': {\n    get() {\n      return nativeCssVariables;\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport { MIXIN_MATCH, VAR_ASSIGN } from './common-regex.js';\n\n/**\n * @param {Element} element\n * @param {Object=} properties\n */\nexport function updateNativeProperties(element, properties) {\n  // remove previous properties\n  for (let p in properties) {\n    // NOTE: for bc with shim, don't apply null values.\n    if (p === null) {\n      element.style.removeProperty(p);\n    } else {\n      element.style.setProperty(p, properties[p]);\n    }\n  }\n}\n\n/**\n * @param {Element} element\n * @param {string} property\n * @return {string}\n */\nexport function getComputedStyleValue(element, property) {\n  /**\n   * @const {string}\n   */\n  const value = window.getComputedStyle(element).getPropertyValue(property);\n  if (!value) {\n    return '';\n  } else {\n    return value.trim();\n  }\n}\n\n/**\n * return true if `cssText` contains a mixin definition or consumption\n * @param {string} cssText\n * @return {boolean}\n */\nexport function detectMixin(cssText) {\n  const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n  // reset state of the regexes\n  MIXIN_MATCH.lastIndex = 0;\n  VAR_ASSIGN.lastIndex = 0;\n  return has;\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport ScopingShim from '../src/scoping-shim.js';\nimport {nativeCssVariables, nativeShadow} from '../src/style-settings.js';\n\n/** @const {ScopingShim} */\nconst scopingShim = new ScopingShim();\n\nlet ApplyShim, CustomStyleInterface;\n\nif (window['ShadyCSS']) {\n  ApplyShim = window['ShadyCSS']['ApplyShim'];\n  CustomStyleInterface = window['ShadyCSS']['CustomStyleInterface'];\n}\n\nwindow.ShadyCSS = {\n  ScopingShim: scopingShim,\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} elementExtends\n   */\n  prepareTemplate(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplate(template, elementName, elementExtends)\n  },\n\n  prepareTemplateDom(template, elementName) {\n    scopingShim.prepareTemplateDom(template, elementName);\n  },\n\n  prepareTemplateStyles(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplateStyles(template, elementName, elementExtends)\n  },\n  /**\n   * @param {!HTMLElement} element\n   * @param {Object=} properties\n   */\n  styleSubtree(element, properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleSubtree(element, properties);\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   */\n  styleElement(element) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleElement(element);\n  },\n\n  /**\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleDocument(properties);\n  },\n\n  flushCustomStyles() {\n    scopingShim.flushCustomStyles();\n  },\n\n  /**\n   * @param {Element} element\n   * @param {string} property\n   * @return {string}\n   */\n  getComputedStyleValue(element, property) {\n    return scopingShim.getComputedStyleValue(element, property);\n  },\n\n  nativeCss: nativeCssVariables,\n\n  nativeShadow: nativeShadow\n};\n\nif (ApplyShim) {\n  window.ShadyCSS.ApplyShim = ApplyShim;\n}\n\nif (CustomStyleInterface) {\n  window.ShadyCSS.CustomStyleInterface = CustomStyleInterface;\n}"]}