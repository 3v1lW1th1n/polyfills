{"version":3,"sources":["src/css-parse.js"," [synthetic:util/global] ","src/style-settings.js","src/common-regex.js","src/unscoped-style-handler.js","src/style-util.js","src/style-transformer.js","src/scoping-shim.js","src/document-watcher.js","src/style-properties.js","src/style-info.js","src/style-placeholder.js","src/style-cache.js","src/template-map.js","src/apply-shim-utils.js","src/common-utils.js","entrypoints/scoping-shim.js"],"names":["$jscomp.global","constructor","StyleNode","parse","text","replace","RX$$module$src$css_parse.comments","RX$$module$src$css_parse.port","parseCss","root","length","n","i","l","OPEN_BRACE","p","previous","push","CLOSE_BRACE","node","t","substring","trim","ss","_expandUnicodeEscapes","RX$$module$src$css_parse.multipleSpaces","lastIndexOf","s","indexOf","AT_START","MEDIA_START","types$$module$src$css_parse.MEDIA_RULE","match","RX$$module$src$css_parse.keyframesRule","types$$module$src$css_parse.KEYFRAMES_RULE","split","pop","VAR_START","types$$module$src$css_parse.MIXIN_RULE","types$$module$src$css_parse.STYLE_RULE","r$","r","code","repeat","stringify","preserveProperties","cssText","rules","RX$$module$src$css_parse.customProp","RX$$module$src$css_parse.mixinProp","RX$$module$src$css_parse.mixinApply","RX$$module$src$css_parse.varApply","STYLE_RULE","KEYFRAMES_RULE","MEDIA_RULE","MIXIN_RULE","comments","port","customProp","mixinProp","mixinApply","varApply","keyframesRule","multipleSpaces","nativeShadow","window","nativeCssVariables_","calcCssVariables","settings","navigator","userAgent","CSS","supports","ShadyCSS","undefined","nativeCss","nativeCssVariables","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","MEDIA_MATCH","BRACKETED","styleTextSet","Set","toCssText","callback","forEachRule","rulesForStyle","style","textContent","isKeyframesSelector","rule","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","type","matchMedia","matches","applyCss","moniker","target","contextNode","document","createElement","setAttribute","applyStyle","lastHeadApplyNode","applyStylePlaceHolder","placeHolder","createComment","scope","head","insertBefore","after","firstChild","nextSibling","compareDocumentPosition","position","Node","DOCUMENT_POSITION_PRECEDING","findMatchingParen","start","level","processVariableAndFallback","str","end","inner","prefix","suffix","comma","value","fallback","setElementClassRaw","element","call","getIsExtends","localName","typeExtension","is","getAttribute","extends","splitSelectorList","selector","parts","part","slice","getCssBuild","__cssBuild","attrValue","CSS_BUILD_ATTR","buildComment","content","Comment","commentParts","parentNode","removeChild","StyleTransformer","domAddScope","_transformDom","fn","startNode","transformer","nodeType","ELEMENT_NODE","c$","childNodes","_content","children","shouldRemoveScope","classList","remove","SCOPE_NAME","add","c","CLASS","newValue","domReplaceScope","oldScope","newScope","domRemoveScope","elementStyles","styleRules","cssBuild","css","ext","hostScope","_calcHostScope","_calcElementScope","CSS_CLASS_PREFIX","isScoped","_transformRule","transformedSelector","_transformRuleCss","_transformComplexSelector","p$","filter","join","COMPLEX_SELECTOR_SEP","_twiddleNthPlus","NTH","m","inside","_preserveMatchesPseudo","MATCHES","index","Error","input","MATCHES_REPLACEMENT","_replaceMatchesPseudo","reduce","acc","cur","idx","stop","isNth","test","isMatches","SLOTTED_START","HOST","SIMPLE_SELECTOR_SEP","info","_transformCompoundSelector","combinator","slottedIndex","SLOTTED","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","DIR_PAREN","before","dir","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","host","SELECTOR_NO_MATCH","normalizeRootSelector","ROOT","_transformDocumentSelector","SCOPE_DOC_SELECTOR","$jscomp.global.Object.defineProperties","RegExp","$jscompDefaultExport","StyleInfo","ast","placeholder","ownStylePropertyNames","overrideStyleProperties","customStyle","scopeSelector","styleProperties","get","set","styleInfo","_getStyleRules","prototype","matchesSelector","method","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","IS_IE","StyleProperties","decorateStyles","props","keyframes","ruleIndex","decorateRule","propertyInfo","collectPropertiesInCssText","exec","name","onKeyframesRule","_keyframes","names","properties","collectProperties","collectCssText","collectConsumingCssText","Object","assign","any","valueForProperty","property","valueForProperties","propertyValue","lastIndex","colon","pp","propertyDataFromStyles","o","selectorToMatch","parseInt","key","whenHostOrRootRule","parsedSelector","isRoot","isHost","hostAndRootPropertiesForScope","hostProps","rootProps","_element","transformStyles","hostSelector","hostRx","StyleInfo$$module$src$style_info.get","keyframeTransforms","_elementKeyframeTransforms","applyProperties","output","applyKeyframeTransforms","hasAnimations","keyframeNamesToTransform","keyframe","transform","_scopeSelector","keyframesRules","keyframesNameRx","_scopeKeyframes","transformedKeyframesName","scopeId","_keyframesRuleTransformer","applyCustomStyle","XSCOPE_NAME","placeholderMap","ce","origDefine","wrappedDefine","clazz","options","StyleCache","cache","store","tagname","styleElement","list","typeMax","shift","flush","getCurrentScope","classes","Array","from","hasAttribute","getOwnerScope","ownerRoot","getRootNode","ownerDocument","handler","mxns","x","mxn","documentElement","addedNodes","currentScope","ShadowRoot","j","unscopedNodes","unscopedNode","scopeForPreviouslyUnscopedNode","observer","MutationObserver","observe","childList","subtree","delayedStart","body","requestAnimationFrame","readyState","listener","removeEventListener","addEventListener","takeRecords","module$src$document_watcher.flush","templateMap","promise","Promise","resolve","invalidate","elementName","template","templateIsValid","startValidatingTemplate","_validating","then","styleCache","ScopingShim","_scopeCounter","_documentOwner","_documentOwnerStyleInfo","StyleInfo$$module$src$style_info.set","_elementsHaveApplied","_customStyleInterface","_applyShim","flush.prototype","getStyleAst.prototype","getStyleAst","styleAstToString.prototype","styleAstToString","prepareTemplate.prototype","prepareTemplate","prepareTemplateDom","prepareTemplateStyles","prepareTemplateStyles.prototype","_prepared","styleTextParts","styles","querySelectorAll","scopingAttribute","has","newStyle","cloneNode","appendChild","_ensure","hasMixins","ownPropertyNames","_generateStaticStyle","shadowroot","_style","_ownPropertyNames","prepareTemplateDom.prototype","_domPrepared","_ensureCustomStyleInterface","CustomStyleInterface","transformCustomStyleForDocument","flushCustomStyles","_ensureApplyShim","ApplyShim","flushCustomStyles.prototype","customStyles","_revalidateCustomStyleApplyShim","_revalidateApplyShim","_applyCustomStyles","_updateProperties","styleDocument","styleElement.prototype","overrideProps","_prepareHost","styleElementNativeVariables","removeProperty","setProperty","shadowRoot","querySelector","styleElementShimVariables","_applyStyleProperties","fetch","entry","_validate","pn","cachedStyle","cacheEntry","oldScopeSelector","id","_generateScopeSelector","applyElementStyle","applyElementScopeSelector","v","_styleOwnerForNode","owner","ownerStyleInfo","create","hostAndRootProps","propertiesMatchingHost","_mixinOverrideStyles","overrides","reify","getOwnPropertyNames","styleDocument.prototype","styleSubtree","styleSubtree.prototype","shadowChildren","transformCustomStyleForDocument.prototype","documentRule","getComputedStyleValue.prototype","getComputedStyleValue","getComputedStyle","getPropertyValue","setElementClass.prototype","setElementClass","classString","scopeName","classAttr","k$","_styleInfoForNode.prototype","_styleInfoForNode","scopeNode.prototype","scopeNode","unscopeNode.prototype","unscopeNode","scopeForNode.prototype","scopeForNode","currentScopeForNode.prototype","currentScopeForNode","defineProperties","scopingShim","elementExtends"],"mappings":"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","file":"scoping-shim.min.js","sourcesContent":["/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n/** @unrestricted */\nclass StyleNode {\n  constructor() {\n    /** @type {number} */\n    this['start'] = 0;\n    /** @type {number} */\n    this['end'] = 0;\n    /** @type {StyleNode} */\n    this['previous'] = null;\n    /** @type {StyleNode} */\n    this['parent'] = null;\n    /** @type {Array<StyleNode>} */\n    this['rules'] = null;\n    /** @type {string} */\n    this['parsedCssText'] = '';\n    /** @type {string} */\n    this['cssText'] = '';\n    /** @type {boolean} */\n    this['atRule'] = false;\n    /** @type {number} */\n    this['type'] = 0;\n    /** @type {string} */\n    this['keyframesName'] = '';\n    /** @type {string} */\n    this['selector'] = '';\n    /** @type {string} */\n    this['parsedSelector'] = '';\n  }\n}\n\nexport {StyleNode}\n\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n  let root = new StyleNode();\n  root['start'] = 0;\n  root['end'] = text.length\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n['rules']) {\n        n['rules'] = [];\n      }\n      let p = n;\n      let previous = p['rules'][p['rules'].length - 1] || null;\n      n = new StyleNode();\n      n['start'] = i + 1;\n      n['parent'] = p;\n      n['previous'] = previous;\n      p['rules'].push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n['end'] = i + 1;\n      n = n['parent'] || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n  let t = text.substring(node['start'], node['end'] - 1);\n  node['parsedCssText'] = node['cssText'] = t.trim();\n  if (node['parent']) {\n    let ss = node['previous'] ? node['previous']['end'] : node['parent']['start'];\n    t = text.substring(ss, node['start'] - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node['parsedSelector'] = node['selector'] = t.trim();\n    node['atRule'] = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node['atRule']) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node['type'] = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node['type'] = types.KEYFRAMES_RULE;\n        node['keyframesName'] =\n          node['selector'].split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node['type'] = types.MIXIN_RULE;\n      } else {\n        node['type'] = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node['rules'];\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n/**\n * stringify parsed css.\n * @param {StyleNode} node\n * @param {boolean=} preserveProperties\n * @param {string=} text\n * @return {string}\n */\nexport function stringify(node, preserveProperties, text = '') {\n  // calc rule cssText\n  let cssText = '';\n  if (node['cssText'] || node['rules']) {\n    let r$ = node['rules'];\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node['cssText'] :\n        removeCustomProps(node['cssText']);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node['selector']) {\n      text += node['selector'] + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node['selector']) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\n/**\n * @param {Array<StyleNode>} rules\n * @return {boolean}\n */\nfunction _hasMixinRules(rules) {\n  let r = rules[0];\n  return Boolean(r) && Boolean(r['selector']) && r['selector'].indexOf(VAR_START) === 0;\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\n/** @enum {number} */\nexport const types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nconst OPEN_BRACE = '{';\nconst CLOSE_BRACE = '}';\n\n// helper regexp's\nconst RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nconst VAR_START = '--';\nconst MEDIA_START = '@media';\nconst AT_START = '@';\n",null,"/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport const nativeShadow = !(window['ShadyDOM'] && window['ShadyDOM']['inUse']);\nlet nativeCssVariables_;\n\n/**\n * @param {(ShadyCSSOptions | ShadyCSSInterface)=} settings\n */\nfunction calcCssVariables(settings) {\n  if (settings && settings['shimcssproperties']) {\n    nativeCssVariables_ = false;\n  } else {\n    // chrome 49 has semi-working css vars, check if box-shadow works\n    // safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\n    // However, shim css custom properties are only supported with ShadyDOM enabled,\n    // so fall back on native if we do not detect ShadyDOM\n    // Edge 15: custom properties used in ::before and ::after will also be used in the parent element\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12414257/\n    nativeCssVariables_ = nativeShadow || Boolean(!navigator.userAgent.match(/AppleWebKit\\/601|Edge\\/15/) &&\n      window.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n  }\n}\n\nif (window.ShadyCSS && window.ShadyCSS.nativeCss !== undefined) {\n  nativeCssVariables_ = window.ShadyCSS.nativeCss;\n} else if (window.ShadyCSS) {\n  calcCssVariables(window.ShadyCSS);\n  // reset window variable to let ShadyCSS API take its place\n  window.ShadyCSS = undefined;\n} else {\n  calcCssVariables(window['WebComponents'] && window['WebComponents']['flags']);\n}\n\n// Hack for type error under new type inference which doesn't like that\n// nativeCssVariables is updated in a function and assigns the type\n// `function(): ?` instead of `boolean`.\nexport const nativeCssVariables = /** @type {boolean} */(nativeCssVariables_);\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const VAR_ASSIGN = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gi;\nexport const MIXIN_MATCH = /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi;\nexport const VAR_CONSUMED = /(--[\\w-]+)\\s*([:,;)]|$)/gi;\nexport const ANIMATION_MATCH = /(animation\\s*:)|(animation-name\\s*:)/;\nexport const MEDIA_MATCH = /@media\\s(.*)/;\nexport const IS_VAR = /^--/;\nexport const BRACKETED = /\\{[^}]*\\}/g;\nexport const HOST_PREFIX = '(?:^|[^.#[:])';\nexport const HOST_SUFFIX = '($|[.:[\\\\s>+~])';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {!Set<string>} */\nconst styleTextSet = new Set();\n\nexport const scopingAttribute = 'shady-unscoped';\n\n/**\n * Add a specifically-marked style to the document directly, and only one copy of that style.\n *\n * @param {!HTMLStyleElement} style\n * @return {undefined}\n */\nexport function processUnscopedStyle(style) {\n  const text = style.textContent;\n  if (!styleTextSet.has(text)) {\n    styleTextSet.add(text);\n    const newStyle = style.cloneNode(true);\n    document.head.appendChild(newStyle);\n  }\n}\n\n/**\n * Check if a style is supposed to be unscoped\n * @param {!HTMLStyleElement} style\n * @return {boolean} true if the style has the unscoping attribute\n */\nexport function isUnscopedStyle(style) {\n  return style.hasAttribute(scopingAttribute);\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables} from './style-settings.js';\nimport {parse, stringify, types, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {MEDIA_MATCH} from './common-regex.js';\nimport {processUnscopedStyle, isUnscopedStyle} from './unscoped-style-handler.js';\n\n/**\n * @param {string|StyleNode} rules\n * @param {function(StyleNode)=} callback\n * @return {string}\n */\nexport function toCssText (rules, callback) {\n  if (!rules) {\n    return '';\n  }\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @return {StyleNode}\n */\nexport function rulesForStyle(style) {\n  if (!style['__cssRules'] && style.textContent) {\n    style['__cssRules'] = parse(style.textContent);\n  }\n  return style['__cssRules'] || null;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\n/**\n * @param {StyleNode} rule\n * @return {boolean}\n */\nexport function isKeyframesSelector(rule) {\n  return Boolean(rule['parent']) &&\n  rule['parent']['type'] === types.KEYFRAMES_RULE;\n}\n\n/**\n * @param {StyleNode} node\n * @param {Function=} styleRuleCallback\n * @param {Function=} keyframesRuleCallback\n * @param {boolean=} onlyActiveRules\n */\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  let type = node['type'];\n  if (onlyActiveRules) {\n    if (type === types.MEDIA_RULE) {\n      let matchMedia = node['selector'].match(MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node['rules'];\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @param {Node} target\n * @param {Node} contextNode\n * @return {HTMLStyleElement}\n */\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  applyStyle(style, target, contextNode);\n  return style;\n}\n\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @return {HTMLStyleElement}\n */\nexport function createScopeStyle(cssText, moniker) {\n  let style = /** @type {HTMLStyleElement} */(document.createElement('style'));\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\n/**\n * Track the position of the last added style for placing placeholders\n * @type {Node}\n */\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\n/**\n * @param {string} moniker\n * @return {!Comment}\n */\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode['nextSibling'] : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @param {?Node} target\n * @param {?Node} contextNode\n */\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n    target.firstChild;\n  target.insertBefore(style, after);\n  if (!lastHeadApplyNode) {\n    lastHeadApplyNode = style;\n  } else {\n    // only update lastHeadApplyNode if the new style is inserted after the old lastHeadApplyNode\n    let position = style.compareDocumentPosition(lastHeadApplyNode);\n    if (position === Node.DOCUMENT_POSITION_PRECEDING) {\n      lastHeadApplyNode = style;\n    }\n  }\n}\n\n/**\n * @param {string} buildType\n * @return {boolean}\n */\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n/**\n * Walk from text[start] matching parens and\n * returns position of the outer end paren\n * @param {string} text\n * @param {number} start\n * @return {number}\n */\nexport function findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * @param {string} str\n * @param {function(string, string, string, string)} callback\n */\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\n/**\n * @param {Element} element\n * @param {string} value\n */\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (nativeShadow) {\n    element.setAttribute('class', value);\n  } else {\n    window['ShadyDOM']['nativeMethods']['setAttribute'].call(element, 'class', value);\n  }\n}\n\n/**\n * @param {Element | {is: string, extends: string}} element\n * @return {{is: string, typeExtension: string}}\n */\nexport function getIsExtends(element) {\n  let localName = element['localName'];\n  let is = '', typeExtension = '';\n  /*\n  NOTE: technically, this can be wrong for certain svg elements\n  with `-` in the name like `<font-face>`\n  */\n  if (localName) {\n    if (localName.indexOf('-') > -1) {\n      is = localName;\n    } else {\n      typeExtension = localName;\n      is = (element.getAttribute && element.getAttribute('is')) || '';\n    }\n  } else {\n    is = /** @type {?} */(element).is;\n    typeExtension = /** @type {?} */(element).extends;\n  }\n  return {is, typeExtension};\n}\n\n/**\n * @param {Element|DocumentFragment} element\n * @return {string}\n */\nexport function gatherStyleText(element) {\n  /** @type {!Array<string>} */\n  const styleTextParts = [];\n  const styles = /** @type {!NodeList<!HTMLStyleElement>} */(element.querySelectorAll('style'));\n  for (let i = 0; i < styles.length; i++) {\n    const style = styles[i];\n    if (isUnscopedStyle(style)) {\n      if (!nativeShadow) {\n        processUnscopedStyle(style);\n        style.parentNode.removeChild(style);\n      }\n    } else {\n      styleTextParts.push(style.textContent);\n      style.parentNode.removeChild(style);\n    }\n  }\n  return styleTextParts.join('').trim();\n}\n\n/**\n * Split a selector separated by commas into an array in a smart way\n * @param {string} selector\n * @return {!Array<string>}\n */\nexport function splitSelectorList(selector) {\n  const parts = [];\n  let part = '';\n  for (let i = 0; i >= 0 && i < selector.length; i++) {\n    // A selector with parentheses will be one complete part\n    if (selector[i] === '(') {\n      // find the matching paren\n      const end = findMatchingParen(selector, i);\n      // push the paren block into the part\n      part += selector.slice(i, end + 1);\n      // move the index to after the paren block\n      i = end;\n    } else if (selector[i] === ',') {\n      parts.push(part);\n      part = '';\n    } else {\n      part += selector[i];\n    }\n  }\n  // catch any pieces after the last comma\n  if (part) {\n    parts.push(part);\n  }\n  return parts;\n}\n\nconst CSS_BUILD_ATTR = 'css-build';\n\n/**\n * Return the polymer-css-build \"build type\" applied to this element\n *\n * @param {!HTMLElement} element\n * @return {string} Can be \"\", \"shady\", or \"shadow\"\n */\nexport function getCssBuild(element) {\n  if (element.__cssBuild === undefined) {\n    // try attribute first, as it is the common case\n    const attrValue = element.getAttribute(CSS_BUILD_ATTR);\n    if (attrValue) {\n      element.__cssBuild = attrValue;\n    } else {\n      const buildComment = getBuildComment(element);\n      if (buildComment !== '') {\n        // remove build comment so it is not needlessly copied into every element instance\n        removeBuildComment(element);\n      }\n      element.__cssBuild = buildComment;\n    }\n  }\n  return element.__cssBuild || '';\n}\n\n/**\n * Check if the given element, either a <template> or <style>, has been processed\n * by polymer-css-build.\n *\n * If so, then we can make a number of optimizations:\n * - polymer-css-build will decompose mixins into individual CSS Custom Properties,\n * so the ApplyShim can be skipped entirely.\n * - Under native ShadowDOM, the style text can just be copied into each instance\n * without modification\n * - If the build is \"shady\" and ShadyDOM is in use, the styling does not need\n * scoping beyond the shimming of CSS Custom Properties\n *\n * @param {!HTMLElement} element\n * @return {boolean}\n */\nexport function elementHasBuiltCss(element) {\n  return getCssBuild(element) !== '';\n}\n\n/**\n * For templates made with tagged template literals, polymer-css-build will\n * insert a comment of the form `<!--css-build:shadow-->`\n *\n * @param {!HTMLElement} element\n * @return {string}\n */\nexport function getBuildComment(element) {\n  const buildComment = element.localName === 'template' ? element.content.firstChild : element.firstChild;\n  if (buildComment instanceof Comment) {\n    const commentParts = buildComment.textContent.trim().split(':');\n    if (commentParts[0] === CSS_BUILD_ATTR) {\n      return commentParts[1];\n    }\n  }\n  return '';\n}\n\n/**\n * @param {!HTMLElement} element\n */\nfunction removeBuildComment(element) {\n  const buildComment = element.localName === 'template' ? element.content.firstChild : element.firstChild;\n  buildComment.parentNode.removeChild(buildComment);\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport * as StyleUtil from './style-util.js';\nimport {nativeShadow} from './style-settings.js';\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  /**\n   * Given a node and scope name, add a scoping class to each node\n   * in the tree. This facilitates transforming css into scoped rules.\n   * @param {!Node} node\n   * @param {string} scope\n   * @param {boolean=} shouldRemoveScope\n   * @deprecated\n   */\n  dom(node, scope, shouldRemoveScope) {\n    const fn = (node) => {\n      this.element(node, scope || '', shouldRemoveScope);\n    };\n    this._transformDom(node, fn);\n  }\n\n  /**\n   * Given a node and scope name, add a scoping class to each node in the tree.\n   * @param {!Node} node\n   * @param {string} scope\n   */\n  domAddScope(node, scope) {\n    const fn = (node) => {\n      this.element(node, scope || '');\n    };\n    this._transformDom(node, fn);\n  }\n\n  /**\n   * @param {!Node} startNode\n   * @param {!function(!Node)} transformer\n   */\n  _transformDom(startNode, transformer) {\n    if (startNode.nodeType === Node.ELEMENT_NODE) {\n      transformer(startNode)\n    }\n    let c$ = (startNode.localName === 'template') ?\n      // In case the template is in svg context, fall back to the node\n      // since it won't be an HTMLTemplateElement with a .content property\n      (startNode.content || startNode._content || startNode).childNodes :\n      startNode.children || startNode.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], transformer);\n      }\n    }\n  }\n\n  /**\n   * @param {?} element\n   * @param {?} scope\n   * @param {?=} shouldRemoveScope\n   */\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            StyleUtil.setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          StyleUtil.setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  /**\n   * Given a node, replace the scoping class to each subnode in the tree.\n   * @param {!Node} node\n   * @param {string} oldScope\n   * @param {string} newScope\n   */\n  domReplaceScope(node, oldScope, newScope) {\n    const fn = (node) => {\n      this.element(node, oldScope, true);\n      this.element(node, newScope);\n    };\n    this._transformDom(node, fn);\n  }\n  /**\n   * Given a node, remove the scoping class to each subnode in the tree.\n   * @param {!Node} node\n   * @param {string} oldScope\n   */\n  domRemoveScope(node, oldScope) {\n    const fn = (node) => {\n      this.element(node, oldScope || '', true);\n    };\n    this._transformDom(node, fn);\n  }\n\n  /**\n   * @param {?} element\n   * @param {?} styleRules\n   * @param {?=} callback\n   * @param {string=} cssBuild\n   */\n  elementStyles(element, styleRules, callback, cssBuild = '') {\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = '';\n    if (nativeShadow || cssBuild === 'shady') {\n      cssText = StyleUtil.toCssText(styleRules, callback);\n    } else {\n      let {is, typeExtension} = StyleUtil.getIsExtends(element);\n      cssText = this.css(styleRules, is, typeExtension, callback) + '\\n\\n';\n    }\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? `[is=${scope}]` : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  /**\n   * transforms a css rule to a scoped rule.\n   *\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule['selector'] = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = StyleUtil.splitSelectorList(rule['selector']);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.filter((part) => Boolean(part)).join(COMPLEX_SELECTOR_SEP);\n  }\n\n  /**\n   * @param {string} selector\n   * @return {string}\n   */\n  _twiddleNthPlus(selector) {\n    return selector.replace(NTH, (m, type, inside) => {\n      if (inside.indexOf('+') > -1) {\n        inside = inside.replace(/\\+/g, '___');\n      } else if (inside.indexOf('___') > -1) {\n        inside = inside.replace(/___/g, '+');\n      }\n      return `:${type}(${inside})`;\n    });\n  }\n\n  /**\n   * Preserve `:matches()` selectors by replacing them with MATCHES_REPLACMENT\n   * and returning an array of `:matches()` selectors.\n   * Use `_replacesMatchesPseudo` to replace the `:matches()` parts\n   *\n   * @param {string} selector\n   * @return {{selector: string, matches: !Array<string>}}\n   */\n  _preserveMatchesPseudo(selector) {\n    /** @type {!Array<string>} */\n    const matches = [];\n    let match;\n    while ((match = selector.match(MATCHES))) {\n      const start = match.index;\n      const end = StyleUtil.findMatchingParen(selector, start);\n      if (end === -1) {\n        throw new Error(`${match.input} selector missing ')'`)\n      }\n      const part = selector.slice(start, end + 1);\n      selector = selector.replace(part, MATCHES_REPLACEMENT);\n      matches.push(part);\n    }\n    return {selector, matches};\n  }\n\n  /**\n   * Replace MATCHES_REPLACMENT character with the given set of `:matches()`\n   * selectors.\n   *\n   * @param {string} selector\n   * @param {!Array<string>} matches\n   * @return {string}\n   */\n  _replaceMatchesPseudo(selector, matches) {\n    const parts = selector.split(MATCHES_REPLACEMENT);\n    return matches.reduce((acc, cur, idx) => acc + cur + parts[idx + 1], parts[0]);\n  }\n\n/**\n * @param {string} selector\n * @param {string} scope\n * @param {string=} hostScope\n */\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    let isNth = NTH.test(selector);\n    if (isNth) {\n      selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`)\n      selector = this._twiddleNthPlus(selector);\n    }\n    // Preserve selectors like `:-webkit-any` so that SIMPLE_SELECTOR_SEP does\n    // not get confused by spaces inside the pseudo selector\n    const isMatches = MATCHES.test(selector);\n    /** @type {!Array<string>} */\n    let matches;\n    if (isMatches) {\n      ({selector, matches} = this._preserveMatchesPseudo(selector));\n    }\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    // replace `:matches()` selectors\n    if (isMatches) {\n      selector = this._replaceMatchesPseudo(selector, matches);\n    }\n    if (isNth) {\n      selector = this._twiddleNthPlus(selector);\n    }\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule['selector'] = rule['parsedSelector'];\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  normalizeRootSelector(rule) {\n    if (rule['selector'] === ROOT) {\n      rule['selector'] = 'html';\n    }\n  }\n\n/**\n * @param {string} selector\n */\n  _transformDocumentSelector(selector) {\n    if (selector.match(HOST)) {\n      // remove ':host' type selectors in document rules\n      return '';\n    } else if (selector.match(SLOTTED)) {\n      return this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR)\n    } else {\n      return this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n    }\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\nconst MATCHES = /:(?:matches|any|-(?:webkit|moz)-any)/;\nconst MATCHES_REPLACEMENT = '\\u{e000}';\n\nexport default new StyleTransformer()\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse, StyleNode} from './css-parse.js';\nimport {nativeShadow, nativeCssVariables} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport StyleProperties from './style-properties.js';\nimport {ensureStylePlaceholder, getStylePlaceholder} from './style-placeholder.js';\nimport StyleInfo from './style-info.js';\nimport StyleCache from './style-cache.js';\nimport {flush as watcherFlush, getOwnerScope, getCurrentScope} from './document-watcher.js';\nimport templateMap from './template-map.js';\nimport * as ApplyShimUtils from './apply-shim-utils.js';\nimport {updateNativeProperties, detectMixin} from './common-utils.js';\nimport {CustomStyleInterfaceInterface} from './custom-style-interface.js'; // eslint-disable-line no-unused-vars\n\n/**\n * @const {StyleCache}\n */\nconst styleCache = new StyleCache();\n\nexport default class ScopingShim {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = /** @type {!HTMLElement} */(document.documentElement);\n    let ast = new StyleNode();\n    ast['rules'] = [];\n    this._documentOwnerStyleInfo = StyleInfo.set(this._documentOwner, new StyleInfo(ast));\n    this._elementsHaveApplied = false;\n    this._applyShim = null;\n    /** @type {?CustomStyleInterfaceInterface} */\n    this._customStyleInterface = null;\n  }\n  flush() {\n    watcherFlush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  }\n  _gatherStyles(template) {\n    return StyleUtil.gatherStyleText(template.content);\n  }\n  /**\n   * Prepare the styling and template for the given element type\n   *\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplate(template, elementName, typeExtension) {\n    this.prepareTemplateDom(template, elementName);\n    this.prepareTemplateStyles(template, elementName, typeExtension);\n  }\n  /**\n   * Prepare styling for the given element type\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplateStyles(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    // style placeholders are only used when ShadyDOM is active\n    if (!nativeShadow) {\n      ensureStylePlaceholder(elementName);\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = StyleUtil.getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n    };\n    // check if the styling has mixin definitions or uses\n    this._ensure();\n    let hasMixins = !StyleUtil.elementHasBuiltCss(template) && detectMixin(cssText);\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && nativeCssVariables && this._applyShim) {\n      this._applyShim['transformRules'](ast, elementName);\n    }\n    template['_styleAst'] = ast;\n\n    let ownPropertyNames = [];\n    if (!nativeCssVariables) {\n      ownPropertyNames = StyleProperties.decorateStyles(template['_styleAst']);\n    }\n    if (!ownPropertyNames.length || nativeCssVariables) {\n      let root = nativeShadow ? template.content : null;\n      let placeholder = getStylePlaceholder(elementName);\n      let style = this._generateStaticStyle(info, template['_styleAst'], root, placeholder, cssBuild);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  /**\n   * Prepare template for the given element type\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   */\n  prepareTemplateDom(template, elementName) {\n    const cssBuild = StyleUtil.getCssBuild(template);\n    if (!nativeShadow && cssBuild !== 'shady' && !template._domPrepared) {\n      template._domPrepared = true;\n      StyleTransformer.domAddScope(template.content, elementName);\n    }\n  }\n  /**\n   * @param {!{is: string, extends: (string|undefined)}} info\n   * @param {!StyleNode} rules\n   * @param {DocumentFragment} shadowroot\n   * @param {Node} placeholder\n   * @param {string} cssBuild\n   */\n  _generateStaticStyle(info, rules, shadowroot, placeholder, cssBuild) {\n    let cssText = StyleTransformer.elementStyles(info, rules, null, cssBuild);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let {is, typeExtension} = StyleUtil.getIsExtends(host);\n    let placeholder = getStylePlaceholder(is)\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template['_styleAst'];\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = StyleUtil.getCssBuild(template);\n    }\n    const styleInfo = new StyleInfo(\n      ast,\n      placeholder,\n      ownStylePropertyNames,\n      is,\n      typeExtension,\n      cssBuild\n    );\n    // only set the style info after this element has registered its template\n    if (template) {\n      StyleInfo.set(host, styleInfo);\n    }\n    return styleInfo;\n  }\n  _ensureApplyShim() {\n    if (this._applyShim) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.ApplyShim) {\n      this._applyShim = window.ShadyCSS.ApplyShim;\n      this._applyShim['invalidCallback'] = ApplyShimUtils.invalidate;\n    }\n  }\n  _ensureCustomStyleInterface() {\n    if (this._customStyleInterface) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.CustomStyleInterface) {\n      this._customStyleInterface = /** @type {!CustomStyleInterfaceInterface} */(window.ShadyCSS.CustomStyleInterface);\n      /** @type {function(!HTMLStyleElement)} */\n      this._customStyleInterface['transformCallback'] = (style) => {this.transformCustomStyleForDocument(style)};\n      this._customStyleInterface['validateCallback'] = () => {\n        requestAnimationFrame(() => {\n          if (this._customStyleInterface['enqueued'] || this._elementsHaveApplied) {\n            this.flushCustomStyles();\n          }\n        })\n      };\n    }\n  }\n  _ensure() {\n    this._ensureApplyShim();\n    this._ensureCustomStyleInterface();\n  }\n  /**\n   * Flush and apply custom styles to document\n   */\n  flushCustomStyles() {\n    this._ensure();\n    if (!this._customStyleInterface) {\n      return;\n    }\n    let customStyles = this._customStyleInterface['processStyles']();\n    // early return if custom-styles don't need validation\n    if (!this._customStyleInterface['enqueued']) {\n      return;\n    }\n    if (!nativeCssVariables) {\n      this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n      this._applyCustomStyles(customStyles);\n    } else {\n      this._revalidateCustomStyleApplyShim(customStyles);\n    }\n    this._customStyleInterface['enqueued'] = false;\n    // if custom elements have upgraded and there are no native css variables, we must recalculate the whole tree\n    if (this._elementsHaveApplied && !nativeCssVariables) {\n      this.styleDocument();\n    }\n  }\n  /**\n   * Apply styles for the given element\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} overrideProps\n   */\n  styleElement(host, overrideProps) {\n    let styleInfo = StyleInfo.get(host);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (!nativeCssVariables) {\n      this.styleElementShimVariables(host, styleInfo);\n    } else {\n      this.styleElementNativeVariables(host, styleInfo);\n    }\n  }\n  /**\n   * @param {!HTMLElement} host\n   * @param {!StyleInfo} styleInfo\n   */\n  styleElementShimVariables(host, styleInfo) {\n    this.flush();\n    this._updateProperties(host, styleInfo);\n    if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n      this._applyStyleProperties(host, styleInfo);\n    }\n  }\n  /**\n   * @param {!HTMLElement} host\n   * @param {!StyleInfo} styleInfo\n   */\n  styleElementNativeVariables(host, styleInfo) {\n    const { is } = StyleUtil.getIsExtends(host);\n    if (styleInfo.overrideStyleProperties) {\n      updateNativeProperties(host, styleInfo.overrideStyleProperties);\n    }\n    const template = templateMap[is];\n    // bail early if there is no shadowroot for this element\n    if (!template && !this._isRootOwner(host)) {\n      return;\n    }\n    // bail early if the template was built with polymer-css-build\n    if (template && StyleUtil.elementHasBuiltCss(template)) {\n      return;\n    }\n    if (template && template._style && !ApplyShimUtils.templateIsValid(template)) {\n      // update template\n      if (!ApplyShimUtils.templateIsValidating(template)) {\n        this._ensure();\n        this._applyShim && this._applyShim['transformRules'](template['_styleAst'], is);\n        template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n        ApplyShimUtils.startValidatingTemplate(template);\n      }\n      // update instance if native shadowdom\n      if (nativeShadow) {\n        let root = host.shadowRoot;\n        if (root) {\n          let style = root.querySelector('style');\n          if (style) {\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n      }\n      styleInfo.styleRules = template['_styleAst'];\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = StyleUtil.getIsExtends(host).is;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules, styleInfo.cssBuild);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  /**\n   * Update styles of the whole document\n   *\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    this.styleSubtree(this._documentOwner, properties);\n  }\n  /**\n   * Update styles of a subtree\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} properties\n   */\n  styleSubtree(host, properties) {\n    let root = host.shadowRoot;\n    if (root || this._isRootOwner(host)) {\n      this.styleElement(host, properties);\n    }\n    // process the shadowdom children of `host`\n    let shadowChildren = root && (root.children || root.childNodes);\n    if (shadowChildren) {\n      for (let i = 0; i < shadowChildren.length; i++) {\n        let c = /** @type {!HTMLElement} */(shadowChildren[i]);\n        this.styleSubtree(c);\n      }\n    } else {\n      // process the lightdom children of `host`\n      let children = host.children || host.childNodes;\n      if (children) {\n        for (let i = 0; i < children.length; i++) {\n          let c = /** @type {!HTMLElement} */(children[i]);\n          this.styleSubtree(c);\n        }\n      }\n    }\n  }\n  /* Custom Style operations */\n  _revalidateCustomStyleApplyShim(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        this._revalidateApplyShim(s);\n      }\n    }\n  }\n  _applyCustomStyles(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        StyleProperties.applyCustomStyle(s, this._documentOwnerStyleInfo.styleProperties);\n      }\n    }\n  }\n  transformCustomStyleForDocument(style) {\n    let ast = StyleUtil.rulesForStyle(style);\n    const cssBuild = StyleUtil.getCssBuild(style);\n    if (cssBuild !== this._documentOwnerStyleInfo.cssBuild) {\n      this._documentOwnerStyleInfo.cssBuild = cssBuild;\n    }\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (nativeCssVariables && cssBuild === '') {\n        this._ensure();\n        this._applyShim && this._applyShim['transformRule'](rule);\n      }\n    });\n    if (nativeCssVariables) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules['rules'].push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (nativeCssVariables && this._applyShim) {\n      let ast = StyleUtil.rulesForStyle(style);\n      this._ensure();\n      this._applyShim['transformRules'](ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!nativeCssVariables) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value ? value.trim() : '';\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!nativeCssVariables) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n  /**\n   * @param {!Element} node\n   * @param {string} scope\n   */\n  scopeNode(node, scope) {\n    StyleTransformer.element(node, scope);\n  }\n  /**\n   * @param {!Element} node\n   * @param {string} scope\n   */\n  unscopeNode(node, scope) {\n    StyleTransformer.element(node, scope, true);\n  }\n  /**\n   * @param {!Node} node\n   * @return {string}\n   */\n  scopeForNode(node) {\n    return getOwnerScope(node);\n  }\n  /**\n   * @param {!Element} node\n   * @return {string}\n   */\n  currentScopeForNode(node) {\n    return getCurrentScope(node);\n  }\n}\n\n/* exports */\n/* eslint-disable no-self-assign */\nScopingShim.prototype['flush'] = ScopingShim.prototype.flush;\nScopingShim.prototype['prepareTemplate'] = ScopingShim.prototype.prepareTemplate;\nScopingShim.prototype['styleElement'] = ScopingShim.prototype.styleElement;\nScopingShim.prototype['styleDocument'] = ScopingShim.prototype.styleDocument;\nScopingShim.prototype['styleSubtree'] = ScopingShim.prototype.styleSubtree;\nScopingShim.prototype['getComputedStyleValue'] = ScopingShim.prototype.getComputedStyleValue;\nScopingShim.prototype['setElementClass'] = ScopingShim.prototype.setElementClass;\nScopingShim.prototype['_styleInfoForNode'] = ScopingShim.prototype._styleInfoForNode;\nScopingShim.prototype['transformCustomStyleForDocument'] = ScopingShim.prototype.transformCustomStyleForDocument;\nScopingShim.prototype['getStyleAst'] = ScopingShim.prototype.getStyleAst;\nScopingShim.prototype['styleAstToString'] = ScopingShim.prototype.styleAstToString;\nScopingShim.prototype['flushCustomStyles'] = ScopingShim.prototype.flushCustomStyles;\nScopingShim.prototype['scopeNode'] = ScopingShim.prototype.scopeNode;\nScopingShim.prototype['unscopeNode'] = ScopingShim.prototype.unscopeNode;\nScopingShim.prototype['scopeForNode'] = ScopingShim.prototype.scopeForNode;\nScopingShim.prototype['currentScopeForNode'] = ScopingShim.prototype.currentScopeForNode;\n/* eslint-enable no-self-assign */\nObject.defineProperties(ScopingShim.prototype, {\n  'nativeShadow': {\n    get() {\n      return nativeShadow;\n    }\n  },\n  'nativeCss': {\n    get() {\n      return nativeCssVariables;\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport {getIsExtends, elementHasBuiltCss} from './style-util.js';\n\nexport let flush = function() {};\n\n/**\n * @param {!Element} element\n * @return {!Array<string>}\n */\nfunction getClasses(element) {\n  let classes = [];\n  if (element.classList) {\n    classes = Array.from(element.classList);\n  } else if (element instanceof window['SVGElement'] && element.hasAttribute('class')) {\n    classes = element.getAttribute('class').split(/\\s+/);\n  }\n  return classes;\n}\n\n/**\n * @param {!Element} element\n * @return {string}\n */\nexport function getCurrentScope(element) {\n  let classes = getClasses(element);\n  let idx = classes.indexOf(StyleTransformer.SCOPE_NAME);\n  if (idx > -1) {\n    return classes[idx + 1];\n  }\n  return '';\n}\n\n/**\n * @param {!Node} node\n */\nexport function getOwnerScope(node) {\n  const ownerRoot = node.getRootNode();\n  if (ownerRoot === node || ownerRoot === node.ownerDocument) {\n    return '';\n  }\n  const host = /** @type {!ShadowRoot} */(ownerRoot).host;\n  if (!host) {\n    // this may actually be a document fragment\n    return '';\n  }\n  return getIsExtends(host).is;\n}\n\n/**\n * @param {!Element} element\n */\nexport function ensureCorrectScope(element) {\n  const currentScope = getCurrentScope(element);\n  const ownerRoot = element.getRootNode();\n  if (ownerRoot === element) {\n    return;\n  }\n  if (currentScope && ownerRoot === element.ownerDocument) {\n    // node was scoped, but now is in document\n    StyleTransformer.domRemoveScope(element, currentScope);\n  } else if (ownerRoot instanceof ShadowRoot) {\n    const ownerScope = getOwnerScope(element);\n    if (ownerScope !== currentScope) {\n      // node was scoped, but not by its current owner\n      StyleTransformer.domReplaceScope(element, currentScope, ownerScope);\n    }\n  }\n}\n\n/**\n * @param {!HTMLElement|!HTMLDocument} element\n */\nexport function ensureCorrectSubtreeScoping(element) {\n  // find unscoped subtree nodes\n  const unscopedNodes = window['ShadyDOM']['nativeMethods']['querySelectorAll'].call(\n    element, `:not(.${StyleTransformer.SCOPE_NAME})`);\n\n  for (let j = 0; j < unscopedNodes.length; j++) {\n    // it's possible, during large batch inserts, that nodes that aren't\n    // scoped within the current scope were added.\n    // To make sure that any unscoped nodes that were inserted in the current batch are correctly styled,\n    // query all unscoped nodes and force their style-scope to be applied.\n    // This could happen if a sub-element appended an unscoped node in its shadowroot and this function\n    // runs on a parent element of the host of that unscoped node:\n    // parent-element -> element -> unscoped node\n    // Here unscoped node should have the style-scope element, not parent-element.\n    const unscopedNode = unscopedNodes[j];\n    const scopeForPreviouslyUnscopedNode = getOwnerScope(unscopedNode);\n    if (scopeForPreviouslyUnscopedNode) {\n      StyleTransformer.element(unscopedNode, scopeForPreviouslyUnscopedNode);\n    }\n  }\n}\n\n/**\n * @param {HTMLElement} el\n * @return {boolean}\n */\nfunction isElementWithBuiltCss(el) {\n  if (el.localName === 'style' || el.localName === 'template') {\n    return elementHasBuiltCss(el);\n  }\n  return false;\n}\n\n/**\n * @param {Array<MutationRecord|null>|null} mxns\n */\nfunction handler(mxns) {\n  for (let x=0; x < mxns.length; x++) {\n    let mxn = mxns[x];\n    if (mxn.target === document.documentElement ||\n      mxn.target === document.head) {\n      continue;\n    }\n    for (let i=0; i < mxn.addedNodes.length; i++) {\n      let n = mxn.addedNodes[i];\n      if (n.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      n = /** @type {HTMLElement} */(n); // eslint-disable-line no-self-assign\n      let root = n.getRootNode();\n      let currentScope = getCurrentScope(n);\n      // node was scoped, but now is in document\n      // If this element has built css, we must not remove scoping as this node\n      // will be used as a template or style without re - applying scoping as an optimization\n      if (currentScope && root === n.ownerDocument && !isElementWithBuiltCss(n)) {\n        StyleTransformer.domRemoveScope(n, currentScope);\n      } else if (root instanceof ShadowRoot) {\n        const newScope = getOwnerScope(n);\n        // rescope current node and subtree if necessary\n        if (newScope !== currentScope) {\n          StyleTransformer.domReplaceScope(n, currentScope, newScope);\n        }\n        // make sure all the subtree elements are scoped correctly\n        ensureCorrectSubtreeScoping(n);\n      }\n    }\n  }\n}\n\n// if native Shadow DOM is being used, or ShadyDOM handles dynamic scoiping, do not activate the MutationObserver\nif (!nativeShadow && !(window['ShadyDOM'] && window['ShadyDOM']['handlesDynamicScoping'])) {\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window['customElements'] &&\n    !window['customElements']['polyfillWrapFlushCallback']);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window['HTMLImports']) {\n      window['HTMLImports']['whenReady'](delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport * as RX from './common-regex.js';\nimport StyleInfo from './style-info.js';\n\n// TODO: dedupe with shady\n/**\n * @param {string} selector\n * @return {boolean}\n * @this {Element}\n */\nconst matchesSelector = function(selector) {\n  const method = this.matches || this.matchesSelector ||\n    this.mozMatchesSelector || this.msMatchesSelector ||\n    this.oMatchesSelector || this.webkitMatchesSelector;\n  return method && method.call(this, selector);\n};\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n/**\n * decorates styles with rule info and returns an array of used style property names\n *\n * @param {StyleNode} rules\n * @return {Array<string>}\n */\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule['rules'] = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = RX.VAR_ASSIGN;\n      let cssText = rule['parsedCssText'];\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule['parsedCssText']);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(RX.BRACKETED, '')\n      .replace(RX.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = RX.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        RX.MIXIN_MATCH.lastIndex = 0;\n        m = RX.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule['cssText'] = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule['cssText'];\n    let output = rule['cssText'];\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = RX.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule['cssText'] = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  /**\n   * @param {StyleNode} rules\n   * @param {Element} element\n   */\n  propertyDataFromStyles(rules, element) {\n    let props = {};\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, (rule) => {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        this.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule['parsedSelector'];\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          this.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  /**\n   * @param {Element} scope\n   * @param {StyleNode} rule\n   * @param {string} cssBuild\n   * @param {function(Object)} callback\n   */\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let {is, typeExtension} = StyleUtil.getIsExtends(scope);\n    let hostScope = is ?\n      StyleTransformer._calcHostScope(is, typeExtension) :\n      'html';\n    let parsedSelector = rule['parsedSelector'];\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host because `:host` does not work with `matches`\n      if (!rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n/**\n * @param {Element} scope\n * @param {StyleNode} rules\n * @param {string} cssBuild\n * @return {Object}\n */\n  hostAndRootPropertiesForScope(scope, rules, cssBuild) {\n    let hostProps = {}, rootProps = {};\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, (rule) => {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      this.whenHostOrRootRule(scope, rule, cssBuild, (info) => {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            this.collectProperties(rule, hostProps);\n          } else {\n            this.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  /**\n   * @param {Element} element\n   * @param {Object} properties\n   * @param {string} scopeSelector\n   */\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let {is, typeExtension} = StyleUtil.getIsExtends(element);\n    let hostSelector = StyleTransformer\n      ._calcHostScope(is, typeExtension);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(RX.HOST_PREFIX + rxHostSelector +\n      RX.HOST_SUFFIX);\n    let {styleRules: rules, cssBuild} = StyleInfo.get(element);\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule['cssText']) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    }, cssBuild);\n  }\n\n  /**\n   * @param {Element} element\n   * @param {StyleNode} rules\n   * @param {string} scopeSelector\n   * @return {Object}\n   */\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule['keyframesName']] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  /**\n   * @param {StyleNode} keyframesRule\n   * @return {function(string):string}\n   */\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n/**\n * Transforms `@keyframes` names to be unique for the current host.\n * Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n *\n * @param {StyleNode} rule\n * @param {string} scopeId\n */\n  _scopeKeyframes(rule, scopeId) {\n    // Animation names are of the form [\\w-], so ensure that the name regex does not partially apply\n    // to similarly named keyframe names by checking for a word boundary at the beginning and\n    // a non-word boundary or `-` at the end.\n    rule.keyframesNameRx = new RegExp(`\\\\b${rule['keyframesName']}(?!\\\\B|-)`, 'g');\n    rule.transformedKeyframesName = rule['keyframesName'] + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    rule['selector'] = rule.transformedSelector.replace(\n        rule['keyframesName'], rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  /**\n   * @param {StyleNode} rule\n   * @param {RegExp} hostRx\n   * @param {string} hostSelector\n   * @param {string} scopeId\n   */\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = StyleUtil.splitSelectorList(selector);\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule['selector'] = parts.join(',');\n  }\n\n  /**\n   * @param {Element} element\n   * @param {string} selector\n   * @param {string} old\n   */\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      StyleUtil.setElementClassRaw(element, v);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element\n   * @param {Object} properties\n   * @param {string} selector\n   * @param {HTMLStyleElement} style\n   * @return {HTMLStyleElement}\n   */\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s['_useCount']--;\n      if (s['_useCount'] <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        if (IS_IE && cssText.indexOf('@media') > -1) {\n            // @media rules may be stale in IE 10 and 11\n            // refresh the text content of the style to revalidate them.\n          style.textContent = cssText;\n        }\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style['_useCount'] = style['_useCount'] || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style['_useCount']++;\n      }\n      styleInfo.customStyle = style;\n    }\n    return style;\n  }\n\n  /**\n   * @param {Element} style\n   * @param {Object} properties\n   */\n  applyCustomStyle(style, properties) {\n    let rules = StyleUtil.rulesForStyle(/** @type {HTMLStyleElement} */(style));\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      let css = rule['cssText'] = rule['parsedCssText'];\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(/** @type {string} */(css));\n        // replace with reified properties, scenario is same as mixin\n        rule['cssText'] = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\n/**\n * @param {number} n\n * @param {Array<number>} bits\n */\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32, 10);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexport default new StyleProperties();","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/** @const {string} */\nconst infoKey = '__styleInfo';\n\nexport default class StyleInfo {\n  /**\n   * @param {Element} node\n   * @return {StyleInfo}\n   */\n  static get(node) {\n    if (node) {\n      return node[infoKey];\n    } else {\n      return null;\n    }\n  }\n  /**\n   * @param {!Element} node\n   * @param {StyleInfo} styleInfo\n   * @return {StyleInfo}\n   */\n  static set(node, styleInfo) {\n    node[infoKey] = styleInfo;\n    return styleInfo;\n  }\n  /**\n   * @param {StyleNode} ast\n   * @param {Node=} placeholder\n   * @param {Array<string>=} ownStylePropertyNames\n   * @param {string=} elementName\n   * @param {string=} typeExtension\n   * @param {string=} cssBuild\n   */\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    /** @type {StyleNode} */\n    this.styleRules = ast || null;\n    /** @type {Node} */\n    this.placeholder = placeholder || null;\n    /** @type {!Array<string>} */\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    /** @type {Array<Object>} */\n    this.overrideStyleProperties = null;\n    /** @type {string} */\n    this.elementName = elementName || '';\n    /** @type {string} */\n    this.cssBuild = cssBuild || '';\n    /** @type {string} */\n    this.typeExtension = typeExtension || '';\n    /** @type {Object<string, string>} */\n    this.styleProperties = null;\n    /** @type {?string} */\n    this.scopeSelector = null;\n    /** @type {HTMLStyleElement} */\n    this.customStyle = null;\n  }\n  _getStyleRules() {\n    return this.styleRules;\n  }\n}\n\n/* eslint-disable-next-line no-self-assign */\nStyleInfo.prototype['_getStyleRules'] = StyleInfo.prototype._getStyleRules;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util.js';\nimport {nativeShadow} from './style-settings.js';\n\n/** @type {!Object<string, !Node>} */\nconst placeholderMap = {};\n\n/**\n * @param {string} elementName\n * @return {Node}\n */\nexport function getStylePlaceholder(elementName) {\n  return placeholderMap[elementName] || null;\n}\n\n/**\n * @param {string} elementName\n */\nexport function ensureStylePlaceholder(elementName) {\n  if (!placeholderMap[elementName]) {\n    placeholderMap[elementName] = applyStylePlaceHolder(elementName);\n  }\n}\n\n/**\n * @const {CustomElementRegistry}\n */\nconst ce = window['customElements'];\nif (ce && !nativeShadow) {\n  /**\n   * @const {function(this:CustomElementRegistry, string,function(new:HTMLElement),{extends: string}=)}\n   */\n  const origDefine = ce['define'];\n  /**\n   * @param {string} name\n   * @param {function(new:HTMLElement)} clazz\n   * @param {{extends: string}=} options\n   */\n  const wrappedDefine = (name, clazz, options) => {\n    ensureStylePlaceholder(name);\n    origDefine.call(/** @type {!CustomElementRegistry} */(ce), name, clazz, options);\n  };\n  ce['define'] = wrappedDefine;\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\nexport default class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/**\n * @const {!Object<string, !HTMLTemplateElement>}\n */\nconst templateMap = {};\nexport default templateMap;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\nimport templateMap from './template-map.js';\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/*\n * Utilities for handling invalidating apply-shim mixins for a given template.\n *\n * The invalidation strategy involves keeping track of the \"current\" version of a template's mixins, and updating that count when a mixin is invalidated.\n * The template\n */\n\n/** @const {string} */\nconst CURRENT_VERSION = '_applyShimCurrentVersion';\n\n/** @const {string} */\nconst NEXT_VERSION = '_applyShimNextVersion';\n\n/** @const {string} */\nconst VALIDATING_VERSION = '_applyShimValidatingVersion';\n\n/**\n * @const {Promise<void>}\n */\nconst promise = Promise.resolve();\n\n/**\n * @param {string} elementName\n */\nexport function invalidate(elementName){\n  let template = templateMap[elementName];\n  if (template) {\n    invalidateTemplate(template);\n  }\n}\n\n/**\n * This function can be called multiple times to mark a template invalid\n * and signal that the style inside must be regenerated.\n *\n * Use `startValidatingTemplate` to begin an asynchronous validation cycle.\n * During that cycle, call `templateIsValidating` to see if the template must\n * be revalidated\n * @param {HTMLTemplateElement} template\n */\nexport function invalidateTemplate(template) {\n  // default the current version to 0\n  template[CURRENT_VERSION] = template[CURRENT_VERSION] || 0;\n  // ensure the \"validating for\" flag exists\n  template[VALIDATING_VERSION] = template[VALIDATING_VERSION] || 0;\n  // increment the next version\n  template[NEXT_VERSION] = (template[NEXT_VERSION] || 0) + 1;\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValid(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValid(template);\n  }\n  return true;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValid(template) {\n  return template[CURRENT_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValidating(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValidating(template);\n  }\n  return false;\n}\n\n/**\n * Returns true if the template is currently invalid and `startValidating` has been called since the last invalidation.\n * If false, the template must be validated.\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValidating(template) {\n  return !templateIsValid(template) && template[VALIDATING_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * the template is marked as `validating` for one microtask so that all instances\n * found in the tree crawl of `applyStyle` will update themselves,\n * but the template will only be updated once.\n * @param {string} elementName\n*/\nexport function startValidating(elementName) {\n  let template = templateMap[elementName];\n  startValidatingTemplate(template);\n}\n\n/**\n * Begin an asynchronous invalidation cycle.\n * This should be called after every validation of a template\n *\n * After one microtask, the template will be marked as valid until the next call to `invalidateTemplate`\n * @param {HTMLTemplateElement} template\n */\nexport function startValidatingTemplate(template) {\n  // remember that the current \"next version\" is the reason for this validation cycle\n  template[VALIDATING_VERSION] = template[NEXT_VERSION];\n  // however, there only needs to be one async task to clear the counters\n  if (!template._validating) {\n    template._validating = true;\n    promise.then(function() {\n      // sync the current version to let future invalidations cause a refresh cycle\n      template[CURRENT_VERSION] = template[NEXT_VERSION];\n      template._validating = false;\n    });\n  }\n}\n\n/**\n * @return {boolean}\n */\nexport function elementsAreInvalid() {\n  for (let elementName in templateMap) {\n    let template = templateMap[elementName];\n    if (!templateIsValid(template)) {\n      return true;\n    }\n  }\n  return false;\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport { MIXIN_MATCH, VAR_ASSIGN } from './common-regex.js';\n\n/**\n * @param {Element} element\n * @param {Object=} properties\n */\nexport function updateNativeProperties(element, properties) {\n  // remove previous properties\n  for (let p in properties) {\n    // NOTE: for bc with shim, don't apply null values.\n    if (p === null) {\n      element.style.removeProperty(p);\n    } else {\n      element.style.setProperty(p, properties[p]);\n    }\n  }\n}\n\n/**\n * @param {Element} element\n * @param {string} property\n * @return {string}\n */\nexport function getComputedStyleValue(element, property) {\n  /**\n   * @const {string}\n   */\n  const value = window.getComputedStyle(element).getPropertyValue(property);\n  if (!value) {\n    return '';\n  } else {\n    return value.trim();\n  }\n}\n\n/**\n * return true if `cssText` contains a mixin definition or consumption\n * @param {string} cssText\n * @return {boolean}\n */\nexport function detectMixin(cssText) {\n  const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n  // reset state of the regexes\n  MIXIN_MATCH.lastIndex = 0;\n  VAR_ASSIGN.lastIndex = 0;\n  return has;\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport ScopingShim from '../src/scoping-shim.js';\nimport {nativeCssVariables, nativeShadow} from '../src/style-settings.js';\n\n/** @const {ScopingShim} */\nconst scopingShim = new ScopingShim();\n\nlet ApplyShim, CustomStyleInterface;\n\nif (window['ShadyCSS']) {\n  ApplyShim = window['ShadyCSS']['ApplyShim'];\n  CustomStyleInterface = window['ShadyCSS']['CustomStyleInterface'];\n}\n\nwindow.ShadyCSS = {\n  ScopingShim: scopingShim,\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} elementExtends\n   */\n  prepareTemplate(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplate(template, elementName, elementExtends)\n  },\n\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   */\n  prepareTemplateDom(template, elementName) {\n    scopingShim.prepareTemplateDom(template, elementName);\n  },\n\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} elementExtends\n   */\n  prepareTemplateStyles(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplateStyles(template, elementName, elementExtends)\n  },\n  /**\n   * @param {!HTMLElement} element\n   * @param {Object=} properties\n   */\n  styleSubtree(element, properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleSubtree(element, properties);\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   */\n  styleElement(element) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleElement(element);\n  },\n\n  /**\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleDocument(properties);\n  },\n\n  flushCustomStyles() {\n    scopingShim.flushCustomStyles();\n  },\n\n  /**\n   * @param {Element} element\n   * @param {string} property\n   * @return {string}\n   */\n  getComputedStyleValue(element, property) {\n    return scopingShim.getComputedStyleValue(element, property);\n  },\n\n  nativeCss: nativeCssVariables,\n\n  nativeShadow: nativeShadow\n};\n\nif (ApplyShim) {\n  window.ShadyCSS.ApplyShim = ApplyShim;\n}\n\nif (CustomStyleInterface) {\n  window.ShadyCSS.CustomStyleInterface = CustomStyleInterface;\n}"]}