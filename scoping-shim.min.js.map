{"version":3,"sources":["src/css-parse.js"," [synthetic:util/global] ","src/style-settings.js","src/common-regex.js","src/unscoped-style-handler.js","src/style-util.js","src/style-transformer.js","src/style-info.js","src/style-properties.js","src/style-placeholder.js","src/style-cache.js","src/document-watcher.js","src/template-map.js","src/apply-shim-utils.js","src/scoping-shim.js","src/common-utils.js","entrypoints/scoping-shim.js"],"names":["$jscomp.global","constructor","StyleNode","parse","text","replace","RX$$module$src$css_parse.comments","RX$$module$src$css_parse.port","parseCss","root","length","n","i","l","OPEN_BRACE","p","previous","push","CLOSE_BRACE","node","t","substring","trim","ss","_expandUnicodeEscapes","RX$$module$src$css_parse.multipleSpaces","lastIndexOf","s","indexOf","AT_START","MEDIA_START","types$$module$src$css_parse.MEDIA_RULE","match","RX$$module$src$css_parse.keyframesRule","types$$module$src$css_parse.KEYFRAMES_RULE","split","pop","VAR_START","types$$module$src$css_parse.MIXIN_RULE","types$$module$src$css_parse.STYLE_RULE","r$","r","code","repeat","stringify","preserveProperties","cssText","rules","RX$$module$src$css_parse.customProp","RX$$module$src$css_parse.mixinProp","RX$$module$src$css_parse.mixinApply","RX$$module$src$css_parse.varApply","STYLE_RULE","KEYFRAMES_RULE","MEDIA_RULE","MIXIN_RULE","comments","port","customProp","mixinProp","mixinApply","varApply","keyframesRule","multipleSpaces","nativeShadow","window","nativeCssVariables_","calcCssVariables","settings","navigator","userAgent","CSS","supports","ShadyCSS","undefined","nativeCss","nativeCssVariables","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","MEDIA_MATCH","BRACKETED","styleTextSet","Set","toCssText","callback","forEachRule","rulesForStyle","style","textContent","isKeyframesSelector","rule","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","type","matchMedia","matches","applyCss","moniker","target","contextNode","document","createElement","setAttribute","applyStyle","lastHeadApplyNode","head","insertBefore","nextSibling","firstChild","compareDocumentPosition","position","Node","DOCUMENT_POSITION_PRECEDING","findMatchingParen","start","level","processVariableAndFallback","str","end","inner","prefix","suffix","comma","value","fallback","setElementClassRaw","element","call","getIsExtends","localName","typeExtension","is","getAttribute","extends","splitSelectorList","selector","parts","part","slice","StyleTransformer","domAddScope","scope","$jscompDefaultExport","_transformDom","fn","startNode","transformer","nodeType","ELEMENT_NODE","c$","childNodes","content","_content","children","shouldRemoveScope","classList","remove","SCOPE_NAME","add","c","CLASS","newValue","domReplaceScope","oldScope","newScope","domRemoveScope","elementStyles","styleRules","cssBuildType","css","ext","hostScope","_calcHostScope","CSS_CLASS_PREFIX","isScoped","transformedSelector","_transformRuleCss","self","_transformComplexSelector","p$","filter","join","COMPLEX_SELECTOR_SEP","_twiddleNthPlus","NTH","m","inside","_preserveMatchesPseudo","MATCHES","index","MATCHES_REPLACEMENT","_replaceMatchesPseudo","stop","isNth","test","isMatches","ret","SLOTTED_START","HOST","SIMPLE_SELECTOR_SEP","info","_transformCompoundSelector","combinator","slottedIndex","SLOTTED","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","DIR_PAREN","before","dir","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","host","typeSelector","SELECTOR_NO_MATCH","normalizeRootSelector","ROOT","_transformDocumentSelector","SCOPE_DOC_SELECTOR","$jscomp.global.Object.defineProperties","RegExp","StyleInfo","ast","placeholder","ownStylePropertyNames","overrideStyleProperties","customStyle","scopeSelector","styleProperties","get","set","styleInfo","_getStyleRules","prototype","matchesSelector","method","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","IS_IE","StyleProperties","decorateStyles","props","keyframes","ruleIndex","decorateRule","propertyInfo","exec","name","onKeyframesRule","_keyframes","names","properties","collectProperties","hasProperties","Object","assign","any","valueForProperty","property","valueForProperties","propertyValue","lastIndex","colon","pp","propertyDataFromStyles","o","selectorToMatch","parseInt","key","whenHostOrRootRule","cssBuild","parsedSelector","isRoot","isHost","hostAndRootPropertiesForScope","hostProps","rootProps","_element","transformStyles","hostSelector","hostRx","HOST_PREFIX","rxHostSelector","HOST_SUFFIX","StyleInfo$$module$src$style_info.get","keyframeTransforms","_elementKeyframeTransforms","output","input","hasAnimations","keyframeNamesToTransform","keyframe","transform","keyframesRules","keyframesNameRx","transformedKeyframesName","scopeId","_keyframesRuleTransformer","applyCustomStyle","XSCOPE_NAME","placeholderMap","ce","origDefine","wrappedDefine","clazz","options","placeHolder","createComment","after","StyleCache","cache","store","tagname","styleElement","list","typeMax","shift","flush","handler","mxns","x","mxn","documentElement","addedNodes","getRootNode","classes","Array","from","hasAttribute","idx","ownerDocument","currentScope","DOCUMENT_FRAGMENT_NODE","j","unscopedNodes","unscopedNode","hostForUnscopedNode","rootForUnscopedNode","scopeForPreviouslyUnscopedNode","observer","MutationObserver","observe","childList","subtree","delayedStart","body","requestAnimationFrame","readyState","listener","removeEventListener","addEventListener","takeRecords","module$src$document_watcher.flush","templateMap","promise","Promise","resolve","invalidate","elementName","template","templateIsValid","startValidatingTemplate","_validating","then","styleCache","ScopingShim","_scopeCounter","_documentOwner","_documentOwnerStyleInfo","StyleInfo$$module$src$style_info.set","_elementsHaveApplied","_customStyleInterface","_applyShim","?.prototype","getStyleAst","styleAstToString","prepareTemplate","prepareTemplateDom","prepareTemplateStyles","_prepared","querySelector","styleTextParts","styles","querySelectorAll","scopingAttribute","has","newStyle","cloneNode","appendChild","parentNode","removeChild","__cssBuild","_ensure","_cssBuild","ownPropertyNames","shadowroot","_style","_ownPropertyNames","_domPrepared","_ensureCustomStyleInterface","CustomStyleInterface","transformCustomStyleForDocument","flushCustomStyles","_ensureApplyShim","ApplyShim","customStyles","_revalidateCustomStyleApplyShim","_updateProperties","_applyCustomStyles","styleDocument","overrideProps","_isRootOwner","removeProperty","setProperty","shadowRoot","entry","pn","cachedStyle","cacheEntry","oldScopeSelector","cachedScopeSelector","id","applyElementStyle","v","_styleOwnerForNode","owner","ownerStyleInfo","create","hostAndRootProps","propertiesMatchingHost","propertyData","overrides","reify","getOwnPropertyNames","styleSubtree","shadowChildren","documentRule","_transformRule","getComputedStyleValue","getComputedStyle","getPropertyValue","setElementClass","classString","scopeName","classAttr","k$","_styleInfoForNode","defineProperties","scopingShim","elementExtends"],"mappings":"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","file":"scoping-shim.min.js","sourcesContent":["/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n/** @unrestricted */\nclass StyleNode {\n  constructor() {\n    /** @type {number} */\n    this['start'] = 0;\n    /** @type {number} */\n    this['end'] = 0;\n    /** @type {StyleNode} */\n    this['previous'] = null;\n    /** @type {StyleNode} */\n    this['parent'] = null;\n    /** @type {Array<StyleNode>} */\n    this['rules'] = null;\n    /** @type {string} */\n    this['parsedCssText'] = '';\n    /** @type {string} */\n    this['cssText'] = '';\n    /** @type {boolean} */\n    this['atRule'] = false;\n    /** @type {number} */\n    this['type'] = 0;\n    /** @type {string} */\n    this['keyframesName'] = '';\n    /** @type {string} */\n    this['selector'] = '';\n    /** @type {string} */\n    this['parsedSelector'] = '';\n  }\n}\n\nexport {StyleNode}\n\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n  let root = new StyleNode();\n  root['start'] = 0;\n  root['end'] = text.length\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n['rules']) {\n        n['rules'] = [];\n      }\n      let p = n;\n      let previous = p['rules'][p['rules'].length - 1] || null;\n      n = new StyleNode();\n      n['start'] = i + 1;\n      n['parent'] = p;\n      n['previous'] = previous;\n      p['rules'].push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n['end'] = i + 1;\n      n = n['parent'] || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n  let t = text.substring(node['start'], node['end'] - 1);\n  node['parsedCssText'] = node['cssText'] = t.trim();\n  if (node['parent']) {\n    let ss = node['previous'] ? node['previous']['end'] : node['parent']['start'];\n    t = text.substring(ss, node['start'] - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node['parsedSelector'] = node['selector'] = t.trim();\n    node['atRule'] = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node['atRule']) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node['type'] = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node['type'] = types.KEYFRAMES_RULE;\n        node['keyframesName'] =\n          node['selector'].split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node['type'] = types.MIXIN_RULE;\n      } else {\n        node['type'] = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node['rules'];\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n/**\n * stringify parsed css.\n * @param {StyleNode} node\n * @param {boolean=} preserveProperties\n * @param {string=} text\n * @return {string}\n */\nexport function stringify(node, preserveProperties, text = '') {\n  // calc rule cssText\n  let cssText = '';\n  if (node['cssText'] || node['rules']) {\n    let r$ = node['rules'];\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node['cssText'] :\n        removeCustomProps(node['cssText']);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node['selector']) {\n      text += node['selector'] + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node['selector']) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\n/**\n * @param {Array<StyleNode>} rules\n * @return {boolean}\n */\nfunction _hasMixinRules(rules) {\n  let r = rules[0];\n  return Boolean(r) && Boolean(r['selector']) && r['selector'].indexOf(VAR_START) === 0;\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\n/** @enum {number} */\nexport const types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nconst OPEN_BRACE = '{';\nconst CLOSE_BRACE = '}';\n\n// helper regexp's\nconst RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nconst VAR_START = '--';\nconst MEDIA_START = '@media';\nconst AT_START = '@';\n",null,"/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport const nativeShadow = !(window['ShadyDOM'] && window['ShadyDOM']['inUse']);\nlet nativeCssVariables_;\n\n/**\n * @param {(ShadyCSSOptions | ShadyCSSInterface)=} settings\n */\nfunction calcCssVariables(settings) {\n  if (settings && settings['shimcssproperties']) {\n    nativeCssVariables_ = false;\n  } else {\n    // chrome 49 has semi-working css vars, check if box-shadow works\n    // safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\n    // However, shim css custom properties are only supported with ShadyDOM enabled,\n    // so fall back on native if we do not detect ShadyDOM\n    // Edge 15: custom properties used in ::before and ::after will also be used in the parent element\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12414257/\n    nativeCssVariables_ = nativeShadow || Boolean(!navigator.userAgent.match(/AppleWebKit\\/601|Edge\\/15/) &&\n      window.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n  }\n}\n\nif (window.ShadyCSS && window.ShadyCSS.nativeCss !== undefined) {\n  nativeCssVariables_ = window.ShadyCSS.nativeCss;\n} else if (window.ShadyCSS) {\n  calcCssVariables(window.ShadyCSS);\n  // reset window variable to let ShadyCSS API take its place\n  window.ShadyCSS = undefined;\n} else {\n  calcCssVariables(window['WebComponents'] && window['WebComponents']['flags']);\n}\n\n// Hack for type error under new type inference which doesn't like that\n// nativeCssVariables is updated in a function and assigns the type\n// `function(): ?` instead of `boolean`.\nexport const nativeCssVariables = /** @type {boolean} */(nativeCssVariables_);\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const VAR_ASSIGN = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gi;\nexport const MIXIN_MATCH = /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi;\nexport const VAR_CONSUMED = /(--[\\w-]+)\\s*([:,;)]|$)/gi;\nexport const ANIMATION_MATCH = /(animation\\s*:)|(animation-name\\s*:)/;\nexport const MEDIA_MATCH = /@media\\s(.*)/;\nexport const IS_VAR = /^--/;\nexport const BRACKETED = /\\{[^}]*\\}/g;\nexport const HOST_PREFIX = '(?:^|[^.#[:])';\nexport const HOST_SUFFIX = '($|[.:[\\\\s>+~])';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {!Set<string>} */\nconst styleTextSet = new Set();\n\nexport const scopingAttribute = 'shady-unscoped';\n\n/**\n * Add a specifically-marked style to the document directly, and only one copy of that style.\n *\n * @param {!HTMLStyleElement} style\n * @return {undefined}\n */\nexport function processUnscopedStyle(style) {\n  const text = style.textContent;\n  if (!styleTextSet.has(text)) {\n    styleTextSet.add(text);\n    const newStyle = style.cloneNode(true);\n    document.head.appendChild(newStyle);\n  }\n}\n\n/**\n * Check if a style is supposed to be unscoped\n * @param {!HTMLStyleElement} style\n * @return {boolean} true if the style has the unscoping attribute\n */\nexport function isUnscopedStyle(style) {\n  return style.hasAttribute(scopingAttribute);\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables} from './style-settings.js';\nimport {parse, stringify, types, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {MEDIA_MATCH} from './common-regex.js';\nimport {processUnscopedStyle, isUnscopedStyle} from './unscoped-style-handler.js';\n\n/**\n * @param {string|StyleNode} rules\n * @param {function(StyleNode)=} callback\n * @return {string}\n */\nexport function toCssText (rules, callback) {\n  if (!rules) {\n    return '';\n  }\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @return {StyleNode}\n */\nexport function rulesForStyle(style) {\n  if (!style['__cssRules'] && style.textContent) {\n    style['__cssRules'] = parse(style.textContent);\n  }\n  return style['__cssRules'] || null;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\n/**\n * @param {StyleNode} rule\n * @return {boolean}\n */\nexport function isKeyframesSelector(rule) {\n  return Boolean(rule['parent']) &&\n  rule['parent']['type'] === types.KEYFRAMES_RULE;\n}\n\n/**\n * @param {StyleNode} node\n * @param {Function=} styleRuleCallback\n * @param {Function=} keyframesRuleCallback\n * @param {boolean=} onlyActiveRules\n */\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  let type = node['type'];\n  if (onlyActiveRules) {\n    if (type === types.MEDIA_RULE) {\n      let matchMedia = node['selector'].match(MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node['rules'];\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @param {Node} target\n * @param {Node} contextNode\n * @return {HTMLStyleElement}\n */\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  applyStyle(style, target, contextNode);\n  return style;\n}\n\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @return {HTMLStyleElement}\n */\nexport function createScopeStyle(cssText, moniker) {\n  let style = /** @type {HTMLStyleElement} */(document.createElement('style'));\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\n/**\n * Track the position of the last added style for placing placeholders\n * @type {Node}\n */\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\n/**\n * @param {string} moniker\n * @return {!Comment}\n */\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode['nextSibling'] : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @param {?Node} target\n * @param {?Node} contextNode\n */\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n    target.firstChild;\n  target.insertBefore(style, after);\n  if (!lastHeadApplyNode) {\n    lastHeadApplyNode = style;\n  } else {\n    // only update lastHeadApplyNode if the new style is inserted after the old lastHeadApplyNode\n    let position = style.compareDocumentPosition(lastHeadApplyNode);\n    if (position === Node.DOCUMENT_POSITION_PRECEDING) {\n      lastHeadApplyNode = style;\n    }\n  }\n}\n\n/**\n * @param {string} buildType\n * @return {boolean}\n */\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n/**\n * @param {Element} element\n * @return {?string}\n */\nexport function getCssBuildType(element) {\n  return element.getAttribute('css-build');\n}\n\n/**\n * Walk from text[start] matching parens and\n * returns position of the outer end paren\n * @param {string} text\n * @param {number} start\n * @return {number}\n */\nexport function findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * @param {string} str\n * @param {function(string, string, string, string)} callback\n */\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\n/**\n * @param {Element} element\n * @param {string} value\n */\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (nativeShadow) {\n    element.setAttribute('class', value);\n  } else {\n    window['ShadyDOM']['nativeMethods']['setAttribute'].call(element, 'class', value);\n  }\n}\n\n/**\n * @param {Element | {is: string, extends: string}} element\n * @return {{is: string, typeExtension: string}}\n */\nexport function getIsExtends(element) {\n  let localName = element['localName'];\n  let is = '', typeExtension = '';\n  /*\n  NOTE: technically, this can be wrong for certain svg elements\n  with `-` in the name like `<font-face>`\n  */\n  if (localName) {\n    if (localName.indexOf('-') > -1) {\n      is = localName;\n    } else {\n      typeExtension = localName;\n      is = (element.getAttribute && element.getAttribute('is')) || '';\n    }\n  } else {\n    is = /** @type {?} */(element).is;\n    typeExtension = /** @type {?} */(element).extends;\n  }\n  return {is, typeExtension};\n}\n\n/**\n * @param {Element|DocumentFragment} element\n * @return {string}\n */\nexport function gatherStyleText(element) {\n  /** @type {!Array<string>} */\n  const styleTextParts = [];\n  const styles = /** @type {!NodeList<!HTMLStyleElement>} */(element.querySelectorAll('style'));\n  for (let i = 0; i < styles.length; i++) {\n    const style = styles[i];\n    if (isUnscopedStyle(style)) {\n      if (!nativeShadow) {\n        processUnscopedStyle(style);\n        style.parentNode.removeChild(style);\n      }\n    } else {\n      styleTextParts.push(style.textContent);\n      style.parentNode.removeChild(style);\n    }\n  }\n  return styleTextParts.join('').trim();\n}\n\n/**\n * Split a selector separated by commas into an array in a smart way\n * @param {string} selector\n * @return {!Array<string>}\n */\nexport function splitSelectorList(selector) {\n  const parts = [];\n  let part = '';\n  for (let i = 0; i >= 0 && i < selector.length; i++) {\n    // A selector with parentheses will be one complete part\n    if (selector[i] === '(') {\n      // find the matching paren\n      const end = findMatchingParen(selector, i);\n      // push the paren block into the part\n      part += selector.slice(i, end + 1);\n      // move the index to after the paren block\n      i = end;\n    } else if (selector[i] === ',') {\n      parts.push(part);\n      part = '';\n    } else {\n      part += selector[i];\n    }\n  }\n  // catch any pieces after the last comma\n  if (part) {\n    parts.push(part);\n  }\n  // if there were no commas, just push the whole selector as a \"part\"\n  if (parts.length === 0) {\n    parts.push(selector);\n  }\n  return parts;\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport * as StyleUtil from './style-util.js';\nimport {nativeShadow} from './style-settings.js';\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  /**\n   * Given a node and scope name, add a scoping class to each node\n   * in the tree. This facilitates transforming css into scoped rules.\n   * @param {!Node} node\n   * @param {string} scope\n   * @param {boolean=} shouldRemoveScope\n   * @deprecated\n   */\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node['__styleScoped']) {\n      node['__styleScoped'] = null;\n    } else {\n      const fn = (node) => {\n        this.element(node, scope || '', shouldRemoveScope);\n      };\n      this._transformDom(node, fn);\n    }\n  }\n\n  /**\n   * Given a node and scope name, add a scoping class to each node in the tree.\n   * @param {!Node} node\n   * @param {string} scope\n   */\n  domAddScope(node, scope) {\n    // one time optimization to skip scoping...\n    if (node['__styleScoped']) {\n      node['__styleScoped'] = null;\n    } else {\n      const fn = (node) => {\n        this.element(node, scope || '');\n      };\n      this._transformDom(node, fn);\n    }\n  }\n\n  /**\n   * @param {!Node} startNode\n   * @param {!function(!Node)} transformer\n   */\n  _transformDom(startNode, transformer) {\n    if (startNode.nodeType === Node.ELEMENT_NODE) {\n      transformer(startNode)\n    }\n    let c$ = (startNode.localName === 'template') ?\n      // In case the template is in svg context, fall back to the node\n      // since it won't be an HTMLTemplateElement with a .content property\n      (startNode.content || startNode._content || startNode).childNodes :\n      startNode.children || startNode.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], transformer);\n      }\n    }\n  }\n\n  /**\n   * @param {?} element\n   * @param {?} scope\n   * @param {?=} shouldRemoveScope\n   */\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            StyleUtil.setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          StyleUtil.setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  /**\n   * Given a node, replace the scoping class to each subnode in the tree.\n   * @param {!Node} node\n   * @param {string} oldScope\n   * @param {string} newScope\n   */\n  domReplaceScope(node, oldScope, newScope) {\n    // one time optimization to skip scoping...\n    if (node['__styleScoped']) {\n      node['__styleScoped'] = null;\n    } else {\n      const fn = (node) => {\n        this.element(node, oldScope, true);\n        this.element(node, newScope);\n      };\n      this._transformDom(node, fn);\n    }\n  }\n  /**\n   * Given a node, remove the scoping class to each subnode in the tree.\n   * @param {!Node} node\n   * @param {string} oldScope\n   */\n  domRemoveScope(node, oldScope) {\n    // one time optimization to skip scoping...\n    if (node['__styleScoped']) {\n      node['__styleScoped'] = null;\n    } else {\n      const fn = (node) => {\n        this.element(node, oldScope || '', true);\n      };\n      this._transformDom(node, fn);\n    }\n  }\n\n  /**\n   * @param {?} element\n   * @param {?} styleRules\n   * @param {?=} callback\n   */\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element['__cssBuild'];\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = '';\n    if (nativeShadow || cssBuildType === 'shady') {\n      cssText = StyleUtil.toCssText(styleRules, callback);\n    } else {\n      let {is, typeExtension} = StyleUtil.getIsExtends(element);\n      cssText = this.css(styleRules, is, typeExtension, callback) + '\\n\\n';\n    }\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? `[is=${scope}]` : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  /**\n   * transforms a css rule to a scoped rule.\n   *\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule['selector'] = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = StyleUtil.splitSelectorList(rule['selector']);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.filter((part) => Boolean(part)).join(COMPLEX_SELECTOR_SEP);\n  }\n\n  /**\n   * @param {string} selector\n   * @return {string}\n   */\n  _twiddleNthPlus(selector) {\n    return selector.replace(NTH, (m, type, inside) => {\n      if (inside.indexOf('+') > -1) {\n        inside = inside.replace(/\\+/g, '___');\n      } else if (inside.indexOf('___') > -1) {\n        inside = inside.replace(/___/g, '+');\n      }\n      return `:${type}(${inside})`;\n    });\n  }\n\n  /**\n   * Preserve `:matches()` selectors by replacing them with MATCHES_REPLACMENT\n   * and returning an array of `:matches()` selectors.\n   * Use `_replacesMatchesPseudo` to replace the `:matches()` parts\n   *\n   * @param {string} selector\n   * @return {{selector: string, matches: !Array<string>}}\n   */\n  _preserveMatchesPseudo(selector) {\n    /** @type {!Array<string>} */\n    const matches = [];\n    let match;\n    while ((match = selector.match(MATCHES))) {\n      const start = match.index;\n      const end = StyleUtil.findMatchingParen(selector, start);\n      const part = selector.slice(start, end + 1);\n      selector = selector.replace(part, MATCHES_REPLACEMENT);\n      matches.push(part);\n    }\n    return {selector, matches};\n  }\n\n  /**\n   * Replace MATCHES_REPLACMENT character with the given set of `:matches()`\n   * selectors.\n   *\n   * @param {string} selector\n   * @param {!Array<string>} matches\n   * @return {string}\n   */\n  _replaceMatchesPseudo(selector, matches) {\n    return selector.replace(MATCHES_REPLACEMENT, () => matches.pop());\n  }\n\n/**\n * @param {string} selector\n * @param {string} scope\n * @param {string=} hostScope\n */\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    let isNth = NTH.test(selector);\n    if (isNth) {\n      selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`)\n      selector = this._twiddleNthPlus(selector);\n    }\n    // Preserve selectors like `:-webkit-any` so that SIMPLE_SELECTOR_SEP does\n    // not get confused by spaces inside the pseudo selector\n    const isMatches = MATCHES.test(selector);\n    /** @type {!Array<string>} */\n    let matches;\n    if (isMatches) {\n      let ret = this._preserveMatchesPseudo(selector);\n      selector = ret.selector;\n      matches = ret.matches;\n    }\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    // replace `:matches()` selectors\n    if (isMatches) {\n      selector = this._replaceMatchesPseudo(selector, matches);\n    }\n    if (isNth) {\n      selector = this._twiddleNthPlus(selector);\n    }\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule['selector'] = rule['parsedSelector'];\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  normalizeRootSelector(rule) {\n    if (rule['selector'] === ROOT) {\n      rule['selector'] = 'html';\n    }\n  }\n\n/**\n * @param {string} selector\n */\n  _transformDocumentSelector(selector) {\n    if (selector.match(HOST)) {\n      // remove ':host' type selectors in document rules\n      return '';\n    } else if (selector.match(SLOTTED)) {\n      return this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR)\n    } else {\n      return this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n    }\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\nconst MATCHES = /:(?:matches|any|-(?:webkit|moz)-any)/;\nconst MATCHES_REPLACEMENT = '\\u{1234}';\n\nexport default new StyleTransformer()\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/** @const {string} */\nconst infoKey = '__styleInfo';\n\nexport default class StyleInfo {\n  /**\n   * @param {Element} node\n   * @return {StyleInfo}\n   */\n  static get(node) {\n    if (node) {\n      return node[infoKey];\n    } else {\n      return null;\n    }\n  }\n  /**\n   * @param {!Element} node\n   * @param {StyleInfo} styleInfo\n   * @return {StyleInfo}\n   */\n  static set(node, styleInfo) {\n    node[infoKey] = styleInfo;\n    return styleInfo;\n  }\n  /**\n   * @param {StyleNode} ast\n   * @param {Node=} placeholder\n   * @param {Array<string>=} ownStylePropertyNames\n   * @param {string=} elementName\n   * @param {string=} typeExtension\n   * @param {string=} cssBuild\n   */\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    /** @type {StyleNode} */\n    this.styleRules = ast || null;\n    /** @type {Node} */\n    this.placeholder = placeholder || null;\n    /** @type {!Array<string>} */\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    /** @type {Array<Object>} */\n    this.overrideStyleProperties = null;\n    /** @type {string} */\n    this.elementName = elementName || '';\n    /** @type {string} */\n    this.cssBuild = cssBuild || '';\n    /** @type {string} */\n    this.typeExtension = typeExtension || '';\n    /** @type {Object<string, string>} */\n    this.styleProperties = null;\n    /** @type {?string} */\n    this.scopeSelector = null;\n    /** @type {HTMLStyleElement} */\n    this.customStyle = null;\n  }\n  _getStyleRules() {\n    return this.styleRules;\n  }\n}\n\nStyleInfo.prototype['_getStyleRules'] = StyleInfo.prototype._getStyleRules;","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport * as RX from './common-regex.js';\nimport StyleInfo from './style-info.js';\n\n// TODO: dedupe with shady\n/**\n * @param {string} selector\n * @return {boolean}\n * @this {Element}\n */\nconst matchesSelector = function(selector) {\n  const method = this.matches || this.matchesSelector ||\n    this.mozMatchesSelector || this.msMatchesSelector ||\n    this.oMatchesSelector || this.webkitMatchesSelector;\n  return method && method.call(this, selector);\n};\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n/**\n * decorates styles with rule info and returns an array of used style property names\n *\n * @param {StyleNode} rules\n * @return {Array<string>}\n */\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule['rules'] = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = RX.VAR_ASSIGN;\n      let cssText = rule['parsedCssText'];\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule['parsedCssText']);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(RX.BRACKETED, '')\n      .replace(RX.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = RX.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        RX.MIXIN_MATCH.lastIndex = 0;\n        m = RX.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule['cssText'] = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule['cssText'];\n    let output = rule['cssText'];\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = RX.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule['cssText'] = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  /**\n   * @param {StyleNode} rules\n   * @param {Element} element\n   */\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule['parsedSelector'];\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  /**\n   * @param {Element} scope\n   * @param {StyleNode} rule\n   * @param {string|undefined} cssBuild\n   * @param {function(Object)} callback\n   */\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let {is, typeExtension} = StyleUtil.getIsExtends(scope);\n    let hostScope = is ?\n      StyleTransformer._calcHostScope(is, typeExtension) :\n      'html';\n    let parsedSelector = rule['parsedSelector'];\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host because `:host` does not work with `matches`\n      if (!rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n/**\n * @param {Element} scope\n * @param {StyleNode} rules\n * @return {Object}\n */\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules['__cssBuild'];\n    StyleUtil.forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  /**\n   * @param {Element} element\n   * @param {Object} properties\n   * @param {string} scopeSelector\n   */\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let {is, typeExtension} = StyleUtil.getIsExtends(element);\n    let hostSelector = StyleTransformer\n      ._calcHostScope(is, typeExtension);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(RX.HOST_PREFIX + rxHostSelector +\n      RX.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule['cssText']) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  /**\n   * @param {Element} element\n   * @param {StyleNode} rules\n   * @param {string} scopeSelector\n   * @return {Object}\n   */\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule['keyframesName']] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  /**\n   * @param {StyleNode} keyframesRule\n   * @return {function(string):string}\n   */\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n/**\n * Transforms `@keyframes` names to be unique for the current host.\n * Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n *\n * @param {StyleNode} rule\n * @param {string} scopeId\n */\n  _scopeKeyframes(rule, scopeId) {\n    // Animation names are of the form [\\w-], so ensure that the name regex does not partially apply\n    // to similarly named keyframe names by checking for a word boundary at the beginning and\n    // a non-word boundary or `-` at the end.\n    rule.keyframesNameRx = new RegExp(`\\\\b${rule['keyframesName']}(?!\\\\B|-)`, 'g');\n    rule.transformedKeyframesName = rule['keyframesName'] + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    rule['selector'] = rule.transformedSelector.replace(\n        rule['keyframesName'], rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  /**\n   * @param {StyleNode} rule\n   * @param {RegExp} hostRx\n   * @param {string} hostSelector\n   * @param {string} scopeId\n   */\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = StyleUtil.splitSelectorList(selector);\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule['selector'] = parts.join(',');\n  }\n\n  /**\n   * @param {Element} element\n   * @param {string} selector\n   * @param {string} old\n   */\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      StyleUtil.setElementClassRaw(element, v);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element\n   * @param {Object} properties\n   * @param {string} selector\n   * @param {HTMLStyleElement} style\n   * @return {HTMLStyleElement}\n   */\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s['_useCount']--;\n      if (s['_useCount'] <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        if (IS_IE && cssText.indexOf('@media') > -1) {\n            // @media rules may be stale in IE 10 and 11\n            // refresh the text content of the style to revalidate them.\n          style.textContent = cssText;\n        }\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style['_useCount'] = style['_useCount'] || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style['_useCount']++;\n      }\n      styleInfo.customStyle = style;\n    }\n    return style;\n  }\n\n  /**\n   * @param {Element} style\n   * @param {Object} properties\n   */\n  applyCustomStyle(style, properties) {\n    let rules = StyleUtil.rulesForStyle(/** @type {HTMLStyleElement} */(style));\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      let css = rule['cssText'] = rule['parsedCssText'];\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(/** @type {string} */(css));\n        // replace with reified properties, scenario is same as mixin\n        rule['cssText'] = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\n/**\n * @param {number} n\n * @param {Array<number>} bits\n */\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32, 10);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexport default new StyleProperties();","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util.js';\nimport {nativeShadow} from './style-settings.js';\n\n/** @type {Object<string, !Node>} */\nlet placeholderMap = {};\n\n/**\n * @const {CustomElementRegistry}\n */\nconst ce = window['customElements'];\nif (ce && !nativeShadow) {\n  /**\n   * @const {function(this:CustomElementRegistry, string,function(new:HTMLElement),{extends: string}=)}\n   */\n  const origDefine = ce['define'];\n  /**\n   * @param {string} name\n   * @param {function(new:HTMLElement)} clazz\n   * @param {{extends: string}=} options\n   */\n  const wrappedDefine = (name, clazz, options) => {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    origDefine.call(/** @type {!CustomElementRegistry} */(ce), name, clazz, options);\n  };\n  ce['define'] = wrappedDefine;\n}\n\nexport default placeholderMap;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\nexport default class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport {getIsExtends} from './style-util.js';\n\nexport let flush = function() {};\n\n/**\n * @param {HTMLElement} element\n * @return {!Array<string>}\n */\nfunction getClasses(element) {\n  let classes = [];\n  if (element.classList) {\n    classes = Array.from(element.classList);\n  } else if (element instanceof window['SVGElement'] && element.hasAttribute('class')) {\n    classes = element.getAttribute('class').split(/\\s+/);\n  }\n  return classes;\n}\n\n/**\n * @param {HTMLElement} element\n * @return {string}\n */\nfunction getCurrentScope(element) {\n  let classes = getClasses(element);\n  let idx = classes.indexOf(StyleTransformer.SCOPE_NAME);\n  if (idx > -1) {\n    return classes[idx + 1];\n  }\n  return '';\n}\n\n/**\n * @param {Array<MutationRecord|null>|null} mxns\n */\nfunction handler(mxns) {\n  for (let x=0; x < mxns.length; x++) {\n    let mxn = mxns[x];\n    if (mxn.target === document.documentElement ||\n      mxn.target === document.head) {\n      continue;\n    }\n    for (let i=0; i < mxn.addedNodes.length; i++) {\n      let n = mxn.addedNodes[i];\n      if (n.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      n = /** @type {HTMLElement} */(n); // eslint-disable-line no-self-assign\n      let root = n.getRootNode();\n      let currentScope = getCurrentScope(n);\n      // node was scoped, but now is in document\n      if (currentScope && root === n.ownerDocument) {\n        StyleTransformer.domRemoveScope(n, currentScope);\n      } else if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n        let newScope;\n        let host = /** @type {ShadowRoot} */(root).host;\n        // element may no longer be in a shadowroot\n        if (!host) {\n          continue;\n        }\n        newScope = getIsExtends(host).is;\n        // rescope current node and subtree if necessary\n        if (newScope !== currentScope) {\n          StyleTransformer.domReplaceScope(n, currentScope, newScope);\n        }\n        // make sure all the subtree elements are scoped correctly\n        let unscopedNodes = window['ShadyDOM']['nativeMethods']['querySelectorAll'].call(\n          n, `:not(.${StyleTransformer.SCOPE_NAME})`);\n        for (let j = 0; j < unscopedNodes.length; j++) {\n          // it's possible, during large batch inserts, that nodes that aren't\n          // scoped within the current scope were added.\n          // To make sure that any unscoped nodes that were inserted in the current batch are correctly styled,\n          // query all unscoped nodes and force their style-scope to be applied.\n          // This could happen if a sub-element appended an unscoped node in its shadowroot and this function\n          // runs on a parent element of the host of that unscoped node:\n          // parent-element -> element -> unscoped node\n          // Here unscoped node should have the style-scope element, not parent-element.\n          const unscopedNode = unscopedNodes[j];\n          const rootForUnscopedNode = unscopedNode.getRootNode();\n          const hostForUnscopedNode = rootForUnscopedNode.host;\n          if (!hostForUnscopedNode) {\n            continue;\n          }\n          const scopeForPreviouslyUnscopedNode = getIsExtends(hostForUnscopedNode).is;\n          StyleTransformer.element(unscopedNode, scopeForPreviouslyUnscopedNode);\n        }\n      }\n    }\n  }\n}\n\nif (!nativeShadow) {\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window['customElements'] &&\n    !window['customElements']['polyfillWrapFlushCallback']);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window['HTMLImports']) {\n      window['HTMLImports']['whenReady'](delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/**\n * @const {!Object<string, !HTMLTemplateElement>}\n */\nconst templateMap = {};\nexport default templateMap;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\nimport templateMap from './template-map.js';\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/*\n * Utilities for handling invalidating apply-shim mixins for a given template.\n *\n * The invalidation strategy involves keeping track of the \"current\" version of a template's mixins, and updating that count when a mixin is invalidated.\n * The template\n */\n\n/** @const {string} */\nconst CURRENT_VERSION = '_applyShimCurrentVersion';\n\n/** @const {string} */\nconst NEXT_VERSION = '_applyShimNextVersion';\n\n/** @const {string} */\nconst VALIDATING_VERSION = '_applyShimValidatingVersion';\n\n/**\n * @const {Promise<void>}\n */\nconst promise = Promise.resolve();\n\n/**\n * @param {string} elementName\n */\nexport function invalidate(elementName){\n  let template = templateMap[elementName];\n  if (template) {\n    invalidateTemplate(template);\n  }\n}\n\n/**\n * This function can be called multiple times to mark a template invalid\n * and signal that the style inside must be regenerated.\n *\n * Use `startValidatingTemplate` to begin an asynchronous validation cycle.\n * During that cycle, call `templateIsValidating` to see if the template must\n * be revalidated\n * @param {HTMLTemplateElement} template\n */\nexport function invalidateTemplate(template) {\n  // default the current version to 0\n  template[CURRENT_VERSION] = template[CURRENT_VERSION] || 0;\n  // ensure the \"validating for\" flag exists\n  template[VALIDATING_VERSION] = template[VALIDATING_VERSION] || 0;\n  // increment the next version\n  template[NEXT_VERSION] = (template[NEXT_VERSION] || 0) + 1;\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValid(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValid(template);\n  }\n  return true;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValid(template) {\n  return template[CURRENT_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValidating(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValidating(template);\n  }\n  return false;\n}\n\n/**\n * Returns true if the template is currently invalid and `startValidating` has been called since the last invalidation.\n * If false, the template must be validated.\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValidating(template) {\n  return !templateIsValid(template) && template[VALIDATING_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * the template is marked as `validating` for one microtask so that all instances\n * found in the tree crawl of `applyStyle` will update themselves,\n * but the template will only be updated once.\n * @param {string} elementName\n*/\nexport function startValidating(elementName) {\n  let template = templateMap[elementName];\n  startValidatingTemplate(template);\n}\n\n/**\n * Begin an asynchronous invalidation cycle.\n * This should be called after every validation of a template\n *\n * After one microtask, the template will be marked as valid until the next call to `invalidateTemplate`\n * @param {HTMLTemplateElement} template\n */\nexport function startValidatingTemplate(template) {\n  // remember that the current \"next version\" is the reason for this validation cycle\n  template[VALIDATING_VERSION] = template[NEXT_VERSION];\n  // however, there only needs to be one async task to clear the counters\n  if (!template._validating) {\n    template._validating = true;\n    promise.then(function() {\n      // sync the current version to let future invalidations cause a refresh cycle\n      template[CURRENT_VERSION] = template[NEXT_VERSION];\n      template._validating = false;\n    });\n  }\n}\n\n/**\n * @return {boolean}\n */\nexport function elementsAreInvalid() {\n  for (let elementName in templateMap) {\n    let template = templateMap[elementName];\n    if (!templateIsValid(template)) {\n      return true;\n    }\n  }\n  return false;\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse, StyleNode} from './css-parse.js';\nimport {nativeShadow, nativeCssVariables} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport StyleProperties from './style-properties.js';\nimport placeholderMap from './style-placeholder.js';\nimport StyleInfo from './style-info.js';\nimport StyleCache from './style-cache.js';\nimport {flush as watcherFlush} from './document-watcher.js';\nimport templateMap from './template-map.js';\nimport * as ApplyShimUtils from './apply-shim-utils.js';\nimport {updateNativeProperties, detectMixin} from './common-utils.js';\nimport {CustomStyleInterfaceInterface} from './custom-style-interface.js'; // eslint-disable-line no-unused-vars\n\n/**\n * @const {StyleCache}\n */\nconst styleCache = new StyleCache();\n\nexport default class ScopingShim {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = /** @type {!HTMLElement} */(document.documentElement);\n    let ast = new StyleNode();\n    ast['rules'] = [];\n    this._documentOwnerStyleInfo = StyleInfo.set(this._documentOwner, new StyleInfo(ast));\n    this._elementsHaveApplied = false;\n    this._applyShim = null;\n    /** @type {?CustomStyleInterfaceInterface} */\n    this._customStyleInterface = null;\n  }\n  flush() {\n    watcherFlush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  }\n  _gatherStyles(template) {\n    return StyleUtil.gatherStyleText(template.content);\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  /**\n   * Prepare the styling and template for the given element type\n   *\n   * @param {HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplate(template, elementName, typeExtension) {\n    this.prepareTemplateDom(template, elementName);\n    this.prepareTemplateStyles(template, elementName, typeExtension);\n  }\n  /**\n   * Prepare styling for the given element type\n   * @param {HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplateStyles(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    // check if the styling has mixin definitions or uses\n    this._ensure();\n    let hasMixins = detectMixin(cssText)\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && nativeCssVariables && this._applyShim) {\n      this._applyShim['transformRules'](ast, elementName);\n    }\n    template['_styleAst'] = ast;\n    template._cssBuild = cssBuild;\n\n    let ownPropertyNames = [];\n    if (!nativeCssVariables) {\n      ownPropertyNames = StyleProperties.decorateStyles(template['_styleAst']);\n    }\n    if (!ownPropertyNames.length || nativeCssVariables) {\n      let root = nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template['_styleAst'], root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  /**\n   * Prepare template for the given element type\n   * @param {HTMLTemplateElement} template\n   * @param {string} elementName\n   */\n  prepareTemplateDom(template, elementName) {\n    if (!nativeShadow && !template._domPrepared) {\n      template._domPrepared = true;\n      StyleTransformer.domAddScope(template.content, elementName);\n    }\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer.elementStyles(info, rules);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let {is, typeExtension} = StyleUtil.getIsExtends(host);\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template['_styleAst'];\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  }\n  _ensureApplyShim() {\n    if (this._applyShim) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.ApplyShim) {\n      this._applyShim = window.ShadyCSS.ApplyShim;\n      this._applyShim['invalidCallback'] = ApplyShimUtils.invalidate;\n    }\n  }\n  _ensureCustomStyleInterface() {\n    if (this._customStyleInterface) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.CustomStyleInterface) {\n      this._customStyleInterface = /** @type {!CustomStyleInterfaceInterface} */(window.ShadyCSS.CustomStyleInterface);\n      /** @type {function(!HTMLStyleElement)} */\n      this._customStyleInterface['transformCallback'] = (style) => {this.transformCustomStyleForDocument(style)};\n      this._customStyleInterface['validateCallback'] = () => {\n        requestAnimationFrame(() => {\n          if (this._customStyleInterface['enqueued'] || this._elementsHaveApplied) {\n            this.flushCustomStyles();\n          }\n        })\n      };\n    }\n  }\n  _ensure() {\n    this._ensureApplyShim();\n    this._ensureCustomStyleInterface();\n  }\n  /**\n   * Flush and apply custom styles to document\n   */\n  flushCustomStyles() {\n    this._ensure();\n    if (!this._customStyleInterface) {\n      return;\n    }\n    let customStyles = this._customStyleInterface['processStyles']();\n    // early return if custom-styles don't need validation\n    if (!this._customStyleInterface['enqueued']) {\n      return;\n    }\n    if (!nativeCssVariables) {\n      this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n      this._applyCustomStyles(customStyles);\n    } else {\n      this._revalidateCustomStyleApplyShim(customStyles);\n    }\n    this._customStyleInterface['enqueued'] = false;\n    // if custom elements have upgraded and there are no native css variables, we must recalculate the whole tree\n    if (this._elementsHaveApplied && !nativeCssVariables) {\n      this.styleDocument();\n    }\n  }\n  /**\n   * Apply styles for the given element\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} overrideProps\n   */\n  styleElement(host, overrideProps) {\n    let {is} = StyleUtil.getIsExtends(host);\n    let styleInfo = StyleInfo.get(host);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (!nativeCssVariables) {\n      this.flush();\n      this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    } else {\n      if (styleInfo.overrideStyleProperties) {\n        updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      if (template && template._style && !ApplyShimUtils.templateIsValid(template)) {\n        // update template\n        if (!ApplyShimUtils.templateIsValidating(template)) {\n          this._ensure();\n          this._applyShim && this._applyShim['transformRules'](template['_styleAst'], is);\n          template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          ApplyShimUtils.startValidatingTemplate(template);\n        }\n        // update instance if native shadowdom\n        if (nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template['_styleAst'];\n      }\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = StyleUtil.getIsExtends(host).is;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  /**\n   * Update styles of the whole document\n   *\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    this.styleSubtree(this._documentOwner, properties);\n  }\n  /**\n   * Update styles of a subtree\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} properties\n   */\n  styleSubtree(host, properties) {\n    let root = host.shadowRoot;\n    if (root || this._isRootOwner(host)) {\n      this.styleElement(host, properties);\n    }\n    // process the shadowdom children of `host`\n    let shadowChildren = root && (root.children || root.childNodes);\n    if (shadowChildren) {\n      for (let i = 0; i < shadowChildren.length; i++) {\n        let c = /** @type {!HTMLElement} */(shadowChildren[i]);\n        this.styleSubtree(c);\n      }\n    } else {\n      // process the lightdom children of `host`\n      let children = host.children || host.childNodes;\n      if (children) {\n        for (let i = 0; i < children.length; i++) {\n          let c = /** @type {!HTMLElement} */(children[i]);\n          this.styleSubtree(c);\n        }\n      }\n    }\n  }\n  /* Custom Style operations */\n  _revalidateCustomStyleApplyShim(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        this._revalidateApplyShim(s);\n      }\n    }\n  }\n  _applyCustomStyles(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        StyleProperties.applyCustomStyle(s, this._documentOwnerStyleInfo.styleProperties);\n      }\n    }\n  }\n  transformCustomStyleForDocument(style) {\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (nativeCssVariables) {\n        this._ensure();\n        this._applyShim && this._applyShim['transformRule'](rule);\n      }\n    });\n    if (nativeCssVariables) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules['rules'].push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (nativeCssVariables && this._applyShim) {\n      let ast = StyleUtil.rulesForStyle(style);\n      this._ensure();\n      this._applyShim['transformRules'](ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!nativeCssVariables) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value ? value.trim() : '';\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!nativeCssVariables) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\n/* exports */\nScopingShim.prototype['flush'] = ScopingShim.prototype.flush;\nScopingShim.prototype['prepareTemplate'] = ScopingShim.prototype.prepareTemplate;\nScopingShim.prototype['styleElement'] = ScopingShim.prototype.styleElement;\nScopingShim.prototype['styleDocument'] = ScopingShim.prototype.styleDocument;\nScopingShim.prototype['styleSubtree'] = ScopingShim.prototype.styleSubtree;\nScopingShim.prototype['getComputedStyleValue'] = ScopingShim.prototype.getComputedStyleValue;\nScopingShim.prototype['setElementClass'] = ScopingShim.prototype.setElementClass;\nScopingShim.prototype['_styleInfoForNode'] = ScopingShim.prototype._styleInfoForNode;\nScopingShim.prototype['transformCustomStyleForDocument'] = ScopingShim.prototype.transformCustomStyleForDocument;\nScopingShim.prototype['getStyleAst'] = ScopingShim.prototype.getStyleAst;\nScopingShim.prototype['styleAstToString'] = ScopingShim.prototype.styleAstToString;\nScopingShim.prototype['flushCustomStyles'] = ScopingShim.prototype.flushCustomStyles;\nObject.defineProperties(ScopingShim.prototype, {\n  'nativeShadow': {\n    get() {\n      return nativeShadow;\n    }\n  },\n  'nativeCss': {\n    get() {\n      return nativeCssVariables;\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport { MIXIN_MATCH, VAR_ASSIGN } from './common-regex.js';\n\n/**\n * @param {Element} element\n * @param {Object=} properties\n */\nexport function updateNativeProperties(element, properties) {\n  // remove previous properties\n  for (let p in properties) {\n    // NOTE: for bc with shim, don't apply null values.\n    if (p === null) {\n      element.style.removeProperty(p);\n    } else {\n      element.style.setProperty(p, properties[p]);\n    }\n  }\n}\n\n/**\n * @param {Element} element\n * @param {string} property\n * @return {string}\n */\nexport function getComputedStyleValue(element, property) {\n  /**\n   * @const {string}\n   */\n  const value = window.getComputedStyle(element).getPropertyValue(property);\n  if (!value) {\n    return '';\n  } else {\n    return value.trim();\n  }\n}\n\n/**\n * return true if `cssText` contains a mixin definition or consumption\n * @param {string} cssText\n * @return {boolean}\n */\nexport function detectMixin(cssText) {\n  const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n  // reset state of the regexes\n  MIXIN_MATCH.lastIndex = 0;\n  VAR_ASSIGN.lastIndex = 0;\n  return has;\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport ScopingShim from '../src/scoping-shim.js';\nimport {nativeCssVariables, nativeShadow} from '../src/style-settings.js';\n\n/** @const {ScopingShim} */\nconst scopingShim = new ScopingShim();\n\nlet ApplyShim, CustomStyleInterface;\n\nif (window['ShadyCSS']) {\n  ApplyShim = window['ShadyCSS']['ApplyShim'];\n  CustomStyleInterface = window['ShadyCSS']['CustomStyleInterface'];\n}\n\nwindow.ShadyCSS = {\n  ScopingShim: scopingShim,\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} elementExtends\n   */\n  prepareTemplate(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplate(template, elementName, elementExtends)\n  },\n\n  prepareTemplateDom(template, elementName) {\n    scopingShim.prepareTemplateDom(template, elementName);\n  },\n\n  prepareTemplateStyles(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplateStyles(template, elementName, elementExtends)\n  },\n  /**\n   * @param {!HTMLElement} element\n   * @param {Object=} properties\n   */\n  styleSubtree(element, properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleSubtree(element, properties);\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   */\n  styleElement(element) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleElement(element);\n  },\n\n  /**\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleDocument(properties);\n  },\n\n  flushCustomStyles() {\n    scopingShim.flushCustomStyles();\n  },\n\n  /**\n   * @param {Element} element\n   * @param {string} property\n   * @return {string}\n   */\n  getComputedStyleValue(element, property) {\n    return scopingShim.getComputedStyleValue(element, property);\n  },\n\n  nativeCss: nativeCssVariables,\n\n  nativeShadow: nativeShadow\n};\n\nif (ApplyShim) {\n  window.ShadyCSS.ApplyShim = ApplyShim;\n}\n\nif (CustomStyleInterface) {\n  window.ShadyCSS.CustomStyleInterface = CustomStyleInterface;\n}"]}