{"version":3,"sources":["src/common-regex.js"," [synthetic:util/global] ","src/style-settings.js","src/css-parse.js","src/style-util.js","src/custom-style-interface.js","src/style-transformer.js","src/document-watcher.js","src/template-map.js","src/style-info.js","src/style-properties.js","src/style-placeholder.js","src/shadycss.js","src/style-cache.js"],"names":["$jscomp.global","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","MEDIA_MATCH","BRACKETED","nativeShadow","window","nativeCssVariables","navigator","userAgent","match","CSS","supports","parseSettings$$module$$src$style_settings","parseSettings","settings","ShadyCSS","WebComponents","module$$src$style_settings.nativeShadow","module$$src$style_settings.nativeCssVariables","parse$$module$$src$css_parse","parse","text","replace","RX$$module$$src$css_parse.comments","RX$$module$$src$css_parse.port","parseCss","root","start","end","length","n","i","l","OPEN_BRACE","rules","p","parent","previous","push","CLOSE_BRACE","parseCss$$module$$src$css_parse","node","t","substring","parsedCssText","cssText","trim","atRule","ss","_expandUnicodeEscapes","RX$$module$$src$css_parse.multipleSpaces","lastIndexOf","s","parsedSelector","selector","indexOf","AT_START","MEDIA_START","RX$$module$$src$css_parse.keyframesRule","type","types$$module$$src$css_parse.KEYFRAMES_RULE","keyframesName","split","pop","types$$module$$src$css_parse.MEDIA_RULE","VAR_START","types$$module$$src$css_parse.STYLE_RULE","types$$module$$src$css_parse.MIXIN_RULE","r$","r","_expandUnicodeEscapes$$module$$src$css_parse","code","repeat","stringify$$module$$src$css_parse","stringify","preserveProperties","RX$$module$$src$css_parse.customProp","RX$$module$$src$css_parse.mixinProp","RX$$module$$src$css_parse.mixinApply","RX$$module$$src$css_parse.varApply","STYLE_RULE","KEYFRAMES_RULE","MEDIA_RULE","MIXIN_RULE","comments","port","customProp","mixinProp","mixinApply","varApply","keyframesRule","multipleSpaces","toCssText$$module$$src$style_util","toCssText","callback","forEachRule","rulesForStyle$$module$$src$style_util","rulesForStyle","style","textContent","forEachRule$$module$$src$style_util","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","matchMedia","matches","applyCss$$module$$src$style_util","applyCss","moniker","target","contextNode","document","createElement","setAttribute","applyStyle","applyStyle$$module$$src$style_util","head","after","nextSibling","firstChild","lastHeadApplyNode","insertBefore","processVariableAndFallback$$module$$src$style_util","processVariableAndFallback","str","level","inner","prefix","suffix","comma","value","fallback","setElementClassRaw$$module$$src$style_util","setElementClassRaw","element","call","constructor","CustomStyleInterface","transformerFn","validateFn","customStyles","enqueued","enqueueDocumentValidation","readyState","addEventListener","getStyleForCustomStyle","customStyle","getStyle","flush","StyleTransformer","dom","scope","shouldRemoveScope","$jscompDefaultExport","_transformDom","nodeType","Node","ELEMENT_NODE","classList","remove","SCOPE_NAME","add","getAttribute","c","CLASS","newValue","c$","localName","childNodes","content","_content","children","elementStyles","styleRules","cssBuildType","__cssBuild","css","is","extends","ext","hostScope","_calcHostScope","CSS_CLASS_PREFIX","rule","isScoped","transformedSelector","_transformRuleCss","self","_transformComplexSelector","transformer","p$","COMPLEX_SELECTOR_SEP","join","stop","NTH","m","SLOTTED_START","HOST","SIMPLE_SELECTOR_SEP","info","_transformCompoundSelector","combinator","slottedIndex","SLOTTED","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","DIR_PAREN","before","dir","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","host","typeSelector","SELECTOR_NO_MATCH","_transformDocumentSelector","SCOPE_DOC_SELECTOR","$jscomp.global.Object.defineProperties","RegExp","flush$$module$$src$document_watcher","handler","mxns","x","mxn","documentElement","addedNodes","contains","hasAttribute","getRootNode","DOCUMENT_FRAGMENT_NODE","removedNodes","classes","undefined","Array","from","classIdx","observer","MutationObserver","observe","childList","subtree","customElements","delayedStart","body","requestAnimationFrame","listener","removeEventListener","takeRecords","module$$src$document_watcher.flush","promise","Promise","resolve","StyleInfo","ast","placeholder","ownStylePropertyNames","scopeSelector","styleProperties","overrideStyleProperties","get","set","styleInfo","startValidating","elementName","template","_validating","then","_applyShimInvalid","prototype","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","IS_IE","StyleProperties","decorateStyles","props","keyframes","ruleIndex","decorateRule","index","propertyInfo","exec","name","onKeyframesRule","_keyframes","names","properties","collectProperties","hasProperties","Object","assign","any","valueForProperty","property","valueForProperties","fn","propertyValue","parts","lastIndex","colon","pp","slice","propertyDataFromStyles","o","selectorToMatch","parseInt","key","whenHostOrRootRule","cssBuild","isRoot","isHost","hostAndRootPropertiesForScope","hostProps","rootProps","_element","transformStyles","hostSelector","hostRx","HOST_PREFIX","rxHostSelector","HOST_SUFFIX","StyleInfo$$module$$src$style_info.get","keyframeTransforms","_elementKeyframeTransforms","output","input","hasAnimations","test","keyframeNamesToTransform","keyframe","transform","keyframesRules","keyframesNameRx","transformedKeyframesName","scopeId","_keyframesRuleTransformer","applyCustomStyle","XSCOPE_NAME","placeholderMap","ce","origDefine","clazz","options","placeHolder","createComment","ApplyShim","invalidate","styleCache","cache","typeMax","_scopeCounter","_documentOwner","_documentOwnerStyleInfo","StyleInfo$$module$$src$style_info.set","_elementsHaveApplied","_customStyleInterface","transformFn","transformCustomStyleForDocument","updateStyles","ShadyCSS$$module$$src$shadycss.prototype","?.prototype","ShadyCSS$$module$$src$shadycss_prototype$flush","getStyleAst","styleAstToString","prepareTemplate","typeExtension","_prepared","querySelector","styles","querySelectorAll","parentNode","removeChild","hasMixins","_styleAst","_cssBuild","ownPropertyNames","shadowroot","_style","_ownPropertyNames","overrideProps","hasApplied","_isRootOwner","appliedStyle","attributes","attr","_updateProperties","_applyCustomStyles","removeProperty","setProperty","StyleInfo$$module$$src$style_info.startValidating","shadowRoot","list","idx","entry","pn","cachedStyle","cacheEntry","styleElement","oldScopeSelector","cachedScopeSelector","id","v","shift","_applyToDescendants","_styleOwnerForNode","owner","ownerStyleInfo","create","hostAndRootProps","propertiesMatchingHost","propertyData","overrides","getOwnPropertyNames","ROOT","_transformRule","addDocumentStyle","getComputedStyleValue","getComputedStyle","getPropertyValue","setElementClass","classString","scopeName","classAttr","k$","styleInfoForNode","defineProperties"],"mappings":"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","file":"shadycss.min.js","sourcesContent":["/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const VAR_ASSIGN = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\\s}])|$)/gi;\nexport const MIXIN_MATCH = /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi;\nexport const VAR_CONSUMED = /(--[\\w-]+)\\s*([:,;)]|$)/gi;\nexport const ANIMATION_MATCH = /(animation\\s*:)|(animation-name\\s*:)/;\nexport const MEDIA_MATCH = /@media[^(]*(\\([^)]*\\))/;\nexport const IS_VAR = /^--/;\nexport const BRACKETED = /\\{[^}]*\\}/g;\nexport const HOST_PREFIX = '(?:^|[^.#[:])';\nexport const HOST_SUFFIX = '($|[.:[\\\\s>+~])';",null,"/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport let nativeShadow = !(window['ShadyDOM'] && window['ShadyDOM']['inUse']);\n// chrome 49 has semi-working css vars, check if box-shadow works\n// safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\nexport let nativeCssVariables = (!navigator.userAgent.match('AppleWebKit/601') &&\nwindow.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n\n/**\n * @param {?Object} settings\n */\nfunction parseSettings(settings) {\n  if (settings) {\n    nativeCssVariables = nativeCssVariables && !settings['shimcssproperties'];\n    nativeShadow = nativeShadow && !settings['shimshadow'];\n  }\n}\n\nif (window.ShadyCSS) {\n  parseSettings(window['ShadyCSS']);\n} else if (window.WebComponents) {\n  parseSettings(window['WebComponents']['flags']);\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n/** @record */\nexport let StyleNode = function(){};\n/** @type {number} */\nStyleNode.prototype.start;\n/** @type {number} */\nStyleNode.prototype.end;\n/** @type {StyleNode|undefined} */\nStyleNode.prototype.previous\n/** @type {Array<StyleNode>|undefined} */\nStyleNode.prototype.rules;\n/** @type {string|undefined} */\nStyleNode.prototype.parsedCssText;\n/** @type {string|undefined} */\nStyleNode.prototype.cssText;\n/** @type {boolean|undefined} */\nStyleNode.prototype.atRule;\n/** @type {number|undefined} */\nStyleNode.prototype.type;\n/** @type {string|undefined} */\nStyleNode.prototype.keyframesName;\n/** @type {string|undefined} */\nStyleNode.prototype.selector;\n/** @type {string|undefined} */\nStyleNode.prototype.parsedSelector;\n\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n  let root = {\n    start: 0,\n    end: text.length\n  };\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n.rules) {\n        n.rules = [];\n      }\n      let p = n;\n      let previous = p.rules[p.rules.length - 1];\n      n = {\n        start: i + 1,\n        parent: p,\n        previous: previous\n      };\n      p.rules.push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n.end = i + 1;\n      n = n.parent || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n  let t = text.substring(node.start, node.end - 1);\n  node.parsedCssText = node.cssText = t.trim();\n  if (node.parent) {\n    let ss = node.previous ? node.previous.end : node.parent.start;\n    t = text.substring(ss, node.start - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node.parsedSelector = node.selector = t.trim();\n    node.atRule = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node.atRule) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node.type = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node.type = types.KEYFRAMES_RULE;\n        node.keyframesName =\n          node.selector.split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node.type = types.MIXIN_RULE;\n      } else {\n        node.type = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node.rules;\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n/**\n * stringify parsed css.\n * @param {StyleNode} node\n * @param {boolean=} preserveProperties\n * @param {string=} text\n * @return {string}\n */\nexport function stringify(node, preserveProperties, text) {\n  text = text || '';\n  // calc rule cssText\n  let cssText = '';\n  if (node.cssText || node.rules) {\n    let r$ = node.rules;\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node.cssText :\n        removeCustomProps(/** @type {string} */(node.cssText));\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node.selector) {\n      text += node.selector + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node.selector) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\n/**\n * @param {Array<StyleNode>} rules\n * @return {boolean}\n */\nfunction _hasMixinRules(rules) {\n  let r = rules[0];\n  return Boolean(r) && Boolean(r.selector) && r.selector.indexOf(VAR_START) === 0;\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\n/** @enum {number} */\nexport const types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nconst OPEN_BRACE = '{';\nconst CLOSE_BRACE = '}';\n\n// helper regexp's\nconst RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nconst VAR_START = '--';\nconst MEDIA_START = '@media';\nconst AT_START = '@';\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables} from './style-settings'\nimport {parse, stringify, types, StyleNode} from './css-parse'\nimport {MEDIA_MATCH} from './common-regex';\n\n/**\n * @param {string|StyleNode} rules\n * @param {function(StyleNode)=} callback\n */\nexport function toCssText (rules, callback) {\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @return {StyleNode}\n */\nexport function rulesForStyle(style) {\n  if (!style['__cssRules'] && style.textContent) {\n    style['__cssRules'] = parse(style.textContent);\n  }\n  return style['__cssRules'];\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\n/**\n * @param {StyleNode} rule\n * @return {boolean}\n */\nexport function isKeyframesSelector(rule) {\n  return rule.parent &&\n  rule.parent.type === types.KEYFRAMES_RULE;\n}\n\n/**\n * @param {StyleNode} node\n * @param {Function=} styleRuleCallback\n * @param {Function=} keyframesRuleCallback\n * @param {boolean=} onlyActiveRules\n */\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  if (onlyActiveRules) {\n    if (node.type === types.MEDIA_RULE) {\n      let matchMedia = node.selector.match(MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (node.type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    node.type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (node.type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node.rules;\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  return applyStyle(style, target, contextNode);\n}\n\n/**\n * @param {Node} style\n * @param {?Node} target\n * @param {?Node} contextNode\n * @return {Node}\n */\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n  target.firstChild;\n  lastHeadApplyNode = style;\n  return target.insertBefore(style, after);\n}\n\nexport function createScopeStyle(cssText, moniker) {\n  let style = document.createElement('style');\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode['nextSibling'] : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\nexport function getCssBuildType(element) {\n  return element.getAttribute('css-build');\n}\n\n/**\n * Walk from text[start] matching parens and\n * returns position of the outer end paren\n * @param {string} text\n * @param {number} start\n * @return {number}\n */\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (window['ShadyDOM']) {\n    window['ShadyDOM']['nativeMethods']['setAttribute'].call(element, 'class', value);\n  } else {\n    element.setAttribute('class', value);\n  }\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/**\n * @typedef {HTMLStyleElement | ({getStyle: (function():HTMLStyleElement)})}\n */\nlet CustomStyleProvider;\n\nconst PROCESSED_MARKER = '__processedByShadyCSS';\nconst SEEN_MARKER = '__seenByShadyCSS';\n\n/*\nThis interface is provided to add document-level <style> elements to ShadyCSS for processing.\nThese styles must be processed by ShadyCSS to simulate ShadowRoot upper-bound encapsulation from outside styles\nIn addition, these styles may also need to be processed for @apply rules and CSS Custom Properties\n\nTo add document-level styles to ShadyCSS, one can call `ShadyCSS.addDocumentStyle(styleElement)` or `ShadyCSS.addDocumentStyle({getStyle: () => styleElement})`\n\nIn addition, if the process used to discover document-level styles can be synchronously flushed, one should set `ShadyCSS.documentStyleFlush`.\nThis function will be called when calculating styles.\n\nAn example usage of the document-level styling api can be found in `examples/document-style-lib.js`\n*/\nexport default class CustomStyleInterface {\n  constructor(transformerFn, validateFn) {\n    this.transformerFn = transformerFn;\n    this.validateFn = validateFn;\n    /** @type {!Array<!CustomStyleProvider>} */\n    this.customStyles = [];\n    this.enqueued = false;\n  }\n  /**\n   * Queue a validation for new custom styles to batch style recalculations\n   */\n  enqueueDocumentValidation() {\n    if (this.enqueued) {\n      return;\n    }\n    this.enqueued = true;\n    if (window['HTMLImports']) {\n      window['HTMLImports']['whenReady'](this.validateFn);\n    } else if (document.readyState === 'complete') {\n      this.validateFn();\n    } else {\n      document.addEventListener('readystatechange', () => {\n        if (document.readyState === 'complete') {\n          this.validateFn();\n        }\n      });\n    }\n  }\n  /**\n   * @param {!HTMLStyleElement} style\n   */\n  addCustomStyle(style) {\n    if (!style[SEEN_MARKER]) {\n      style[SEEN_MARKER] = true;\n      this.customStyles.push(style);\n      this.enqueueDocumentValidation();\n    }\n  }\n  /**\n   * @param {!CustomStyleProvider} customStyle\n   * @return {HTMLStyleElement}\n   */\n  getStyleForCustomStyle(customStyle) {\n    let style;\n    if (customStyle.getStyle) {\n      style = customStyle.getStyle();\n    } else {\n      style = customStyle;\n    }\n    return style;\n  }\n  /* this function left intentionally blank */\n  flush() {}\n  findStyles() {\n    for (let i = 0; i < this.customStyles.length; i++) {\n      let customStyle = this.customStyles[i];\n      if (customStyle[PROCESSED_MARKER]) {\n        continue;\n      }\n      let style = this.getStyleForCustomStyle(customStyle);\n      if (style) {\n        customStyle[PROCESSED_MARKER] = true;\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        // Also, we must copy over the attributes.\n        let appliedStyle = /** @type {HTMLStyleElement} */(style['__appliedElement']);\n        if (appliedStyle) {\n          for (let i = 0; i < style.attributes.length; i++) {\n            let attr = style.attributes[i];\n            appliedStyle.setAttribute(attr.name, attr.value);\n          }\n        }\n        this.transformerFn(appliedStyle || style);\n      }\n    }\n  }\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse'\nimport * as StyleUtil from './style-util'\nimport {nativeShadow} from './style-settings'\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node['__styleScoped']) {\n      node['__styleScoped'] = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  }\n\n  _transformDom(node, selector, shouldRemoveScope) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children || node.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  }\n\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            StyleUtil.setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          StyleUtil.setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element.__cssBuild;\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = (nativeShadow || cssBuildType === 'shady') ?\n    StyleUtil.toCssText(styleRules, callback) :\n    this.css(styleRules, element.is, element.extends, callback) + '\\n\\n';\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? `[is=${scope}]` : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  /**\n   * transforms a css rule to a scoped rule.\n   *\n   * @param {Object} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule.selector = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = rule.selector.split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  }\n\n/**\n * @param {string} selector\n * @param {string} scope\n * @param {string=} hostScope\n */\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`);\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule.selector = rule.parsedSelector;\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  normalizeRootSelector(rule) {\n    if (rule.selector === ROOT) {\n      rule.selector = 'html';\n    }\n  }\n\n/**\n * @param {string} selector\n */\n  _transformDocumentSelector(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=\\[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n\nexport default new StyleTransformer()","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow} from './style-settings'\nimport StyleTransformer from './style-transformer'\n\nexport let flush = function() {};\n\nif (!nativeShadow) {\n  let elementNeedsScoping = (element) => {\n    return (element.classList &&\n      !element.classList.contains(StyleTransformer.SCOPE_NAME) ||\n      // note: necessary for IE11\n      (element instanceof window['SVGElement'] && (!element.hasAttribute('class') ||\n      element.getAttribute('class').indexOf(StyleTransformer.SCOPE_NAME) < 0)));\n  }\n\n/**\n * @param {Array<MutationRecord|null>|null} mxns\n */\n  let handler = (mxns) => {\n    for (let x=0; x < mxns.length; x++) {\n      let mxn = mxns[x];\n      if (mxn.target === document.documentElement ||\n        mxn.target === document.head) {\n        continue;\n      }\n      for (let i=0; i < mxn.addedNodes.length; i++) {\n        let n = mxn.addedNodes[i];\n        if (elementNeedsScoping(n)) {\n          let root = n.getRootNode();\n          if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // may no longer be in a shadowroot\n            let host = /** @type {ShadowRoot} */(root).host;\n            if (host) {\n              let scope = host.is || host.localName;\n              StyleTransformer.dom(n, scope);\n            }\n          }\n        }\n      }\n      for (let i=0; i < mxn.removedNodes.length; i++) {\n        let n = /** @type {HTMLElement} */(mxn.removedNodes[i]);\n        if (n.nodeType === Node.ELEMENT_NODE) {\n          let classes = undefined;\n          if (n.classList) {\n            classes = Array.from(n.classList);\n          } else if (n.hasAttribute('class')) {\n            classes = n.getAttribute('class').split(/\\s+/);\n          }\n          if (classes !== undefined) {\n            // NOTE: relies on the scoping class always being adjacent to the\n            // SCOPE_NAME class.\n            let classIdx = classes.indexOf(StyleTransformer.SCOPE_NAME);\n            if (classIdx >= 0) {\n              let scope = classes[classIdx + 1];\n              if (scope) {\n                StyleTransformer.dom(n, scope, true);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window.customElements &&\n    !window['customElements']['flush']);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window['HTMLImports']) {\n      window['HTMLImports']['whenReady'](delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport default {};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport templateMap from './template-map'\nimport {StyleNode} from './css-parse'\n\n/**\n * @const {Promise}\n */\nconst promise = Promise.resolve();\n\n/**\n * @const {string}\n */\nconst infoKey = '__styleInfo';\n\nexport default class StyleInfo {\n  static get(node) {\n    return node[infoKey];\n  }\n  static set(node, styleInfo) {\n    node[infoKey] = styleInfo;\n    return styleInfo;\n  }\n  static invalidate(elementName) {\n    if (templateMap[elementName]) {\n      templateMap[elementName]._applyShimInvalid = true;\n    }\n  }\n  /*\n  the template is marked as `validating` for one microtask so that all instances\n  found in the tree crawl of `applyStyle` will update themselves,\n  but the template will only be updated once.\n  */\n  static startValidating(elementName) {\n    /**\n     * @const {Element|undefined}\n     */\n    const template = templateMap[elementName];\n    if (!template._validating) {\n      template._validating = true;\n      promise.then(() => {\n        template._applyShimInvalid = false;\n        template._validating = false;\n      });\n    }\n  }\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    /** @type {?StyleNode} */\n    this.styleRules = ast || null;\n    /** @type {?Node} */\n    this.placeholder = placeholder || null;\n    /** @type {!Array<string>} */\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    /** @type {?Array<Object>} */\n    this.overrideStyleProperties = null;\n    /** @type {string} */\n    this.elementName = elementName || '';\n    /** @type {string} */\n    this.cssBuild = cssBuild || '';\n    /** @type {string} */\n    this.typeExtension = typeExtension || '';\n    /** @type {?Array<Object>} */\n    this.styleProperties = null;\n    /** @type {?string} */\n    this.scopeSelector = null;\n    /** @type {?Node} */\n    this.customStyle = null;\n  }\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment, StyleNode} from './css-parse'\nimport {nativeShadow} from './style-settings'\nimport StyleTransformer from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport * as RX from './common-regex'\nimport StyleInfo from './style-info'\n\n// TODO: dedupe with shady\n/**\n * @const {function(string):boolean}\n */\nconst matchesSelector = ((p) => p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\np.oMatchesSelector || p.webkitMatchesSelector)(window.Element.prototype);\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n  // decorates styles with rule info and returns an array of used style\n  // property names\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule.rules = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = RX.VAR_ASSIGN;\n      let cssText = rule.parsedCssText;\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule.parsedCssText);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(RX.BRACKETED, '')\n      .replace(RX.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = RX.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        RX.MIXIN_MATCH.lastIndex = 0;\n        m = RX.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule.cssText = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule.cssText;\n    let output = rule.cssText;\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = RX.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule.cssText = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule.parsedSelector;\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let hostScope = scope.is ?\n    StyleTransformer._calcHostScope(scope.is, scope.extends) :\n    'html';\n    let parsedSelector = rule.parsedSelector;\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(scope.is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n/**\n * @param {string} scope\n * @param {StyleNode} rules\n * @return {Object}\n */\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules.__cssBuild;\n    StyleUtil.forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let hostSelector = StyleTransformer\n      ._calcHostScope(element.is, element.extends);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(RX.HOST_PREFIX + rxHostSelector +\n      RX.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule.cssText) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule.keyframesName] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n  // Transforms `@keyframes` names to be unique for the current host.\n  // Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n  _scopeKeyframes(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule.keyframesName, 'g');\n    rule.transformedKeyframesName = rule.keyframesName + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    rule.selector = rule.transformedSelector.replace(\n        rule.keyframesName, rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule.selector = parts.join(',');\n  }\n\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      StyleUtil.setElementClassRaw(element, v);\n    }\n  }\n\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s['_useCount']--;\n      if (s['_useCount'] <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element['shadowRoot'],\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style['_useCount'] = style['_useCount'] || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style['_useCount']++;\n      }\n      styleInfo.customStyle = style;\n    }\n    // @media rules may be stale in IE 10 and 11\n    if (IS_IE) {\n      style.textContent = style.textContent;\n    }\n    return style;\n  }\n\n  applyCustomStyle(style, properties) {\n    let rules = StyleUtil.rulesForStyle(style);\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      let css = rule.cssText = rule.parsedCssText;\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(/** @type {string} */(css));\n        // replace with reified properties, scenario is same as mixin\n        rule.cssText = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32, 10);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexport default new StyleProperties();","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util'\nimport {nativeShadow} from './style-settings'\n\nlet placeholderMap = {};\n\n/**\n * @const {Object|undefined}\n */\nconst ce = window['customElements'];\nif (ce && !nativeShadow) {\n  /**\n   * @const {function(string,Function,Object=)}\n   */\n  const origDefine = ce['define'];\n  ce['define'] = function(name, clazz, options) {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(ce, name, clazz, options);\n  };\n}\n\nexport default placeholderMap;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse, StyleNode} from './css-parse'\nimport {nativeShadow, nativeCssVariables} from './style-settings'\nimport StyleTransformer from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport StyleProperties from './style-properties'\nimport placeholderMap from './style-placeholder'\nimport StyleInfo from './style-info'\nimport StyleCache from './style-cache'\nimport {flush as watcherFlush} from './document-watcher'\nimport templateMap from './template-map'\nimport CustomStyleInterface from './custom-style-interface'\n\nlet ApplyShim = window['ApplyShim'];\nif (!ApplyShim) {\n  /** no-op functions to skip checking `ApplyShim` in a bunch of spots */\n  ApplyShim = {\n    /**\n     * @param {string} text\n     * @return {boolean}\n     */\n    ['detectMixin'](text){ return false },\n    /**\n     * @param {StyleNode} ast\n     * @param {string} elementName\n     */\n    ['transformRules'](ast, elementName){},\n    /**\n     * @param {StyleNode} ast\n     */\n    ['transformRule'](ast){}\n  }\n}\n\nApplyShim['invalidCallback'] = StyleInfo.invalidate;\n\n/**\n * @const {StyleCache}\n */\nconst styleCache = new StyleCache();\n\nclass ShadyCSS {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = document.documentElement;\n    this._documentOwnerStyleInfo = StyleInfo.set(document.documentElement, new StyleInfo({rules: []}));\n    this._elementsHaveApplied = false;\n    /** @type {function(!HTMLStyleElement)} */\n    const transformFn = (style) => {this.transformCustomStyleForDocument(style)};\n    const validateFn = () => {\n      requestAnimationFrame(() => {\n        if (this._customStyleInterface.enqueued || this._elementsHaveApplied) {\n          this.updateStyles();\n        }\n        this._customStyleInterface.enqueued = false;\n      })\n    };\n    this._customStyleInterface = new CustomStyleInterface(transformFn, validateFn);\n  }\n  flush() {\n    watcherFlush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  }\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('').trim();\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  /**\n   * Prepare the styling and template for the given element type\n   *\n   * @param {HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    if (!nativeShadow) {\n      StyleTransformer.dom(template.content, elementName);\n    }\n    // check if the styling has mixin definitions or uses\n    let hasMixins = ApplyShim['detectMixin'](cssText);\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && nativeCssVariables) {\n      ApplyShim['transformRules'](ast, elementName);\n    }\n    template._styleAst = ast;\n    template._cssBuild = cssBuild;\n\n    let ownPropertyNames = [];\n    if (!nativeCssVariables) {\n      ownPropertyNames = StyleProperties.decorateStyles(template._styleAst, info);\n    }\n    if (!ownPropertyNames.length || nativeCssVariables) {\n      let root = nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template._styleAst, root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer.elementStyles(info, rules);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let is = host.getAttribute('is') || host.localName;\n    let typeExtension;\n    if (is !== host.localName) {\n      typeExtension = host.localName;\n    }\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template._styleAst;\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  }\n  /**\n   * Apply styles for the given element\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} overrideProps\n   */\n  applyStyle(host, overrideProps) {\n    let is = host.getAttribute('is') || host.localName;\n    let styleInfo = StyleInfo.get(host);\n    let hasApplied = Boolean(styleInfo);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    this._customStyleInterface.flush();\n    if (this._customStyleInterface.enqueued) {\n      this._customStyleInterface.findStyles();\n      let customStyles = this._customStyleInterface.customStyles;\n      if (!nativeCssVariables) {\n        this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n      } else {\n        this._revalidateCustomStyleApplyShim(customStyles);\n      }\n      this._applyCustomStyles(customStyles);\n      // if no elements have booted yet, we can just update the document and be done\n      if (!this._elementsHaveApplied) {\n        return;\n      }\n      // if no native css custom properties, we must recalculate the whole tree\n      if (!nativeCssVariables) {\n        this.updateStyles();\n        /*\n        When updateStyles() runs, this element may not have a shadowroot yet.\n        If not, we need to make sure that this element runs `applyStyle` on itself at least once to generate a style\n        */\n        if (hasApplied) {\n          return;\n        }\n      }\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (nativeCssVariables) {\n      if (styleInfo.overrideStyleProperties) {\n        this._updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      if (template && template._applyShimInvalid && template._style) {\n        // update template\n        if (!template._validating) {\n          ApplyShim['transformRules'](template._styleAst, is);\n          template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          StyleInfo.startValidating(is);\n        }\n        // update instance if native shadowdom\n        if (nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template._styleAst;\n      }\n    } else {\n      this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    }\n    if (hasApplied) {\n      let root = this._isRootOwner(host) ? host : host.shadowRoot;\n      // note: some elements may not have a root!\n      if (root) {\n        this._applyToDescendants(root);\n      }\n    }\n  }\n  _applyToDescendants(root) {\n    let c$ = root.children;\n    for (let i = 0, c; i < c$.length; i++) {\n      c = c$[i];\n      if (c.shadowRoot) {\n        this.applyStyle(c);\n      }\n      this._applyToDescendants(c);\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = host.getAttribute('is') || host.localName;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  _updateNativeProperties(element, properties) {\n    // remove previous properties\n    for (let p in properties) {\n      // NOTE: for bc with shim, don't apply null values.\n      if (p === null) {\n        element.style.removeProperty(p);\n      } else {\n        element.style.setProperty(p, properties[p]);\n      }\n    }\n  }\n  /**\n   * Update styles of the whole document\n   *\n   * @param {Object=} properties\n   */\n  updateStyles(properties) {\n    this.applyStyle(this._documentOwner, properties);\n  }\n  /* Custom Style operations */\n  _revalidateCustomStyleApplyShim(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface.getStyleForCustomStyle(c);\n      if (s) {\n        this._revalidateApplyShim(s);\n      }\n    }\n  }\n  _applyCustomStyles(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface.getStyleForCustomStyle(c);\n      if (s) {\n        this._applyCustomStyleToDocument(s);\n      }\n    }\n    this._customStyleInterface.enqueued = false;\n  }\n  transformCustomStyleForDocument(style) {\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (nativeCssVariables) {\n        ApplyShim['transformRule'](rule);\n      }\n    });\n    if (nativeCssVariables) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  }\n  addDocumentStyle(style) {\n    this._customStyleInterface.addCustomStyle(style);\n  }\n  _revalidateApplyShim(style) {\n    if (nativeCssVariables) {\n      let ast = StyleUtil.rulesForStyle(style);\n      ApplyShim['transformRules'](ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  }\n  _applyCustomStyleToDocument(style) {\n    if (!nativeCssVariables) {\n      StyleProperties.applyCustomStyle(style, this._documentOwnerStyleInfo.styleProperties);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!nativeCssVariables) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value.trim();\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!nativeCssVariables) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\n  }\n  styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\n/* exports */\nShadyCSS.prototype['flush'] = ShadyCSS.prototype.flush;\nShadyCSS.prototype['prepareTemplate'] = ShadyCSS.prototype.prepareTemplate;\nShadyCSS.prototype['applyStyle'] = ShadyCSS.prototype.applyStyle;\nShadyCSS.prototype['updateStyles'] = ShadyCSS.prototype.updateStyles;\nShadyCSS.prototype['getComputedStyleValue'] = ShadyCSS.prototype.getComputedStyleValue;\nShadyCSS.prototype['setElementClass'] = ShadyCSS.prototype.setElementClass;\nShadyCSS.prototype['styleInfoForNode'] = ShadyCSS.prototype.styleInfoForNode;\nShadyCSS.prototype['transformCustomStyleForDocument'] = ShadyCSS.prototype.transformCustomStyleForDocument;\nShadyCSS.prototype['getStyleAst'] = ShadyCSS.prototype.getStyleAst;\nShadyCSS.prototype['styleAstToString'] = ShadyCSS.prototype.styleAstToString;\nShadyCSS.prototype['addDocumentStyle'] = ShadyCSS.prototype.addDocumentStyle;\nObject.defineProperties(ShadyCSS.prototype, {\n  'nativeShadow': {\n    get() {\n      return nativeShadow;\n    }\n  },\n  'nativeCss': {\n    get() {\n      return nativeCssVariables;\n    }\n  },\n  'documentStyleFlush': {\n    /**\n     * @this {ShadyCSS}\n     * @return {function()}\n     */\n    get() {\n      return this._customStyleInterface.flush;\n    },\n    /**\n     * @this {ShadyCSS}\n     * @param {function()} fn\n     */\n    set(fn) {\n      this._customStyleInterface.flush = fn;\n    }\n  }\n});\n\nwindow['ShadyCSS'] = new ShadyCSS();","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\nexport default class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n"]}