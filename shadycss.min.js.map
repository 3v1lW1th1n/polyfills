{"version":3,"sources":[" [synthetic:base] "," [synthetic:util/defineproperty] "," [synthetic:util/global] "," [synthetic:es6/symbol] "," [synthetic:es6/util/makeiterator] "," [synthetic:es6/util/arrayfromiterator] "," [synthetic:es6/util/arrayfromiterable] "," [synthetic:util/owns] "," [synthetic:util/polyfill] "," [synthetic:es6/object/assign] "," [synthetic:es6/reflect/apply] "," [synthetic:es6/reflect/construct] ","src/css-parse.js","src/style-settings.js","src/style-util.js","src/style-transformer.js","src/style-info.js","src/style-properties.js","src/template-map.js","src/style-placeholder.js","src/apply-shim.js","src/ShadyCSS.js","src/custom-style.js"],"names":["parse$$module$$src$css_parse","parse","text","clean","parseCss","lex","clean$$module$$src$css_parse","cssText","replace","RX","comments","port","lex$$module$$src$css_parse","root","start","end","length","n","i","l","OPEN_BRACE","rules","p","parent","previous","push","CLOSE_BRACE","parseCss$$module$$src$css_parse","node","t","substring","parsedCssText","trim","ss","_expandUnicodeEscapes","multipleSpaces","lastIndexOf","s","parsedSelector","selector","atRule","indexOf","AT_START","MEDIA_START","type","types","MEDIA_RULE","match","keyframesRule","KEYFRAMES_RULE","keyframesName","split","pop","VAR_START","MIXIN_RULE","STYLE_RULE","r$","r","_expandUnicodeEscapes$$module$$src$css_parse","code","repeat","stringify$$module$$src$css_parse","stringify","preserveProperties","_hasMixinRules","removeCustomProps","_hasMixinRules$$module$$src$css_parse","removeCustomProps$$module$$src$css_parse","removeCustomPropAssignment","removeCustomPropApply","removeCustomPropAssignment$$module$$src$css_parse","customProp","mixinProp","removeCustomPropApply$$module$$src$css_parse","mixinApply","varApply","window","WCT","types$$module$$src$css_parse","module$$src$css_parse","nativeShadow","ShadyDOM","inUse","forceShimCssProperties","WebComponents","flags","shimcssproperties","nativeCssVariables","navigator","userAgent","CSS","supports","detectNativeApply$$module$$src$style_settings","detectNativeApply","style","document","createElement","textContent","head","appendChild","nativeCssApply","sheet","cssRules","removeChild","module$$src$style_settings","toCssText$$module$$src$style_util","toCssText","callback","forEachRule","rulesForStyle$$module$$src$style_util","rulesForStyle","__cssRules","isKeyframesSelector$$module$$src$style_util","isKeyframesSelector","rule","forEachRule$$module$$src$style_util","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","matchMedia","rx","MEDIA_MATCH","matches","applyCss$$module$$src$style_util","applyCss","moniker","target","contextNode","createScopeStyle","applyStyle","applyStyle$$module$$src$style_util","after","nextSibling","firstChild","lastHeadApplyNode","insertBefore","createScopeStyle$$module$$src$style_util","setAttribute","applyStylePlaceHolder$$module$$src$style_util","applyStylePlaceHolder","placeHolder","createComment","scope","isTargetedBuild$$module$$src$style_util","isTargetedBuild","buildType","getCssBuildType$$module$$src$style_util","getCssBuildType","element","getAttribute","findMatchingParen$$module$$src$style_util","findMatchingParen","level","processVariableAndFallback$$module$$src$style_util","processVariableAndFallback","str","inner","prefix","suffix","comma","value","fallback","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","IS_VAR","BRACKETED","HOST_PREFIX","HOST_SUFFIX","module$$src$style_util","StyleTransformer","dom","shouldRemoveScope","__styleScoped","_transformDom","classList","c$","localName","childNodes","content","_content","children","remove","SCOPE_NAME","add","c","CLASS","elementStyles","styleRules","cssBuildType","__cssBuild","css","is","extends","ext","hostScope","_calcHostScope","_calcElementScope","self","isScoped","CSS_CLASS_PREFIX","_transformRule","_transformComplexSelector","transformer","transformedSelector","_transformRuleCss","p$","COMPLEX_SELECTOR_SEP","call","join","stop","SIMPLE_SELECTOR_SEP","m","info","_transformCompoundSelector","combinator","slottedIndex","SLOTTED","HOST","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","host","typeSelector","SELECTOR_NO_MATCH","documentRule","normalizeRootSelector","_transformDocumentSelector","ROOT","SCOPE_DOC_SELECTOR","module$$src$style_transformer","StyleInfo","constructor","ast","placeholder","ownStylePropertyNames","elementName","typeExtension","cssBuild","overrideStyleProperties","notStyleScopeCacheable","customStyle","scopeSelector","ownStyleProperties","styleProperties","get","__styleInfo","set","styleInfo","module$$src$style_info","default","Element","prototype","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","IS_IE","StyleProperties","decorateStyles","props","keyframes","ruleIndex","decorateRule","index","whenHostOrRootRule","ruleTypes","isHost","hostContextOrFunction","some","collectPropertiesInCssText","propertyInfo","onKeyframesRule","_keyframes","names","properties","collectProperties","hasProperties","collectCssText","Object","assign","exec","any","collectConsumingCssText","name","reify","getOwnPropertyNames","valueForProperty","property","valueForProperties","fn","propertyValue","parts","lastIndex","colon","pp","slice","applyProperties","output","applyKeyframeTransforms","keyframeTransforms","input","hasAnimations","test","keyframeNamesToTransform","keyframe","transform","propertyDataFromStyles","o","selectorToMatch","addToBitMask","key","isRoot","hostAndRootPropertiesForScope","hostProps","rootProps","_element","transformStyles","hostSelector","rxHostSelector","hostRx","RegExp","_elementKeyframeTransforms","_scopeSelector","keyframesRules","_scopeKeyframes","_keyframesRuleTransformer","keyframesNameRx","transformedKeyframesName","scopeId","applyElementScopeSelector","old","v","XSCOPE_NAME","applyElementStyle","_useCount","parentNode","shadowRoot","applyCustomStyle","addToBitMask$$module$$src$style_properties","bits","parseInt","module$$src$style_properties","templateMap","module$$src$template_map","placeholderMap","ce","customElements","origDefine","define","ce$$module$$src$style_placeholder.define","args","module$$src$style_placeholder","APPLY_NAME_CLEAN","INITIAL_INHERIT","MIXIN_VAR_SEP","MixinMap","_map","dependants","ApplyShim","_measureElement","_currentTemplate","_separator","_boundProduceCssProperties","this._boundProduceCssProperties","matchText","propertyName","valueProperty","valueMixin","_produceCssProperties","transformStyle","transformRules","transformRule","__applyShimInvalid","transformCssText","_consumeCssProperties","_getInitialValueForProperty","all","getComputedStyle","getPropertyValue","mixinName","idx","applyPos","afterApplyPos","textBeforeApply","textAfterApply","defaults","_cssTextToMap","replacement","_atApplyToCssProperties","fallbacks","vars","mixinEntry","f","_replaceInitialOrInherit","out","sp","_invalidateMixinEntry","mixinAsProperties","combinedProps","mixinValues","oldProps","create","needToInvalidate","undefined","applyShim","$jscompDefaultExport","module$$src$apply_shim","ShadyCSS","scopeCounter","nativeCss","_documentOwner","documentElement","_documentOwnerStyleInfo","_generateScopeSelector","id","getStyleAst","styleAstToString","_gatherStyles","template","styles","querySelectorAll","_getCssBuild","querySelector","prepareTemplate","_prepared","_styleAst","ownPropertyNames","_generateStaticStyle","_style","_ownPropertyNames","shadowroot","_prepareHost","_cssBuild","overrideProps","CustomStyle","CS","_documentDirty","findStyles","_revalidateApplyShim","_updateProperties","applyStyles","_updateNativeProperties","_applyStyleProperties","_isRootOwner","_applyToDescendants","_styleOwnerForNode","getRootNode","oldScopeSelector","owner","ownerStyleInfo","hostAndRootProps","propertiesMatchingHost","_mixinOverrideStyles","ownProps","overrides","removeProperty","setProperty","updateStyles","_transformCustomStyleForDocument","_applyCustomStyleToDocument","module$$src$ShadyCSS","enqueued","customStyles","hookFn","enqueueDocumentValidation","HTMLImports","whenReady","validateDocument","readyState","requestAnimationFrame","addEventListener","Reflect","construct","HTMLElement","defineProperties","processHook","_customStyles","CustomStyle.findStyles","_findStyle","CustomStyle._revalidateApplyShim","CustomStyle.applyStyles","_applyStyle","configurable","writable","CustomStyle.prototype._findStyle","__appliedStyle","attributes","attr","CustomStyle.prototype._applyStyle"],"mappings":"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","file":"shadycss.min.js","sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,"/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n// given a string of css, return a simple rule tree\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\nfunction lex(text) {\n  let root = {\n    start: 0,\n    end: text.length\n  };\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n.rules) {\n        n.rules = [];\n      }\n      let p = n;\n      let previous = p.rules[p.rules.length - 1];\n      n = {\n        start: i + 1,\n        parent: p,\n        previous: previous\n      };\n      p.rules.push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n.end = i + 1;\n      n = n.parent || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\nfunction parseCss(node, text) {\n  let t = text.substring(node.start, node.end - 1);\n  node.parsedCssText = node.cssText = t.trim();\n  if (node.parent) {\n    let ss = node.previous ? node.previous.end : node.parent.start;\n    t = text.substring(ss, node.start - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node.parsedSelector = node.selector = t.trim();\n    node.atRule = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node.atRule) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node.type = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node.type = types.KEYFRAMES_RULE;\n        node.keyframesName =\n          node.selector.split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node.type = types.MIXIN_RULE;\n      } else {\n        node.type = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node.rules;\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n// conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n// expanded form that doesn't require trailing space `\\000033`\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n// stringify parsed css.\nexport function stringify(node, preserveProperties, text) {\n  text = text || '';\n  // calc rule cssText\n  let cssText = '';\n  if (node.cssText || node.rules) {\n    let r$ = node.rules;\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node.cssText :\n        removeCustomProps(node.cssText);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node.selector) {\n      text += node.selector + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node.selector) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\nfunction _hasMixinRules(rules) {\n  return rules[0].selector.indexOf(VAR_START) === 0;\n}\n\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\nexport let types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nlet OPEN_BRACE = '{';\nlet CLOSE_BRACE = '}';\n\n// helper regexp's\nlet RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nlet VAR_START = '--';\nlet MEDIA_START = '@media';\nlet AT_START = '@';\n\nif (window.WCT) {\n  window['CssParse'] = {\n    parse,\n    stringify,\n    types,\n    removeCustomPropAssignment\n  };\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport let nativeShadow = Boolean(!window.ShadyDOM || !window.ShadyDOM.inUse);\n\n// force shim support\nlet forceShimCssProperties = window.WebComponents && window.WebComponents.flags.shimcssproperties;\n\n// chrome 49 has semi-working css vars, check if box-shadow works\n// safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\nexport let nativeCssVariables = !forceShimCssProperties &&\n(!navigator.userAgent.match('AppleWebKit/601') &&\nwindow.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n\n// experimental support for native @apply\nfunction detectNativeApply() {\n  let style = document.createElement('style');\n  style.textContent = '.foo { @apply --foo }';\n  document.head.appendChild(style);\n  let nativeCssApply = (style.sheet.cssRules[0].cssText.indexOf('apply') >= 0);\n  document.head.removeChild(style);\n  return nativeCssApply;\n}\n\nexport let nativeCssApply = false && detectNativeApply()\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables} from './style-settings'\nimport {parse, stringify, types} from './css-parse'\n\nexport function toCssText (rules, callback) {\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\nexport function rulesForStyle(style) {\n  if (!style.__cssRules && style.textContent) {\n    style.__cssRules = parse(style.textContent);\n  }\n  return style.__cssRules;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\nexport function isKeyframesSelector(rule) {\n  return rule.parent &&\n  rule.parent.type === types.KEYFRAMES_RULE;\n}\n\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  if (onlyActiveRules) {\n    if (node.type === types.MEDIA_RULE) {\n      let matchMedia = node.selector.match(rx.MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (node.type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    node.type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (node.type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node.rules;\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  return applyStyle(style, target, contextNode);\n}\n\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n  target.firstChild;\n  lastHeadApplyNode = style;\n  return target.insertBefore(style, after);\n}\n\nexport function createScopeStyle(cssText, moniker) {\n  let style = document.createElement('style');\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode.nextSibling : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n// cssBuildTypeForModule: function (module) {\n//   let dm = Polymer.DomModule.import(module);\n//   if (dm) {\n//     return getCssBuildType(dm);\n//   }\n// },\n//\nexport function getCssBuildType(element) {\n  return element.getAttribute('css-build');\n}\n\n// Walk from text[start] matching parens\n// returns position of the outer end paren\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\nexport let rx = {\n  VAR_ASSIGN: /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\\s}])|$)/gi,\n  MIXIN_MATCH: /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi,\n  VAR_CONSUMED: /(--[\\w-]+)\\s*([:,;)]|$)/gi,\n  ANIMATION_MATCH: /(animation\\s*:)|(animation-name\\s*:)/,\n  MEDIA_MATCH: /@media[^(]*(\\([^)]*\\))/,\n  IS_VAR: /^--/,\n  BRACKETED: /\\{[^}]*\\}/g,\n  HOST_PREFIX: '(?:^|[^.#[:])',\n  HOST_SUFFIX: '($|[.:[\\\\s>+~])'\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport * as StyleUtil from './style-util'\nimport {nativeShadow} from './style-settings'\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n*/\nexport let StyleTransformer = {\n\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom: function(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node.__styleScoped) {\n      node.__styleScoped = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  },\n\n  _transformDom: function(node, selector, shouldRemoveScope) {\n    if (node.classList) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  },\n\n  element: function(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            element.setAttribute(CLASS, c.replace(SCOPE_NAME, '')\n            .replace(scope, ''));\n          }\n        } else {\n          element.setAttribute(CLASS, (c ? c + ' ' : '') +\n          SCOPE_NAME + ' ' + scope);\n        }\n      }\n    }\n  },\n\n  elementStyles: function(element, styleRules, callback) {\n    let cssBuildType = element.__cssBuild;\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = (nativeShadow || cssBuildType === 'shady') ?\n    StyleUtil.toCssText(styleRules, callback) :\n    this.css(styleRules, element.is, element.extends, callback) + '\\n\\n';\n    return cssText.trim();\n  },\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css: function(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  },\n\n  _calcElementScope: function (scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  },\n\n  _calcHostScope: function(scope, ext) {\n    return ext ? '[is=' +  scope + ']' : scope;\n  },\n\n  rule: function (rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  },\n\n  // transforms a css rule to a scoped rule.\n  _transformRule: function(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule.selector = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  },\n\n  _transformRuleCss: function(rule, transformer, scope, hostScope) {\n    let p$ = rule.selector.split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  },\n\n  _transformComplexSelector: function(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    return selector;\n  },\n\n  _transformCompoundSelector: function(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >=0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0){\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    return {value: selector, combinator, stop};\n  },\n\n  _transformSimpleSelector: function(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  },\n\n  // :host(...) -> scopeName...\n  _transformHostSelector: function(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  },\n\n  documentRule: function(rule) {\n    // reset selector in case this is redone.\n    rule.selector = rule.parsedSelector;\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  },\n\n  normalizeRootSelector: function(rule) {\n    if (rule.selector === ROOT) {\n      rule.selector = 'html';\n    }\n  },\n\n  _transformDocumentSelector: function(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  },\n\n  SCOPE_NAME: 'style-scope'\n};\n\nlet SCOPE_NAME = StyleTransformer.SCOPE_NAME;\nlet SCOPE_DOC_SELECTOR = ':not([' + SCOPE_NAME + '])' +\n  ':not(.' + SCOPE_NAME + ')';\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=\\[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport default class StyleInfo {\n  static get(node) {\n    return node.__styleInfo;\n  }\n  static set(node, styleInfo) {\n    node.__styleInfo = styleInfo;\n    return styleInfo;\n  }\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    this.styleRules = ast || null;\n    this.placeholder = placeholder || null;\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    this.overrideStyleProperties = {};\n    this.elementName = elementName || '';\n    this.cssBuild = cssBuild || '';\n    this.typeExtension = typeExtension || '';\n    this.notStyleScopeCacheable = false;\n    this.styleProperties = null;\n    this.ownStyleProperties = null;\n    this.scopeSelector = null;\n    this.customStyle = null;\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment} from './css-parse'\nimport {nativeShadow} from './style-settings'\nimport {StyleTransformer} from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport StyleInfo from './style-info'\n\n// TODO: dedupe with shady\nlet p = window.Element.prototype;\nlet matchesSelector = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nlet IS_IE = navigator.userAgent.match('Trident');\n\nexport let StyleProperties = {\n\n  // decorates styles with rule info and returns an array of used style\n  // property names\n  decorateStyles: function(rules, scope) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    let scopeSelector = StyleTransformer._calcHostScope(scope.is, scope.extends);\n    let cssBuild = rules.__cssBuild;\n    let styleInfo = StyleInfo.get(scope);\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        // we can't cache styles with :host and :root props in @media rules\n        if (rule.parent.type === StyleUtil.ruleTypes.MEDIA_RULE) {\n          styleInfo.notStyleScopeCacheable = true;\n        }\n        if (info.isHost) {\n          // check if the selector is in the form of `:host-context()` or `:host()`\n          // if so, this style is not cacheable\n          let hostContextOrFunction = info.selector.split(' ').some(function(s) {\n            return s.indexOf(scopeSelector) === 0 && s.length !== scopeSelector.length;\n          });\n          styleInfo.notStyleScopeCacheable = styleInfo.notStyleScopeCacheable || hostContextOrFunction;\n        }\n      });\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  },\n\n  // decorate a single rule with property info\n  decorateRule: function(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule.rules = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  },\n\n  // collects the custom properties from a rule's cssText\n  collectProperties: function(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = this.rx.VAR_ASSIGN;\n      let cssText = rule.parsedCssText;\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  },\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText: function(rule) {\n    return this.collectConsumingCssText(rule.parsedCssText);\n  },\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText: function(cssText) {\n    return cssText.replace(this.rx.BRACKETED, '')\n      .replace(this.rx.VAR_ASSIGN, '');\n  },\n\n  collectPropertiesInCssText: function(cssText, props) {\n    let m;\n    while ((m = this.rx.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  },\n\n  // turns custom properties into realized values.\n  reify: function(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  },\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty: function(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback || 'unset';\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  },\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties: function(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        this.rx.MIXIN_MATCH.lastIndex = 0;\n        m = this.rx.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  },\n\n  applyProperties: function(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule.cssText = output;\n  },\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms: function(rule, keyframeTransforms) {\n    let input = rule.cssText;\n    let output = rule.cssText;\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = this.rx.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule.cssText = output;\n  },\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  propertyDataFromStyles: function(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule.parsedSelector;\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  },\n\n  whenHostOrRootRule: function(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let hostScope = scope.is ?\n    StyleTransformer._calcHostScope(scope.is, scope.extends) :\n    'html';\n    let parsedSelector = rule.parsedSelector;\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(scope.is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  },\n\n  hostAndRootPropertiesForScope: function(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules.__cssBuild;\n    StyleUtil.forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  },\n\n  transformStyles: function(element, properties, scopeSelector) {\n    let self = this;\n    let hostSelector = StyleTransformer\n      ._calcHostScope(element.is, element.extends);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(this.rx.HOST_PREFIX + rxHostSelector +\n      this.rx.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule.cssText) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  },\n\n  _elementKeyframeTransforms: function(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule.keyframesName] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  },\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  _keyframesRuleTransformer: function(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  },\n\n  // Transforms `@keyframes` names to be unique for the current host.\n  // Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n  _scopeKeyframes: function(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule.keyframesName, 'g');\n    rule.transformedKeyframesName = rule.keyframesName + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    rule.selector = rule.transformedSelector.replace(\n        rule.keyframesName, rule.transformedKeyframesName);\n  },\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  _scopeSelector: function(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule.selector = parts.join(',');\n  },\n\n  applyElementScopeSelector: function(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = old ? c.replace(old, selector) :\n      (c ? c + ' ' : '') + this.XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      element.setAttribute('class', v);\n    }\n  },\n\n  applyElementStyle: function(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s._useCount--;\n      if (s._useCount <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style._useCount = style._useCount || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style._useCount++;\n      }\n      styleInfo.customStyle = style;\n    }\n    // @media rules may be stale in IE 10 and 11\n    if (IS_IE) {\n      style.textContent = style.textContent;\n    }\n    return style;\n  },\n\n  applyCustomStyle: function(style, properties) {\n    let rules = StyleUtil.rulesForStyle(style);\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(rule) {\n      let css = rule.cssText = rule.parsedCssText;\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(css);\n        // replace with reified properties, scenario is same as mixin\n        rule.cssText = self.valueForProperties(css, properties);\n      }\n    });\n  },\n\n  rx: StyleUtil.rx,\n  XSCOPE_NAME: 'x-scope'\n};\n\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport let templateMap = {};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util'\nimport {nativeShadow} from './style-settings'\n\nexport let placeholderMap = {};\n\nconst ce = window.customElements;\nif (ce && !nativeShadow) {\n  const origDefine = ce.define;\n  ce.define = function(name, ...args) {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(ce, name, ...args);\n  };\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * The apply shim simulates the behavior of `@apply` proposed at\n * https://tabatkins.github.io/specs/css-apply-rule/.\n * The approach is to convert a property like this:\n *\n *    --foo: {color: red; background: blue;}\n *\n * to this:\n *\n *    --foo_-_color: red;\n *    --foo_-_background: blue;\n *\n * Then where `@apply --foo` is used, that is converted to:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background);\n *\n * This approach generally works but there are some issues and limitations.\n * Consider, for example, that somewhere *between* where `--foo` is set and used,\n * another element sets it to:\n *\n *    --foo: { border: 2px solid red; }\n *\n * We must now ensure that the color and background from the previous setting\n * do not apply. This is accomplished by changing the property set to this:\n *\n *    --foo_-_border: 2px solid red;\n *    --foo_-_color: initial;\n *    --foo_-_background: initial;\n *\n * This works but introduces one new issue.\n * Consider this setup at the point where the `@apply` is used:\n *\n *    background: orange;\n *    @apply --foo;\n *\n * In this case the background will be unset (initial) rather than the desired\n * `orange`. We address this by altering the property set to use a fallback\n * value like this:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background, orange);\n *    border: var(--foo_-_border);\n *\n * Note that the default is retained in the property set and the `background` is\n * the desired `orange`. This leads us to a limitation.\n *\n * Limitation 1:\n\n * Only properties in the rule where the `@apply`\n * is used are considered as default values.\n * If another rule matches the element and sets `background` with\n * less specificity than the rule in which `@apply` appears,\n * the `background` will not be set.\n *\n * Limitation 2:\n *\n * When using Polymer's `updateStyles` api, new properties may not be set for\n * `@apply` properties.\n\n*/\n\n'use strict';\n\nimport {rx, forEachRule, processVariableAndFallback, rulesForStyle} from './style-util'\nimport {templateMap} from './template-map'\n\nlet MIXIN_MATCH = rx.MIXIN_MATCH;\nlet VAR_ASSIGN = rx.VAR_ASSIGN;\n\nlet APPLY_NAME_CLEAN = /;\\s*/m;\nlet INITIAL_INHERIT = /^\\s*(initial)|(inherit)\\s*$/;\n\n// separator used between mixin-name and mixin-property-name when producing properties\n// NOTE: plain '-' may cause collisions in user styles\nlet MIXIN_VAR_SEP = '_-_';\n\n// map of mixin to property names\n// --foo: {border: 2px} -> {properties: {(--foo, ['border'])}, dependants: {'element-name': proto}}\nclass MixinMap {\n  constructor() {\n    this._map = {};\n  }\n  set(name, props) {\n    name = name.trim();\n    this._map[name] = {\n      properties: props,\n      dependants: {}\n    }\n  }\n  get(name) {\n    name = name.trim();\n    return this._map[name];\n  }\n}\n\nclass ApplyShim {\n  constructor() {\n    this._currentTemplate = null;\n    this._measureElement = null;\n    this._map = new MixinMap();\n    this._separator = MIXIN_VAR_SEP;\n    this._boundProduceCssProperties = (\n      matchText, propertyName, valueProperty, valueMixin) =>\n        this._produceCssProperties(\n          matchText, propertyName, valueProperty, valueMixin);\n  }\n  transformStyle(style, elementName) {\n    let ast = rulesForStyle(style);\n    this.transformRules(ast, elementName);\n    return ast;\n  }\n  transformRules(rules, elementName) {\n    this._currentTemplate = templateMap[elementName];\n    forEachRule(rules, (r) => { this.transformRule(r); });\n    if (this._currentTemplate) {\n      this._currentTemplate.__applyShimInvalid = false;\n    }\n    this._currentTemplate = null;\n  }\n  transformRule(rule) {\n    rule.cssText = this.transformCssText(rule.parsedCssText);\n    // :root was only used for variable assignment in property shim,\n    // but generates invalid selectors with real properties.\n    // replace with `:host > *`, which serves the same effect\n    if (rule.selector === ':root') {\n      rule.selector = ':host > *';\n    }\n  }\n  transformCssText(cssText) {\n    // produce variables\n    cssText = cssText.replace(VAR_ASSIGN, this._boundProduceCssProperties);\n    // consume mixins\n    return this._consumeCssProperties(cssText);\n  }\n  _getInitialValueForProperty(property) {\n    if (!this._measureElement) {\n      this._measureElement = document.createElement('meta');\n      this._measureElement.style.all = 'initial';\n      document.head.appendChild(this._measureElement);\n    }\n    return window.getComputedStyle(this._measureElement).getPropertyValue(property);\n  }\n  // replace mixin consumption with variable consumption\n  _consumeCssProperties(text) {\n    let m;\n    // loop over text until all mixins with defintions have been applied\n    while((m = MIXIN_MATCH.exec(text))) {\n      let matchText = m[0];\n      let mixinName = m[1];\n      let idx = m.index;\n      // collect properties before apply to be \"defaults\" if mixin might override them\n      // match includes a \"prefix\", so find the start and end positions of @apply\n      let applyPos = idx + matchText.indexOf('@apply');\n      let afterApplyPos = idx + matchText.length;\n      // find props defined before this @apply\n      let textBeforeApply = text.slice(0, applyPos);\n      let textAfterApply = text.slice(afterApplyPos);\n      let defaults = this._cssTextToMap(textBeforeApply);\n      let replacement = this._atApplyToCssProperties(mixinName, defaults);\n      // use regex match position to replace mixin, keep linear processing time\n      text = [textBeforeApply, replacement, textAfterApply].join('');\n      // move regex search to _after_ replacement\n      MIXIN_MATCH.lastIndex = idx + replacement.length;\n    }\n    return text;\n  }\n  // produce variable consumption at the site of mixin consumption\n  // @apply --foo; -> for all props (${propname}: var(--foo_-_${propname}, ${fallback[propname]}}))\n  // Example:\n  // border: var(--foo_-_border); padding: var(--foo_-_padding, 2px)\n  _atApplyToCssProperties(mixinName, fallbacks) {\n    mixinName = mixinName.replace(APPLY_NAME_CLEAN, '');\n    let vars = [];\n    let mixinEntry = this._map.get(mixinName);\n    // if we depend on a mixin before it is created\n    // make a sentinel entry in the map to add this element as a dependency for when it is defined.\n    if (!mixinEntry) {\n      this._map.set(mixinName, {});\n      mixinEntry = this._map.get(mixinName);\n    }\n    if (mixinEntry) {\n      if (this._currentTemplate) {\n        mixinEntry.dependants[this._currentTemplate.name] = this._currentTemplate;\n      }\n      let p, parts, f;\n      for (p in mixinEntry.properties) {\n        f = fallbacks && fallbacks[p];\n        parts = [p, ': var(', mixinName, MIXIN_VAR_SEP, p];\n        if (f) {\n          parts.push(',', f);\n        }\n        parts.push(')');\n        vars.push(parts.join(''));\n      }\n    }\n    return vars.join('; ');\n  }\n\n  _replaceInitialOrInherit(property, value) {\n    let match = INITIAL_INHERIT.exec(value);\n    if (match) {\n      if (match[1]) {\n        // initial\n        // replace `initial` with the concrete initial value for this property\n        value = ApplyShim._getInitialValueForProperty(property);\n      } else {\n        // inherit\n        // with this purposfully illegal value, the variable will be invalid at\n        // compute time (https://www.w3.org/TR/css-variables/#invalid-at-computed-value-time)\n        // and for inheriting values, will behave similarly\n        // we cannot support the same behavior for non inheriting values like 'border'\n        value = 'apply-shim-inherit';\n      }\n    }\n    return value;\n  }\n\n  // \"parse\" a mixin definition into a map of properties and values\n  // cssTextToMap('border: 2px solid black') -> ('border', '2px solid black')\n  _cssTextToMap(text) {\n    let props = text.split(';');\n    let property, value;\n    let out = {};\n    for (let i = 0, p, sp; i < props.length; i++) {\n      p = props[i];\n      if (p) {\n        sp = p.split(':');\n        // ignore lines that aren't definitions like @media\n        if (sp.length > 1) {\n          property = sp[0].trim();\n          // some properties may have ':' in the value, like data urls\n          value = this._replaceInitialOrInherit(property, sp.slice(1).join(':'));\n          out[property] = value;\n        }\n      }\n    }\n    return out;\n  }\n\n  _invalidateMixinEntry(mixinEntry) {\n    for (let elementName in mixinEntry.dependants) {\n      if (elementName !== this._currentTemplate) {\n        mixinEntry.dependants[elementName].__applyShimInvalid = true;\n      }\n    }\n  }\n\n  _produceCssProperties(matchText, propertyName, valueProperty, valueMixin) {\n    // handle case where property value is a mixin\n    if (valueProperty) {\n      // form: --mixin2: var(--mixin1), where --mixin1 is in the map\n      processVariableAndFallback(valueProperty, (prefix, value) => {\n        if (value && this._map.get(value)) {\n          valueMixin = '@apply ' + value + ';';\n        }\n      });\n    }\n    if (!valueMixin) {\n      return matchText;\n    }\n    let mixinAsProperties = this._consumeCssProperties(valueMixin);\n    let prefix = matchText.slice(0, matchText.indexOf('--'));\n    let mixinValues = this._cssTextToMap(mixinAsProperties);\n    let combinedProps = mixinValues;\n    let mixinEntry = this._map.get(propertyName);\n    let oldProps = mixinEntry && mixinEntry.properties;\n    if (oldProps) {\n      // NOTE: since we use mixin, the map of properties is updated here\n      // and this is what we want.\n      combinedProps = Object.assign(Object.create(oldProps), mixinValues);\n    } else {\n      this._map.set(propertyName, combinedProps);\n    }\n    let out = [];\n    let p, v;\n    // set variables defined by current mixin\n    let needToInvalidate = false;\n    for (p in combinedProps) {\n      v = mixinValues[p];\n      // if property not defined by current mixin, set initial\n      if (v === undefined) {\n        v = 'initial';\n      }\n      if (oldProps && !(p in oldProps)) {\n        needToInvalidate = true;\n      }\n      out.push(propertyName + MIXIN_VAR_SEP + p + ': ' + v);\n    }\n    if (needToInvalidate) {\n      this._invalidateMixinEntry(mixinEntry);\n    }\n    if (mixinEntry) {\n      mixinEntry.properties = combinedProps;\n    }\n    // because the mixinMap is global, the mixin might conflict with\n    // a different scope's simple variable definition:\n    // Example:\n    // some style somewhere:\n    // --mixin1:{ ... }\n    // --mixin2: var(--mixin1);\n    // some other element:\n    // --mixin1: 10px solid red;\n    // --foo: var(--mixin1);\n    // In this case, we leave the original variable definition in place.\n    if (valueProperty) {\n      prefix = matchText + ';' + prefix;\n    }\n    return prefix + out.join('; ') + ';';\n  }\n}\n\nlet applyShim = new ApplyShim();\nwindow['ApplyShim'] = applyShim;\nexport default applyShim;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse} from './css-parse'\nimport {nativeShadow, nativeCssVariables, nativeCssApply} from './style-settings'\nimport {StyleTransformer} from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport {StyleProperties} from './style-properties'\nimport {templateMap} from './template-map'\nimport {placeholderMap} from './style-placeholder'\nimport StyleInfo from './style-info'\n\n// TODO(dfreedm): consider spliting into separate global\nimport ApplyShim from './apply-shim'\n\nexport let ShadyCSS = {\n  scopeCounter: {},\n  nativeShadow: nativeShadow,\n  nativeCss: nativeCssVariables,\n  nativeCssApply: nativeCssApply,\n  _documentOwner: document.documentElement,\n  _documentOwnerStyleInfo: StyleInfo.set(document.documentElement, new StyleInfo({rules: []})),\n  _generateScopeSelector(name) {\n    let id = this.scopeCounter[name] = (this.scopeCounter[name] || 0) + 1;\n    return name + '-' + id;\n  },\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  },\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  },\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('').trim();\n  },\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  },\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild\n    };\n    if (!this.nativeShadow) {\n      StyleTransformer.dom(template.content, elementName);\n    }\n    let ast = parse(cssText);\n    if (this.nativeCss && !this.nativeCssApply) {\n      ApplyShim.transformRules(ast, elementName);\n    }\n    template._styleAst = ast;\n\n    let ownPropertyNames = [];\n    if (!this.nativeCss) {\n      ownPropertyNames = StyleProperties.decorateStyles(template._styleAst, info);\n    }\n    if (!ownPropertyNames.length || this.nativeCss) {\n      let root = this.nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template._styleAst, root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  },\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer.elementStyles(info, rules);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  },\n  _prepareHost(host) {\n    let is = host.getAttribute('is') || host.localName;\n    let typeExtension;\n    if (is !== host.localName) {\n      typeExtension = host.localName;\n    }\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template._styleAst;\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  },\n  applyStyle(host, overrideProps) {\n    if (window.CustomStyle) {\n      let CS = window.CustomStyle;\n      if (CS._documentDirty) {\n        CS.findStyles();\n        if (!this.nativeCss) {\n          this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n        } else if (!this.nativeCssApply) {\n          CS._revalidateApplyShim();\n        }\n        CS.applyStyles();\n        CS._documentDirty = false;\n      }\n    }\n    let styleInfo = StyleInfo.get(host);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    let is = host.getAttribute('is') || host.localName;\n    Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    if (this.nativeCss) {\n      let template = templateMap[is];\n      if (template && template.__applyShimInvalid && template._style) {\n        // update template\n        ApplyShim.transformRules(template._styleAst, is);\n        template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n        // update instance if native shadowdom\n        if (this.nativeShadow) {\n          let style = host.shadowRoot.querySelector('style');\n          style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n        }\n        styleInfo.styleRules = template._styleAst;\n      }\n      this._updateNativeProperties(host, styleInfo.overrideStyleProperties);\n    } else {\n      this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        // TODO: use caching\n        this._applyStyleProperties(host, styleInfo);\n      }\n      let root = this._isRootOwner(host) ? host : host.shadowRoot;\n      // note: some elements may not have a root!\n      if (root) {\n        this._applyToDescendants(root);\n      }\n    }\n  },\n  _applyToDescendants(root) {\n    let c$ = root.children;\n    for (let i = 0, c; i < c$.length; i++) {\n      c = c$[i];\n      if (c.shadowRoot) {\n        this.applyStyle(c);\n      }\n      this._applyToDescendants(c);\n    }\n  },\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  },\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  },\n  _applyStyleProperties(host, styleInfo) {\n    let is = host.getAttribute('is') || host.localName;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    styleInfo.scopeSelector = this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, null);\n    if (!this.nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    return style;\n  },\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertiesMatchingHost = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host).properties;\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n    let ownProps = {};\n    if (styleInfo.ownStylePropertyNames) {\n      for (let i = 0, n; i < styleInfo.ownStylePropertyNames.length; i++) {\n        n = styleInfo.ownStylePropertyNames[i];\n        ownProps[n] = props[n];\n      }\n    }\n    styleInfo.ownStyleProperties = ownProps;\n  },\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  },\n  _updateNativeProperties(element, properties) {\n    // remove previous properties\n    for (let p in properties) {\n      // NOTE: for bc with shim, don't apply null values.\n      if (p === null) {\n        element.style.removeProperty(p);\n      } else {\n        element.style.setProperty(p, properties[p]);\n      }\n    }\n  },\n  updateStyles(properties) {\n    if (window.CustomStyle) {\n      window.CustomStyle._documentDirty = true;\n    }\n    this.applyStyle(this._documentOwner, properties);\n  },\n  /* Custom Style operations */\n  _transformCustomStyleForDocument(style) {\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (this.nativeCss && !this.nativeCssApply) {\n        ApplyShim.transformRule(rule);\n      }\n    });\n    if (this.nativeCss) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  },\n  _revalidateApplyShim(style) {\n    if (this.nativeCss && !this.nativeCssApply) {\n      let ast = StyleUtil.rulesForStyle(style);\n      ApplyShim.transformRules(ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  },\n  _applyCustomStyleToDocument(style) {\n    if (!this.nativeCss) {\n      StyleProperties.applyCustomStyle(style, this._documentOwnerStyleInfo.styleProperties);\n    }\n  }\n}\n\nwindow['ShadyCSS'] = ShadyCSS;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nWrapper over <style> elements to co-operate with ShadyCSS\n\nExample:\n<shady-style>\n  <style>\n  ...\n  </style>\n</shady-style>\n*/\n\n'use strict';\n\nlet ShadyCSS = window.ShadyCSS;\n\nlet enqueued = false;\n\nlet customStyles = [];\n\nlet hookFn = null;\n\n/*\nIf a page only has <custom-style> elements, it will flash unstyled content,\nas all the instances will boot asynchronously after page load.\n\nCalling ShadyCSS.updateStyles() will force the work to happen synchronously\n*/\nfunction enqueueDocumentValidation() {\n  if (enqueued) {\n    return;\n  }\n  enqueued = true;\n  if (window.HTMLImports) {\n    window.HTMLImports.whenReady(validateDocument);\n  } else if (document.readyState === 'complete') {\n    requestAnimationFrame(validateDocument);\n  } else {\n    document.addEventListener('readystatechange', function() {\n      if (document.readyState === 'complete') {\n        validateDocument();\n      }\n    });\n  }\n}\n\nfunction validateDocument() {\n  if (enqueued) {\n    ShadyCSS.updateStyles();\n    enqueued = false;\n  }\n}\n\nfunction CustomStyle() {\n  /*\n  Use Reflect to invoke the HTMLElement constructor, or rely on the\n  CustomElement polyfill replacement that can be `.call`ed\n  */\n  const self = (window.Reflect && Reflect.construct)\n    ? Reflect.construct(HTMLElement, [], this.constructor || CustomStyle)\n    : HTMLElement.call(this);\n  customStyles.push(self);\n  enqueueDocumentValidation();\n  return self;\n}\n\nObject.defineProperties(CustomStyle, {\n  /*\n  CustomStyle.processHook is provided to customize the <style> element child of\n  a <custom-style> element before the <style> is processed by ShadyCSS\n\n  The function must take a <style> element as input, and return nothing.\n  */\n  processHook: {\n    get() {\n      return hookFn;\n    },\n    set(fn) {\n      hookFn = fn;\n      return fn;\n    }\n  },\n  _customStyles: {\n    get() {\n      return customStyles;\n    }\n  },\n  _documentDirty: {\n    get() {\n      return enqueued;\n    },\n    set(value) {\n      enqueued = value;\n      return value;\n    }\n  }\n});\n\nCustomStyle.findStyles = function() {\n  for (let i = 0; i < customStyles.length; i++) {\n    customStyles[i]._findStyle();\n  }\n};\n\nCustomStyle._revalidateApplyShim = function() {\n  for (let i = 0; i < customStyles.length; i++) {\n    let s = customStyles[i];\n    if (s._style) {\n      ShadyCSS._revalidateApplyShim(s._style);\n    }\n  }\n}\n\nCustomStyle.applyStyles = function() {\n  for (let i = 0; i < customStyles.length; i++) {\n    customStyles[i]._applyStyle();\n  }\n};\n\nCustomStyle.prototype = Object.create(HTMLElement.prototype, {\n  'constructor': {\n    value: CustomStyle,\n    configurable: true,\n    writable: true\n  }\n});\n\nCustomStyle.prototype._findStyle = function() {\n  if (!this._style) {\n    let style = this.querySelector('style');\n    if (!style) {\n      return;\n    }\n    // HTMLImports polyfill may have cloned the style into the main document,\n    // which is referenced with __appliedStyle.\n    // Also, we must copy over the attributes.\n    if (style.__appliedStyle) {\n      for (let i = 0; i < style.attributes.length; i++) {\n        let attr = style.attributes[i];\n        style.__appliedStyle.setAttribute(attr.name, attr.value);\n      }\n    }\n    this._style = style.__appliedStyle || style;\n    if (hookFn) {\n      hookFn(this._style);\n    }\n    ShadyCSS._transformCustomStyleForDocument(this._style);\n  }\n};\n\nCustomStyle.prototype._applyStyle = function() {\n  if (this._style) {\n    ShadyCSS._applyCustomStyleToDocument(this._style);\n  }\n};\n\nwindow.customElements.define('custom-style', CustomStyle);\nwindow['CustomStyle'] = CustomStyle;\n"],"sourceRoot":"/source/"}