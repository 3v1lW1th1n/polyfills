{"version":3,"sources":["src/template-map.js"," [synthetic:util/global] ","src/css-parse.js","src/apply-shim-revalidate.js","src/shady-css.js","src/common-regex.js","src/style-settings.js","src/style-util.js","src/custom-style-interface.js","src/style-transformer.js","src/document-watcher.js","src/style-info.js","src/style-properties.js","src/style-placeholder.js","src/style-cache.js"],"names":["$jscomp.global","$jscompDefaultExport","constructor","StyleNode","parse$$module$$src$css_parse","parse","text","replace","RX$$module$$src$css_parse.comments","RX$$module$$src$css_parse.port","parseCss","root","length","n","i","l","OPEN_BRACE","p","previous","push","CLOSE_BRACE","parseCss$$module$$src$css_parse","node","t","substring","trim","ss","_expandUnicodeEscapes","RX$$module$$src$css_parse.multipleSpaces","lastIndexOf","s","indexOf","AT_START","MEDIA_START","match","RX$$module$$src$css_parse.keyframesRule","types$$module$$src$css_parse.KEYFRAMES_RULE","split","pop","types$$module$$src$css_parse.MEDIA_RULE","VAR_START","types$$module$$src$css_parse.STYLE_RULE","types$$module$$src$css_parse.MIXIN_RULE","r$","r","_expandUnicodeEscapes$$module$$src$css_parse","code","repeat","stringify$$module$$src$css_parse","stringify","preserveProperties","cssText","rules","RX$$module$$src$css_parse.customProp","RX$$module$$src$css_parse.mixinProp","RX$$module$$src$css_parse.mixinApply","RX$$module$$src$css_parse.varApply","STYLE_RULE","KEYFRAMES_RULE","MEDIA_RULE","MIXIN_RULE","comments","port","customProp","mixinProp","mixinApply","varApply","keyframesRule","multipleSpaces","promise","Promise","resolve","invalidate$$module$$src$apply_shim_revalidate","invalidate","elementName","template","_applyShimInvalid","startValidatingTemplate$$module$$src$apply_shim_revalidate","startValidatingTemplate","_validating","then","ensure","impl","window","transformRules","ast","ApplyShim","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","MEDIA_MATCH","BRACKETED","nativeShadow","nativeCssVariables","navigator","userAgent","CSS","supports","parseSettings$$module$$src$style_settings","parseSettings","settings","ShadyCSS","WebComponents","module$$src$style_settings.nativeShadow","module$$src$style_settings.nativeCssVariables","toCssText$$module$$src$style_util","toCssText","callback","forEachRule","rulesForStyle$$module$$src$style_util","rulesForStyle","style","textContent","isKeyframesSelector$$module$$src$style_util","isKeyframesSelector","rule","forEachRule$$module$$src$style_util","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","type","matchMedia","matches","applyCss$$module$$src$style_util","applyCss","moniker","target","contextNode","document","createElement","setAttribute","applyStyle","applyStyle$$module$$src$style_util","head","after","nextSibling","firstChild","lastHeadApplyNode","insertBefore","processVariableAndFallback$$module$$src$style_util","processVariableAndFallback","str","start","end","level","inner","prefix","suffix","comma","value","fallback","setElementClassRaw$$module$$src$style_util","setElementClassRaw","element","call","getIsExtends$$module$$src$style_util","getIsExtends","is","getAttribute","localName","extends","extendz","CustomStyleInterface","transformerFn","validateFn","customStyles","enqueued","enqueueDocumentValidation","readyState","addEventListener","getStyleForCustomStyle","customStyle","StyleTransformer","dom","scope","shouldRemoveScope","_transformDom","selector","nodeType","Node","ELEMENT_NODE","classList","remove","SCOPE_NAME","add","c","CLASS","newValue","c$","childNodes","content","_content","children","elementStyles","styleRules","cssBuildType","__cssBuild","css","ext","hostScope","_calcHostScope","CSS_CLASS_PREFIX","isScoped","transformedSelector","_transformRuleCss","self","_transformComplexSelector","transformer","p$","COMPLEX_SELECTOR_SEP","join","stop","NTH","m","SLOTTED_START","HOST","SIMPLE_SELECTOR_SEP","info","_transformCompoundSelector","combinator","slottedIndex","SLOTTED","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","DIR_PAREN","before","dir","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","host","typeSelector","SELECTOR_NO_MATCH","normalizeRootSelector","ROOT","_transformDocumentSelector","SCOPE_DOC_SELECTOR","$jscomp.global.Object.defineProperties","RegExp","flush$$module$$src$document_watcher","handler","mxns","x","mxn","documentElement","addedNodes","contains","hasAttribute","getRootNode","DOCUMENT_FRAGMENT_NODE","removedNodes","classes","undefined","Array","from","classIdx","observer","MutationObserver","observe","childList","subtree","customElements","delayedStart","body","requestAnimationFrame","listener","removeEventListener","flush","takeRecords","module$$src$document_watcher.flush","StyleInfo","placeholder","ownStylePropertyNames","scopeSelector","styleProperties","overrideStyleProperties","get","set","styleInfo","prototype","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","IS_IE","StyleProperties","decorateStyles","props","keyframes","ruleIndex","decorateRule","index","propertyInfo","exec","name","onKeyframesRule","_keyframes","names","properties","collectProperties","hasProperties","Object","assign","any","valueForProperty","property","valueForProperties","fn","propertyValue","parts","lastIndex","colon","pp","slice","propertyDataFromStyles","o","selectorToMatch","parseInt","key","whenHostOrRootRule","cssBuild","isExtends","parsedSelector","isRoot","isHost","hostAndRootPropertiesForScope","hostProps","rootProps","_element","transformStyles","hostSelector","hostRx","HOST_PREFIX","rxHostSelector","HOST_SUFFIX","StyleInfo$$module$$src$style_info.get","keyframeTransforms","_elementKeyframeTransforms","output","input","hasAnimations","test","keyframeNamesToTransform","keyframe","transform","keyframesRules","keyframesNameRx","transformedKeyframesName","scopeId","_keyframesRuleTransformer","applyCustomStyle","XSCOPE_NAME","placeholderMap","ce","origDefine","clazz","options","placeHolder","createComment","styleCache","cache","typeMax","_scopeCounter","_documentOwner","_documentOwnerStyleInfo","StyleInfo$$module$$src$style_info.set","_elementsHaveApplied","_customStyleInterface","transformFn","transformCustomStyleForDocument","flushCustomStyles","ShadyCSS$$module$$src$shady_css.prototype","?.prototype","ShadyCSS$$module$$src$shady_css_prototype$flush","getStyleAst","styleAstToString","prepareTemplate","typeExtension","_prepared","querySelector","styles","querySelectorAll","parentNode","removeChild","hasMixins","_styleAst","_cssBuild","ownPropertyNames","shadowroot","_style","_ownPropertyNames","appliedStyle","attributes","attr","_updateProperties","_applyCustomStyles","updateStyles","ShadyCSS$$module$$src$shady_css_prototype$applyElementStyle","applyElementStyle","overrideProps","_isRootOwner","removeProperty","setProperty","shadowRoot","list","idx","entry","pn","cachedStyle","cacheEntry","styleElement","oldScopeSelector","cachedScopeSelector","id","v","shift","_styleOwnerForNode","owner","ownerStyleInfo","create","hostAndRootProps","propertiesMatchingHost","propertyData","overrides","getOwnPropertyNames","applySubtreeStyle","shadowChildren","_transformRule","addDocumentStyle","getComputedStyleValue","getComputedStyle","getPropertyValue","setElementClass","classString","scopeName","classAttr","k$","_styleInfoForNode","defineProperties"],"mappings":"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","file":"shadycss.min.js","sourcesContent":["/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport default {};\n",null,"/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n/** @unrestricted */\nclass StyleNode {\n  constructor() {\n    /** @type {number} */\n    this['start'] = 0;\n    /** @type {number} */\n    this['end'] = 0;\n    /** @type {StyleNode} */\n    this['previous'] = null;\n    /** @type {StyleNode} */\n    this['parent'] = null;\n    /** @type {Array<StyleNode>} */\n    this['rules'] = null;\n    /** @type {string} */\n    this['parsedCssText'] = '';\n    /** @type {string} */\n    this['cssText'] = '';\n    /** @type {boolean} */\n    this['atRule'] = false;\n    /** @type {number} */\n    this['type'] = 0;\n    /** @type {string} */\n    this['keyframesName'] = '';\n    /** @type {string} */\n    this['selector'] = '';\n    /** @type {string} */\n    this['parsedSelector'] = '';\n  }\n}\n\nexport {StyleNode}\n\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n  let root = new StyleNode();\n  root['start'] = 0;\n  root['end'] = text.length\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n['rules']) {\n        n['rules'] = [];\n      }\n      let p = n;\n      let previous = p['rules'][p['rules'].length - 1] || null;\n      n = new StyleNode();\n      n['start'] = i + 1;\n      n['parent'] = p;\n      n['previous'] = previous;\n      p['rules'].push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n['end'] = i + 1;\n      n = n['parent'] || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n  let t = text.substring(node['start'], node['end'] - 1);\n  node['parsedCssText'] = node['cssText'] = t.trim();\n  if (node['parent']) {\n    let ss = node['previous'] ? node['previous']['end'] : node['parent']['start'];\n    t = text.substring(ss, node['start'] - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node['parsedSelector'] = node['selector'] = t.trim();\n    node['atRule'] = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node['atRule']) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node['type'] = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node['type'] = types.KEYFRAMES_RULE;\n        node['keyframesName'] =\n          node['selector'].split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node['type'] = types.MIXIN_RULE;\n      } else {\n        node['type'] = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node['rules'];\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n/**\n * stringify parsed css.\n * @param {StyleNode} node\n * @param {boolean=} preserveProperties\n * @param {string=} text\n * @return {string}\n */\nexport function stringify(node, preserveProperties, text = '') {\n  // calc rule cssText\n  let cssText = '';\n  if (node['cssText'] || node['rules']) {\n    let r$ = node['rules'];\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node['cssText'] :\n        removeCustomProps(node['cssText']);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node['selector']) {\n      text += node['selector'] + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node['selector']) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\n/**\n * @param {Array<StyleNode>} rules\n * @return {boolean}\n */\nfunction _hasMixinRules(rules) {\n  let r = rules[0];\n  return Boolean(r) && Boolean(r['selector']) && r['selector'].indexOf(VAR_START) === 0;\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\n/** @enum {number} */\nexport const types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nconst OPEN_BRACE = '{';\nconst CLOSE_BRACE = '}';\n\n// helper regexp's\nconst RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nconst VAR_START = '--';\nconst MEDIA_START = '@media';\nconst AT_START = '@';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\nimport templateMap from './template-map'\nimport {StyleNode} from './css-parse'\n\n/**\n * @const {Promise}\n */\nconst promise = Promise.resolve();\n\nexport function invalidate(elementName){\n  let template = templateMap[elementName];\n  if (template) {\n    invalidateTemplate(template);\n  }\n}\n\nexport function invalidateTemplate(template) {\n  template._applyShimInvalid = true;\n}\n\nexport function isValid(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValid(template);\n  }\n  return true;\n}\n\nexport function templateIsValid(template) {\n  return !template._applyShimInvalid;\n}\n\nexport function isValidating(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValidating(template);\n  }\n  return false;\n}\n\nexport function templateIsValidating(template) {\n  return template._validating;\n}\n\n/*\nthe template is marked as `validating` for one microtask so that all instances\nfound in the tree crawl of `applyStyle` will update themselves,\nbut the template will only be updated once.\n*/\nexport function startValidating(elementName) {\n  let template = templateMap[elementName];\n  startValidatingTemplate(template);\n}\n\nexport function startValidatingTemplate(template) {\n  if (!template._validating) {\n    template._validating = true;\n    promise.then(function() {\n      template._applyShimInvalid = false;\n      template._validating = false;\n    });\n  }\n}\n\nexport class ApplyShimShim {\n  constructor() {\n    /** @type {Object} */\n    this.impl;\n  }\n  ensure() {\n    if (!this.impl) {\n      this.impl = window['ApplyShim'] || {\n        ['detectMixin'](){return false},\n        ['transformRule'](){},\n        ['transformRules'](){}\n      };\n      this.impl['invalidCallback'] = invalidate;\n    }\n  }\n  /**\n   * @param {string} text\n   * @return {boolean}\n   */\n  detectMixin(text) {\n    this.ensure();\n    return this.impl['detectMixin'](text);\n  }\n  /**\n   * @param {StyleNode} ast\n   * @param {string=} elementName\n   */\n  transformRules(ast, elementName) {\n    this.ensure();\n    return this.impl['transformRules'](ast, elementName);\n  }\n  /**\n   * @param {StyleNode} ast\n   */\n  transformRule(ast) {\n    this.ensure();\n    this.impl['transformRule'](ast);\n  }\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse, StyleNode} from './css-parse'\nimport {nativeShadow, nativeCssVariables} from './style-settings'\nimport StyleTransformer from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport StyleProperties from './style-properties'\nimport placeholderMap from './style-placeholder'\nimport StyleInfo from './style-info'\nimport StyleCache from './style-cache'\nimport {flush as watcherFlush} from './document-watcher'\nimport templateMap from './template-map'\nimport CustomStyleInterface from './custom-style-interface'\nimport * as ApplyShimUtils from './apply-shim-revalidate'\n\n/**\n * @const {ApplyShimUtils.ApplyShimShim}\n */\nconst ApplyShim = new ApplyShimUtils.ApplyShimShim();\n\n/**\n * @const {StyleCache}\n */\nconst styleCache = new StyleCache();\n\nclass ShadyCSS {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = document.documentElement;\n    this._documentOwnerStyleInfo = StyleInfo.set(document.documentElement, new StyleInfo({rules: []}));\n    this._elementsHaveApplied = false;\n    /** @type {function(!HTMLStyleElement)} */\n    const transformFn = (style) => {this.transformCustomStyleForDocument(style)};\n    const validateFn = () => {\n      requestAnimationFrame(() => {\n        if (this._customStyleInterface.enqueued || this._elementsHaveApplied) {\n          this.flushCustomStyles();\n        }\n      })\n    };\n    this._customStyleInterface = new CustomStyleInterface(transformFn, validateFn);\n  }\n  flush() {\n    watcherFlush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  }\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('').trim();\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  /**\n   * Prepare the styling and template for the given element type\n   *\n   * @param {HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    if (!nativeShadow) {\n      StyleTransformer.dom(template.content, elementName);\n    }\n    // check if the styling has mixin definitions or uses\n    let hasMixins = ApplyShim.detectMixin(cssText);\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && nativeCssVariables) {\n      ApplyShim.transformRules(ast, elementName);\n    }\n    template._styleAst = ast;\n    template._cssBuild = cssBuild;\n\n    let ownPropertyNames = [];\n    if (!nativeCssVariables) {\n      ownPropertyNames = StyleProperties.decorateStyles(template._styleAst, info);\n    }\n    if (!ownPropertyNames.length || nativeCssVariables) {\n      let root = nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template._styleAst, root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer.elementStyles(info, rules);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let {is, extends: typeExtension} = StyleUtil.getIsExtends(host);\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template._styleAst;\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  }\n  /**\n   * Flush and apply custom styles to document\n   */\n  flushCustomStyles() {\n    this._customStyleInterface.findStyles();\n    // early return if custom-styles don't need validation\n    if (!this._customStyleInterface.enqueued) {\n      return;\n    }\n    let customStyles = this._customStyleInterface.customStyles;\n    if (!nativeCssVariables) {\n      this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n      this._applyCustomStyles(customStyles);\n    } else {\n      this._revalidateCustomStyleApplyShim(customStyles);\n    }\n    this._customStyleInterface.enqueued = false;\n    // if custom elements have upgraded and there are no native custom properties, we must recalculate the whole tree\n    if (this._elementsHaveApplied && !nativeCssVariables) {\n      this.updateStyles();\n    }\n  }\n  /**\n   * Apply styles for the given element\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} overrideProps\n   */\n  applyElementStyle(host, overrideProps) {\n    let is = host.getAttribute('is') || host.localName;\n    let styleInfo = StyleInfo.get(host);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (!nativeCssVariables) {\n     this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    } else {\n      if (styleInfo.overrideStyleProperties) {\n        this._updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      if (template && template._style && !ApplyShimUtils.templateIsValid(template)) {\n        // update template\n        if (!ApplyShimUtils.templateIsValidating(template)) {\n          ApplyShim.transformRules(template._styleAst, is);\n          template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          ApplyShimUtils.startValidatingTemplate(template);\n        }\n        // update instance if native shadowdom\n        if (nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template._styleAst;\n      }\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = StyleUtil.getIsExtends(host).is;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  _updateNativeProperties(element, properties) {\n    // remove previous properties\n    for (let p in properties) {\n      // NOTE: for bc with shim, don't apply null values.\n      if (p === null) {\n        element.style.removeProperty(p);\n      } else {\n        element.style.setProperty(p, properties[p]);\n      }\n    }\n  }\n  /**\n   * Update styles of the whole document\n   *\n   * @param {Object=} properties\n   */\n  updateStyles(properties) {\n    this.applySubtreeStyle(this._documentOwner, properties);\n  }\n  /**\n   * Update styles of a subtree\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} properties\n   */\n  applySubtreeStyle(host, properties) {\n    if (host.shadowRoot || this._isRootOwner(host)) {\n      this.applyElementStyle(host, properties);\n    }\n    // process the shadowdom children of `root`\n    let shadowChildren = host.shadowRoot && host.shadowRoot.children;\n    if (shadowChildren) {\n      for (let i = 0; i < shadowChildren.length; i++) {\n        let c = /** @type {!HTMLElement} */(shadowChildren[i]);\n        this.applySubtreeStyle(c);\n      }\n    }\n    // process the lightdom children of `root`\n    let children = host.children;\n    if (children) {\n      for (let i = 0; i < children.length; i++) {\n        let c = /** @type {!HTMLElement} */(children[i]);\n        this.applySubtreeStyle(c);\n      }\n    }\n  }\n  /* Custom Style operations */\n  _revalidateCustomStyleApplyShim(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface.getStyleForCustomStyle(c);\n      if (s) {\n        this._revalidateApplyShim(s);\n      }\n    }\n  }\n  _applyCustomStyles(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface.getStyleForCustomStyle(c);\n      if (s) {\n        StyleProperties.applyCustomStyle(s, this._documentOwnerStyleInfo.styleProperties);\n      }\n    }\n  }\n  transformCustomStyleForDocument(style) {\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (nativeCssVariables) {\n        ApplyShim.transformRule(rule);\n      }\n    });\n    if (nativeCssVariables) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  }\n  addDocumentStyle(style) {\n    this._customStyleInterface.addCustomStyle(style);\n  }\n  _revalidateApplyShim(style) {\n    if (nativeCssVariables) {\n      let ast = StyleUtil.rulesForStyle(style);\n      ApplyShim.transformRules(ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!nativeCssVariables) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value.trim();\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!nativeCssVariables) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\n/* exports */\nShadyCSS.prototype['flush'] = ShadyCSS.prototype.flush;\nShadyCSS.prototype['prepareTemplate'] = ShadyCSS.prototype.prepareTemplate;\nShadyCSS.prototype['applyElementStyle'] = ShadyCSS.prototype.applyElementStyle;\nShadyCSS.prototype['updateStyles'] = ShadyCSS.prototype.updateStyles;\nShadyCSS.prototype['applySubtreeStyle'] = ShadyCSS.prototype.applySubtreeStyle;\nShadyCSS.prototype['getComputedStyleValue'] = ShadyCSS.prototype.getComputedStyleValue;\nShadyCSS.prototype['setElementClass'] = ShadyCSS.prototype.setElementClass;\nShadyCSS.prototype['_styleInfoForNode'] = ShadyCSS.prototype._styleInfoForNode;\nShadyCSS.prototype['transformCustomStyleForDocument'] = ShadyCSS.prototype.transformCustomStyleForDocument;\nShadyCSS.prototype['getStyleAst'] = ShadyCSS.prototype.getStyleAst;\nShadyCSS.prototype['styleAstToString'] = ShadyCSS.prototype.styleAstToString;\nShadyCSS.prototype['addDocumentStyle'] = ShadyCSS.prototype.addDocumentStyle;\nShadyCSS.prototype['flushCustomStyles'] = ShadyCSS.prototype.flushCustomStyles;\nObject.defineProperties(ShadyCSS.prototype, {\n  'nativeShadow': {\n    get() {\n      return nativeShadow;\n    }\n  },\n  'nativeCss': {\n    get() {\n      return nativeCssVariables;\n    }\n  }\n});\n\nwindow['ShadyCSS'] = new ShadyCSS();","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const VAR_ASSIGN = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\\s}])|$)/gi;\nexport const MIXIN_MATCH = /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi;\nexport const VAR_CONSUMED = /(--[\\w-]+)\\s*([:,;)]|$)/gi;\nexport const ANIMATION_MATCH = /(animation\\s*:)|(animation-name\\s*:)/;\nexport const MEDIA_MATCH = /@media[^(]*(\\([^)]*\\))/;\nexport const IS_VAR = /^--/;\nexport const BRACKETED = /\\{[^}]*\\}/g;\nexport const HOST_PREFIX = '(?:^|[^.#[:])';\nexport const HOST_SUFFIX = '($|[.:[\\\\s>+~])';","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport let nativeShadow = !(window['ShadyDOM'] && window['ShadyDOM']['inUse']);\n// chrome 49 has semi-working css vars, check if box-shadow works\n// safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\nexport let nativeCssVariables = (!navigator.userAgent.match('AppleWebKit/601') &&\nwindow.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n\n/**\n * @param {?Object} settings\n */\nfunction parseSettings(settings) {\n  if (settings) {\n    nativeCssVariables = nativeCssVariables && !settings['shimcssproperties'];\n    nativeShadow = nativeShadow && !settings['shimshadow'];\n  }\n}\n\nif (window.ShadyCSS) {\n  parseSettings(window['ShadyCSS']);\n} else if (window.WebComponents) {\n  parseSettings(window['WebComponents']['flags']);\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables} from './style-settings'\nimport {parse, stringify, types, StyleNode} from './css-parse'\nimport {MEDIA_MATCH} from './common-regex';\n\n/**\n * @param {string|StyleNode} rules\n * @param {function(StyleNode)=} callback\n */\nexport function toCssText (rules, callback) {\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @return {StyleNode}\n */\nexport function rulesForStyle(style) {\n  if (!style['__cssRules'] && style.textContent) {\n    style['__cssRules'] = parse(style.textContent);\n  }\n  return style['__cssRules'];\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\n/**\n * @param {StyleNode} rule\n * @return {boolean}\n */\nexport function isKeyframesSelector(rule) {\n  return Boolean(rule['parent']) &&\n  rule['parent']['type'] === types.KEYFRAMES_RULE;\n}\n\n/**\n * @param {StyleNode} node\n * @param {Function=} styleRuleCallback\n * @param {Function=} keyframesRuleCallback\n * @param {boolean=} onlyActiveRules\n */\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  let type = node['type'];\n  if (onlyActiveRules) {\n    if (type === types.MEDIA_RULE) {\n      let matchMedia = node['selector'].match(MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node['rules'];\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @param {Node} target\n * @param {Node} contextNode\n * @return {HTMLStyleElement}\n */\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  return applyStyle(style, target, contextNode);\n}\n\n/**\n * @param {Node} style\n * @param {?Node} target\n * @param {?Node} contextNode\n * @return {HTMLStyleElement}\n */\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n  target.firstChild;\n  lastHeadApplyNode = style;\n  return /** @type {HTMLStyleElement} */(target.insertBefore(style, after));\n}\n\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @return {Element}\n */\nexport function createScopeStyle(cssText, moniker) {\n  let style = document.createElement('style');\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\n/** @type {Node} */\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\n/**\n * @param {string} moniker\n * @return {Node}\n */\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode['nextSibling'] : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n/**\n * @param {string} buildType\n * @return {boolean}\n */\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n/**\n * @param {Element} element\n * @return {?string}\n */\nexport function getCssBuildType(element) {\n  return element.getAttribute('css-build');\n}\n\n/**\n * Walk from text[start] matching parens and\n * returns position of the outer end paren\n * @param {string} text\n * @param {number} start\n * @return {number}\n */\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * @param {string} str\n * @param {function(string, string, string, string)} callback\n */\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\n/**\n * @param {Element} element\n * @param {string} value\n */\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (window['ShadyDOM']) {\n    window['ShadyDOM']['nativeMethods']['setAttribute'].call(element, 'class', value);\n  } else {\n    element.setAttribute('class', value);\n  }\n}\n\n/**\n * @param {Element|Object} element\n * @return {{is: string, extends: string}}\n */\nexport function getIsExtends(element) {\n  let is = element.is || (element.getAttribute && element.getAttribute('is')) || element.localName;\n  let extendz = element.extends || element.localName !== is ? element.localName : '';\n  return {is, extends: extendz};\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/**\n * @typedef {HTMLStyleElement | ({getStyle: (function():HTMLStyleElement)})}\n */\nlet CustomStyleProvider;\n\nconst PROCESSED_MARKER = '__processedByShadyCSS';\nconst SEEN_MARKER = '__seenByShadyCSS';\n\n/*\nThis interface is provided to add document-level <style> elements to ShadyCSS for processing.\nThese styles must be processed by ShadyCSS to simulate ShadowRoot upper-bound encapsulation from outside styles\nIn addition, these styles may also need to be processed for @apply rules and CSS Custom Properties\n\nTo add document-level styles to ShadyCSS, one can call `ShadyCSS.addDocumentStyle(styleElement)` or `ShadyCSS.addDocumentStyle({getStyle: () => styleElement})`\n\nIn addition, if the process used to discover document-level styles can be synchronously flushed, one should set `ShadyCSS.documentStyleFlush`.\nThis function will be called when calculating styles.\n\nAn example usage of the document-level styling api can be found in `examples/document-style-lib.js`\n*/\nexport default class CustomStyleInterface {\n  constructor(transformerFn, validateFn) {\n    this.transformerFn = transformerFn;\n    this.validateFn = validateFn;\n    /** @type {!Array<!CustomStyleProvider>} */\n    this.customStyles = [];\n    this.enqueued = false;\n  }\n  /**\n   * Queue a validation for new custom styles to batch style recalculations\n   */\n  enqueueDocumentValidation() {\n    if (this.enqueued) {\n      return;\n    }\n    this.enqueued = true;\n    if (window['HTMLImports']) {\n      window['HTMLImports']['whenReady'](this.validateFn);\n    } else if (document.readyState === 'complete') {\n      /*\n      TODO(dfreedm): Must implement a batching procedure when native HTML Imports are used to facilitate batching due to O(n^2) processing\n      */\n      this.validateFn();\n    } else {\n      document.addEventListener('readystatechange', () => {\n        if (document.readyState === 'complete') {\n          this.validateFn();\n        }\n      });\n    }\n  }\n  /**\n   * @param {!HTMLStyleElement} style\n   */\n  addCustomStyle(style) {\n    if (!style[SEEN_MARKER]) {\n      style[SEEN_MARKER] = true;\n      this.customStyles.push(style);\n      this.enqueueDocumentValidation();\n    }\n  }\n  /**\n   * @param {!CustomStyleProvider} customStyle\n   * @return {HTMLStyleElement}\n   */\n  getStyleForCustomStyle(customStyle) {\n    let style;\n    if (customStyle['getStyle']) {\n      style = customStyle['getStyle']();\n    } else {\n      style = customStyle;\n    }\n    return style;\n  }\n  findStyles() {\n    for (let i = 0; i < this.customStyles.length; i++) {\n      let customStyle = this.customStyles[i];\n      if (customStyle[PROCESSED_MARKER]) {\n        continue;\n      }\n      let style = this.getStyleForCustomStyle(customStyle);\n      if (style) {\n        customStyle[PROCESSED_MARKER] = true;\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        // Also, we must copy over the attributes.\n        let appliedStyle = /** @type {HTMLStyleElement} */(style['__appliedElement']);\n        if (appliedStyle) {\n          for (let i = 0; i < style.attributes.length; i++) {\n            let attr = style.attributes[i];\n            appliedStyle.setAttribute(attr.name, attr.value);\n          }\n        }\n        this.transformerFn(appliedStyle || style);\n      }\n    }\n  }\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse'\nimport * as StyleUtil from './style-util'\nimport {nativeShadow} from './style-settings'\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node['__styleScoped']) {\n      node['__styleScoped'] = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  }\n\n  _transformDom(node, selector, shouldRemoveScope) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children || node.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  }\n\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            StyleUtil.setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          StyleUtil.setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element.__cssBuild;\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = (nativeShadow || cssBuildType === 'shady') ?\n    StyleUtil.toCssText(styleRules, callback) :\n    this.css(styleRules, element.is, element.extends, callback) + '\\n\\n';\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? `[is=${scope}]` : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  /**\n   * transforms a css rule to a scoped rule.\n   *\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule['selector'] = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = rule['selector'].split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  }\n\n/**\n * @param {string} selector\n * @param {string} scope\n * @param {string=} hostScope\n */\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`);\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule['selector'] = rule['parsedSelector'];\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  normalizeRootSelector(rule) {\n    if (rule['selector'] === ROOT) {\n      rule['selector'] = 'html';\n    }\n  }\n\n/**\n * @param {string} selector\n */\n  _transformDocumentSelector(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=\\[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n\nexport default new StyleTransformer()","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow} from './style-settings'\nimport StyleTransformer from './style-transformer'\n\nexport let flush = function() {};\n\nif (!nativeShadow) {\n  let elementNeedsScoping = (element) => {\n    return (element.classList &&\n      !element.classList.contains(StyleTransformer.SCOPE_NAME) ||\n      // note: necessary for IE11\n      (element instanceof window['SVGElement'] && (!element.hasAttribute('class') ||\n      element.getAttribute('class').indexOf(StyleTransformer.SCOPE_NAME) < 0)));\n  }\n\n/**\n * @param {Array<MutationRecord|null>|null} mxns\n */\n  let handler = (mxns) => {\n    for (let x=0; x < mxns.length; x++) {\n      let mxn = mxns[x];\n      if (mxn.target === document.documentElement ||\n        mxn.target === document.head) {\n        continue;\n      }\n      for (let i=0; i < mxn.addedNodes.length; i++) {\n        let n = mxn.addedNodes[i];\n        if (elementNeedsScoping(n)) {\n          let root = n.getRootNode();\n          if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // may no longer be in a shadowroot\n            let host = /** @type {ShadowRoot} */(root).host;\n            if (host) {\n              let scope = host.is || host.localName;\n              StyleTransformer.dom(n, scope);\n            }\n          }\n        }\n      }\n      for (let i=0; i < mxn.removedNodes.length; i++) {\n        let n = /** @type {HTMLElement} */(mxn.removedNodes[i]);\n        if (n.nodeType === Node.ELEMENT_NODE) {\n          let classes = undefined;\n          if (n.classList) {\n            classes = Array.from(n.classList);\n          } else if (n.hasAttribute('class')) {\n            classes = n.getAttribute('class').split(/\\s+/);\n          }\n          if (classes !== undefined) {\n            // NOTE: relies on the scoping class always being adjacent to the\n            // SCOPE_NAME class.\n            let classIdx = classes.indexOf(StyleTransformer.SCOPE_NAME);\n            if (classIdx >= 0) {\n              let scope = classes[classIdx + 1];\n              if (scope) {\n                StyleTransformer.dom(n, scope, true);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window.customElements &&\n    !window['customElements']['flush']);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window['HTMLImports']) {\n      window['HTMLImports']['whenReady'](delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse'\n\n/** @const {string} */\nconst infoKey = '__styleInfo';\n\nexport default class StyleInfo {\n  /**\n   * @param {!Element} node\n   * @return {StyleInfo}\n   */\n  static get(node) {\n    return node[infoKey];\n  }\n  /**\n   * @param {!Element} node\n   * @param {StyleInfo} styleInfo\n   * @return {StyleInfo}\n   */\n  static set(node, styleInfo) {\n    node[infoKey] = styleInfo;\n    return styleInfo;\n  }\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    /** @type {StyleNode} */\n    this.styleRules = ast || null;\n    /** @type {Node} */\n    this.placeholder = placeholder || null;\n    /** @type {!Array<string>} */\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    /** @type {Array<Object>} */\n    this.overrideStyleProperties = null;\n    /** @type {string} */\n    this.elementName = elementName || '';\n    /** @type {string} */\n    this.cssBuild = cssBuild || '';\n    /** @type {string} */\n    this.typeExtension = typeExtension || '';\n    /** @type {Array<Object>} */\n    this.styleProperties = null;\n    /** @type {?string} */\n    this.scopeSelector = null;\n    /** @type {Node} */\n    this.customStyle = null;\n  }\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment, StyleNode} from './css-parse'\nimport {nativeShadow} from './style-settings'\nimport StyleTransformer from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport * as RX from './common-regex'\nimport StyleInfo from './style-info'\n\n// TODO: dedupe with shady\n/**\n * @const {function(string):boolean}\n */\nconst matchesSelector = ((p) => p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\np.oMatchesSelector || p.webkitMatchesSelector)(window.Element.prototype);\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n/**\n * decorates styles with rule info and returns an array of used style property names\n *\n * @param {StyleNode} rules\n * @return {Array<string>}\n */\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule['rules'] = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = RX.VAR_ASSIGN;\n      let cssText = rule['parsedCssText'];\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule['parsedCssText']);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(RX.BRACKETED, '')\n      .replace(RX.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = RX.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        RX.MIXIN_MATCH.lastIndex = 0;\n        m = RX.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule['cssText'] = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule['cssText'];\n    let output = rule['cssText'];\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = RX.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule['cssText'] = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  /**\n   * @param {StyleNode} rules\n   * @param {Element} element\n   */\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule['parsedSelector'];\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  /**\n   * @param {Element} scope\n   * @param {StyleNode} rule\n   * @param {string|undefined} cssBuild\n   * @param {function(Object)} callback\n   */\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let isExtends = StyleUtil.getIsExtends(scope);\n    let hostScope = scope.is ?\n      StyleTransformer._calcHostScope(isExtends.is, isExtends.extends) :\n      'html';\n    let parsedSelector = rule['parsedSelector'];\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(isExtends.is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n/**\n * @param {Element} scope\n * @param {StyleNode} rules\n * @return {Object}\n */\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules['__cssBuild'];\n    StyleUtil.forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  /**\n   * @param {Element} element\n   * @param {Object} properties\n   * @param {string} scopeSelector\n   */\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let isExtends = StyleUtil.getIsExtends(element);\n    let hostSelector = StyleTransformer\n      ._calcHostScope(isExtends.is, isExtends.extends);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(RX.HOST_PREFIX + rxHostSelector +\n      RX.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule['cssText']) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  /**\n   * @param {Element} element\n   * @param {StyleNode} rules\n   * @param {string} scopeSelector\n   * @return {Object}\n   */\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule['keyframesName']] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  /**\n   * @param {StyleNode} keyframesRule\n   * @return {function(string):string}\n   */\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n/**\n * Transforms `@keyframes` names to be unique for the current host.\n * Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n *\n * @param {StyleNode} rule\n * @param {string} scopeId\n */\n  _scopeKeyframes(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule['keyframesName'], 'g');\n    rule.transformedKeyframesName = rule['keyframesName'] + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    rule['selector'] = rule.transformedSelector.replace(\n        rule['keyframesName'], rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  /**\n   * @param {StyleNode} rule\n   * @param {RegExp} hostRx\n   * @param {string} hostSelector\n   * @param {string} scopeId\n   */\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule['selector'] = parts.join(',');\n  }\n\n  /**\n   * @param {Element} element\n   * @param {string} selector\n   * @param {string} old\n   */\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      StyleUtil.setElementClassRaw(element, v);\n    }\n  }\n\n  /**\n   * @param {Element} element\n   * @param {Object} properties\n   * @param {string} selector\n   * @param {Element} style\n   * @return {Element}\n   */\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s['_useCount']--;\n      if (s['_useCount'] <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style['_useCount'] = style['_useCount'] || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style['_useCount']++;\n      }\n      styleInfo.customStyle = style;\n    }\n    // @media rules may be stale in IE 10 and 11\n    if (IS_IE) {\n      style.textContent = style.textContent;\n    }\n    return style;\n  }\n\n  /**\n   * @param {Element} style\n   * @param {Object} properties\n   */\n  applyCustomStyle(style, properties) {\n    let rules = StyleUtil.rulesForStyle(/** @type {HTMLStyleElement} */(style));\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      let css = rule['cssText'] = rule['parsedCssText'];\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(/** @type {string} */(css));\n        // replace with reified properties, scenario is same as mixin\n        rule['cssText'] = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\n/**\n * @param {number} n\n * @param {Array<number>} bits\n */\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32, 10);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexport default new StyleProperties();","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util'\nimport {nativeShadow} from './style-settings'\n\nlet placeholderMap = {};\n\n/**\n * @const {Object|undefined}\n */\nconst ce = window['customElements'];\nif (ce && !nativeShadow) {\n  /**\n   * @const {function(string,Function,Object=)}\n   */\n  const origDefine = ce['define'];\n  ce['define'] = function(name, clazz, options) {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(ce, name, clazz, options);\n  };\n}\n\nexport default placeholderMap;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\nexport default class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n"]}